// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: gaple_api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GapleDominoChainPosition int32

const (
	GapleDominoChainPosition_GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_UNSPECIFIED GapleDominoChainPosition = 0
	GapleDominoChainPosition_GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_HEAD        GapleDominoChainPosition = 1
	GapleDominoChainPosition_GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_TAIL        GapleDominoChainPosition = 2
	GapleDominoChainPosition_GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_BOTH        GapleDominoChainPosition = 3 // server->client indicate possible action
)

// Enum value maps for GapleDominoChainPosition.
var (
	GapleDominoChainPosition_name = map[int32]string{
		0: "GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_UNSPECIFIED",
		1: "GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_HEAD",
		2: "GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_TAIL",
		3: "GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_BOTH",
	}
	GapleDominoChainPosition_value = map[string]int32{
		"GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_UNSPECIFIED": 0,
		"GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_HEAD":        1,
		"GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_TAIL":        2,
		"GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_BOTH":        3,
	}
)

func (x GapleDominoChainPosition) Enum() *GapleDominoChainPosition {
	p := new(GapleDominoChainPosition)
	*p = x
	return p
}

func (x GapleDominoChainPosition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GapleDominoChainPosition) Descriptor() protoreflect.EnumDescriptor {
	return file_gaple_api_proto_enumTypes[0].Descriptor()
}

func (GapleDominoChainPosition) Type() protoreflect.EnumType {
	return &file_gaple_api_proto_enumTypes[0]
}

func (x GapleDominoChainPosition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GapleDominoChainPosition.Descriptor instead.
func (GapleDominoChainPosition) EnumDescriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{0}
}

type GapleDominoFinishGameType int32

const (
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_UNSPECIFIED GapleDominoFinishGameType = 0
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_SINGLE      GapleDominoFinishGameType = 1
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_DOUBLE      GapleDominoFinishGameType = 2
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_TRIPLE      GapleDominoFinishGameType = 3
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUARTET     GapleDominoFinishGameType = 4
	GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUINTET     GapleDominoFinishGameType = 5
)

// Enum value maps for GapleDominoFinishGameType.
var (
	GapleDominoFinishGameType_name = map[int32]string{
		0: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_UNSPECIFIED",
		1: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_SINGLE",
		2: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_DOUBLE",
		3: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_TRIPLE",
		4: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUARTET",
		5: "GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUINTET",
	}
	GapleDominoFinishGameType_value = map[string]int32{
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_UNSPECIFIED": 0,
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_SINGLE":      1,
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_DOUBLE":      2,
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_TRIPLE":      3,
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUARTET":     4,
		"GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_QUINTET":     5,
	}
)

func (x GapleDominoFinishGameType) Enum() *GapleDominoFinishGameType {
	p := new(GapleDominoFinishGameType)
	*p = x
	return p
}

func (x GapleDominoFinishGameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GapleDominoFinishGameType) Descriptor() protoreflect.EnumDescriptor {
	return file_gaple_api_proto_enumTypes[1].Descriptor()
}

func (GapleDominoFinishGameType) Type() protoreflect.EnumType {
	return &file_gaple_api_proto_enumTypes[1]
}

func (x GapleDominoFinishGameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GapleDominoFinishGameType.Descriptor instead.
func (GapleDominoFinishGameType) EnumDescriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{1}
}

type GapleDominoAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string                   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Domino   *Domino                  `protobuf:"bytes,2,opt,name=domino,proto3" json:"domino,omitempty"`
	Position GapleDominoChainPosition `protobuf:"varint,3,opt,name=position,proto3,enum=api.GapleDominoChainPosition" json:"position,omitempty"`
}

func (x *GapleDominoAction) Reset() {
	*x = GapleDominoAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoAction) ProtoMessage() {}

func (x *GapleDominoAction) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoAction.ProtoReflect.Descriptor instead.
func (*GapleDominoAction) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{0}
}

func (x *GapleDominoAction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GapleDominoAction) GetDomino() *Domino {
	if x != nil {
		return x.Domino
	}
	return nil
}

func (x *GapleDominoAction) GetPosition() GapleDominoChainPosition {
	if x != nil {
		return x.Position
	}
	return GapleDominoChainPosition_GAPLE_DOMINO_CHAIN_POSITION_GAPLE_DOMINO_CHAIN_UNSPECIFIED
}

type GapleDominoPenalty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GainPlayer string `protobuf:"bytes,1,opt,name=gain_player,json=gainPlayer,proto3" json:"gain_player,omitempty"`
	LostPlayer string `protobuf:"bytes,2,opt,name=lost_player,json=lostPlayer,proto3" json:"lost_player,omitempty"`
	Chips      int32  `protobuf:"varint,3,opt,name=chips,proto3" json:"chips,omitempty"`
}

func (x *GapleDominoPenalty) Reset() {
	*x = GapleDominoPenalty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoPenalty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoPenalty) ProtoMessage() {}

func (x *GapleDominoPenalty) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoPenalty.ProtoReflect.Descriptor instead.
func (*GapleDominoPenalty) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{1}
}

func (x *GapleDominoPenalty) GetGainPlayer() string {
	if x != nil {
		return x.GainPlayer
	}
	return ""
}

func (x *GapleDominoPenalty) GetLostPlayer() string {
	if x != nil {
		return x.LostPlayer
	}
	return ""
}

func (x *GapleDominoPenalty) GetChips() int32 {
	if x != nil {
		return x.Chips
	}
	return 0
}

// note: when user that was disconnected reenter the table and that game not yet
// ended server will:
//   - send the hand cards to client
//   - send update desk that CONTAINS CHAIN BUT NOT HAVE ACTION like normal would
//     do
type GapleDominoUpdateDesk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NPlayers                int32              `protobuf:"varint,1,opt,name=n_players,json=nPlayers,proto3" json:"n_players,omitempty"`
	IsNewTurn               bool               `protobuf:"varint,2,opt,name=is_new_turn,json=isNewTurn,proto3" json:"is_new_turn,omitempty"`
	IsUpdateChain           bool               `protobuf:"varint,3,opt,name=is_update_chain,json=isUpdateChain,proto3" json:"is_update_chain,omitempty"`
	IsAppendDominoToChain   bool               `protobuf:"varint,4,opt,name=is_append_domino_to_chain,json=isAppendDominoToChain,proto3" json:"is_append_domino_to_chain,omitempty"`
	IsPenaltyOccur          bool               `protobuf:"varint,5,opt,name=is_penalty_occur,json=isPenaltyOccur,proto3" json:"is_penalty_occur,omitempty"`
	IsUpdateLegalActions    bool               `protobuf:"varint,6,opt,name=is_update_legal_actions,json=isUpdateLegalActions,proto3" json:"is_update_legal_actions,omitempty"`
	IsUpdateNumRemainedCard bool               `protobuf:"varint,7,opt,name=is_update_num_remained_card,json=isUpdateNumRemainedCard,proto3" json:"is_update_num_remained_card,omitempty"`
	Chains                  []int32            `protobuf:"varint,8,rep,packed,name=chains,proto3" json:"chains,omitempty"` // update entire chain on tables
	Action                  *GapleDominoAction `protobuf:"bytes,9,opt,name=action,proto3" json:"action,omitempty"`         //  last piece of domino, adding it to the table
	// chain in correspond chain's end
	LegalActions []*GapleDominoAction              `protobuf:"bytes,10,rep,name=legal_actions,json=legalActions,proto3" json:"legal_actions,omitempty"` // for displaying playable cards
	Penalty      *GapleDominoPenalty               `protobuf:"bytes,11,opt,name=penalty,proto3" json:"penalty,omitempty"`
	Remaineds    []*GapleDominoPresenceNumRemained `protobuf:"bytes,12,rep,name=remaineds,proto3" json:"remaineds,omitempty"`
	InTurn       string                            `protobuf:"bytes,13,opt,name=in_turn,json=inTurn,proto3" json:"in_turn,omitempty"` // uid of player in current turn
}

func (x *GapleDominoUpdateDesk) Reset() {
	*x = GapleDominoUpdateDesk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoUpdateDesk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoUpdateDesk) ProtoMessage() {}

func (x *GapleDominoUpdateDesk) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoUpdateDesk.ProtoReflect.Descriptor instead.
func (*GapleDominoUpdateDesk) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{2}
}

func (x *GapleDominoUpdateDesk) GetNPlayers() int32 {
	if x != nil {
		return x.NPlayers
	}
	return 0
}

func (x *GapleDominoUpdateDesk) GetIsNewTurn() bool {
	if x != nil {
		return x.IsNewTurn
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetIsUpdateChain() bool {
	if x != nil {
		return x.IsUpdateChain
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetIsAppendDominoToChain() bool {
	if x != nil {
		return x.IsAppendDominoToChain
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetIsPenaltyOccur() bool {
	if x != nil {
		return x.IsPenaltyOccur
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetIsUpdateLegalActions() bool {
	if x != nil {
		return x.IsUpdateLegalActions
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetIsUpdateNumRemainedCard() bool {
	if x != nil {
		return x.IsUpdateNumRemainedCard
	}
	return false
}

func (x *GapleDominoUpdateDesk) GetChains() []int32 {
	if x != nil {
		return x.Chains
	}
	return nil
}

func (x *GapleDominoUpdateDesk) GetAction() *GapleDominoAction {
	if x != nil {
		return x.Action
	}
	return nil
}

func (x *GapleDominoUpdateDesk) GetLegalActions() []*GapleDominoAction {
	if x != nil {
		return x.LegalActions
	}
	return nil
}

func (x *GapleDominoUpdateDesk) GetPenalty() *GapleDominoPenalty {
	if x != nil {
		return x.Penalty
	}
	return nil
}

func (x *GapleDominoUpdateDesk) GetRemaineds() []*GapleDominoPresenceNumRemained {
	if x != nil {
		return x.Remaineds
	}
	return nil
}

func (x *GapleDominoUpdateDesk) GetInTurn() string {
	if x != nil {
		return x.InTurn
	}
	return ""
}

type GapleDominoPresenceNumRemained struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NumCard int32  `protobuf:"varint,2,opt,name=num_card,json=numCard,proto3" json:"num_card,omitempty"`
}

func (x *GapleDominoPresenceNumRemained) Reset() {
	*x = GapleDominoPresenceNumRemained{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoPresenceNumRemained) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoPresenceNumRemained) ProtoMessage() {}

func (x *GapleDominoPresenceNumRemained) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoPresenceNumRemained.ProtoReflect.Descriptor instead.
func (*GapleDominoPresenceNumRemained) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{3}
}

func (x *GapleDominoPresenceNumRemained) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GapleDominoPresenceNumRemained) GetNumCard() int32 {
	if x != nil {
		return x.NumCard
	}
	return 0
}

type GapleDominoPresenceHand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string    `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Dominos []*Domino `protobuf:"bytes,2,rep,name=dominos,proto3" json:"dominos,omitempty"`
}

func (x *GapleDominoPresenceHand) Reset() {
	*x = GapleDominoPresenceHand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoPresenceHand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoPresenceHand) ProtoMessage() {}

func (x *GapleDominoPresenceHand) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoPresenceHand.ProtoReflect.Descriptor instead.
func (*GapleDominoPresenceHand) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{4}
}

func (x *GapleDominoPresenceHand) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GapleDominoPresenceHand) GetDominos() []*Domino {
	if x != nil {
		return x.Dominos
	}
	return nil
}

// server->client at the beginning of the game, also when a disconnected player
// reenter
type GapleDominoUpdateDeal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hand *GapleDominoPresenceHand `protobuf:"bytes,1,opt,name=hand,proto3" json:"hand,omitempty"`
}

func (x *GapleDominoUpdateDeal) Reset() {
	*x = GapleDominoUpdateDeal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDominoUpdateDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDominoUpdateDeal) ProtoMessage() {}

func (x *GapleDominoUpdateDeal) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDominoUpdateDeal.ProtoReflect.Descriptor instead.
func (*GapleDominoUpdateDeal) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{5}
}

func (x *GapleDominoUpdateDeal) GetHand() *GapleDominoPresenceHand {
	if x != nil {
		return x.Hand
	}
	return nil
}

type GapleDoninoUpdateFinish struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   GapleDominoFinishGameType `protobuf:"varint,1,opt,name=type,proto3,enum=api.GapleDominoFinishGameType" json:"type,omitempty"`
	Winner string                    `protobuf:"bytes,2,opt,name=winner,proto3" json:"winner,omitempty"`
}

func (x *GapleDoninoUpdateFinish) Reset() {
	*x = GapleDoninoUpdateFinish{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gaple_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GapleDoninoUpdateFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GapleDoninoUpdateFinish) ProtoMessage() {}

func (x *GapleDoninoUpdateFinish) ProtoReflect() protoreflect.Message {
	mi := &file_gaple_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GapleDoninoUpdateFinish.ProtoReflect.Descriptor instead.
func (*GapleDoninoUpdateFinish) Descriptor() ([]byte, []int) {
	return file_gaple_api_proto_rawDescGZIP(), []int{6}
}

func (x *GapleDoninoUpdateFinish) GetType() GapleDominoFinishGameType {
	if x != nil {
		return x.Type
	}
	return GapleDominoFinishGameType_GAPLE_DOMINO_FINISH_GAME_TYPE_GAPLE_DOMINO_FINISHGAME_TYPE_UNSPECIFIED
}

func (x *GapleDoninoUpdateFinish) GetWinner() string {
	if x != nil {
		return x.Winner
	}
	return ""
}

var File_gaple_api_proto protoreflect.FileDescriptor

var file_gaple_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x12, 0x62, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x71, 0x71,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x47,
	0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x06, 0x64, 0x6f, 0x6d,
	0x69, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x12, 0x39,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69,
	0x6e, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6c, 0x0a, 0x12, 0x47, 0x61, 0x70,
	0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x22, 0xe9, 0x04, 0x0a, 0x15, 0x47, 0x61, 0x70, 0x6c,
	0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x61, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x54, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x6f,
	0x63, 0x63, 0x75, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x50, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x5f, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3c, 0x0a, 0x1b, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x75, 0x6d, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61,
	0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0d, 0x6c, 0x65, 0x67, 0x61, 0x6c,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6c, 0x65, 0x67, 0x61, 0x6c, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x61, 0x70, 0x6c,
	0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x52, 0x07,
	0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69,
	0x6e, 0x65, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x52,
	0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x65, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e,
	0x5f, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x54,
	0x75, 0x72, 0x6e, 0x22, 0x54, 0x0a, 0x1e, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69,
	0x6e, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x6d,
	0x61, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6e, 0x75, 0x6d, 0x43, 0x61, 0x72, 0x64, 0x22, 0x59, 0x0a, 0x17, 0x47, 0x61, 0x70,
	0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x48, 0x61, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x07, 0x64, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x52, 0x07, 0x64, 0x6f, 0x6d,
	0x69, 0x6e, 0x6f, 0x73, 0x22, 0x49, 0x0a, 0x15, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d,
	0x69, 0x6e, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x12, 0x30, 0x0a,
	0x04, 0x68, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64, 0x22,
	0x65, 0x0a, 0x17, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6e, 0x69, 0x6e, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2a, 0x85, 0x02, 0x0a, 0x18, 0x47, 0x61, 0x70, 0x6c, 0x65,
	0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x3a, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d,
	0x49, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f,
	0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x37, 0x0a, 0x33, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d,
	0x49, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f,
	0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x37, 0x0a, 0x33,
	0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41,
	0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x41, 0x50, 0x4c,
	0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x54,
	0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x37, 0x0a, 0x33, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e,
	0x4f, 0x5f, 0x43, 0x48, 0x41, 0x49, 0x4e, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x03, 0x2a, 0xcc,
	0x03, 0x0a, 0x19, 0x47, 0x61, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x6d, 0x69, 0x6e, 0x6f, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x46,
	0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e,
	0x49, 0x53, 0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41,
	0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53,
	0x48, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x45, 0x0a, 0x41, 0x47, 0x41, 0x50, 0x4c,
	0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f,
	0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f,
	0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x10, 0x01, 0x12,
	0x45, 0x0a, 0x41, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f,
	0x55, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x45, 0x0a, 0x41, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f,
	0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f,
	0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x47, 0x41, 0x4d, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52, 0x49, 0x50, 0x4c, 0x45, 0x10, 0x03, 0x12, 0x46, 0x0a,
	0x42, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49,
	0x4e, 0x49, 0x53, 0x48, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47,
	0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49,
	0x53, 0x48, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x51, 0x55, 0x41, 0x52,
	0x54, 0x45, 0x54, 0x10, 0x04, 0x12, 0x46, 0x0a, 0x42, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44,
	0x4f, 0x4d, 0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x5f, 0x47, 0x41, 0x4d,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x41, 0x50, 0x4c, 0x45, 0x5f, 0x44, 0x4f, 0x4d,
	0x49, 0x4e, 0x4f, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x51, 0x55, 0x49, 0x4e, 0x54, 0x45, 0x54, 0x10, 0x05, 0x42, 0x37, 0x5a,
	0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x69, 0x61, 0x6f,
	0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x67, 0x61, 0x6d, 0x65, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x63, 0x67, 0x70, 0x2d, 0x62, 0x69, 0x6e, 0x67, 0x2d, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gaple_api_proto_rawDescOnce sync.Once
	file_gaple_api_proto_rawDescData = file_gaple_api_proto_rawDesc
)

func file_gaple_api_proto_rawDescGZIP() []byte {
	file_gaple_api_proto_rawDescOnce.Do(func() {
		file_gaple_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_gaple_api_proto_rawDescData)
	})
	return file_gaple_api_proto_rawDescData
}

var file_gaple_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gaple_api_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gaple_api_proto_goTypes = []interface{}{
	(GapleDominoChainPosition)(0),          // 0: api.GapleDominoChainPosition
	(GapleDominoFinishGameType)(0),         // 1: api.GapleDominoFinishGameType
	(*GapleDominoAction)(nil),              // 2: api.GapleDominoAction
	(*GapleDominoPenalty)(nil),             // 3: api.GapleDominoPenalty
	(*GapleDominoUpdateDesk)(nil),          // 4: api.GapleDominoUpdateDesk
	(*GapleDominoPresenceNumRemained)(nil), // 5: api.GapleDominoPresenceNumRemained
	(*GapleDominoPresenceHand)(nil),        // 6: api.GapleDominoPresenceHand
	(*GapleDominoUpdateDeal)(nil),          // 7: api.GapleDominoUpdateDeal
	(*GapleDoninoUpdateFinish)(nil),        // 8: api.GapleDoninoUpdateFinish
	(*Domino)(nil),                         // 9: api.Domino
}
var file_gaple_api_proto_depIdxs = []int32{
	9, // 0: api.GapleDominoAction.domino:type_name -> api.Domino
	0, // 1: api.GapleDominoAction.position:type_name -> api.GapleDominoChainPosition
	2, // 2: api.GapleDominoUpdateDesk.action:type_name -> api.GapleDominoAction
	2, // 3: api.GapleDominoUpdateDesk.legal_actions:type_name -> api.GapleDominoAction
	3, // 4: api.GapleDominoUpdateDesk.penalty:type_name -> api.GapleDominoPenalty
	5, // 5: api.GapleDominoUpdateDesk.remaineds:type_name -> api.GapleDominoPresenceNumRemained
	9, // 6: api.GapleDominoPresenceHand.dominos:type_name -> api.Domino
	6, // 7: api.GapleDominoUpdateDeal.hand:type_name -> api.GapleDominoPresenceHand
	1, // 8: api.GapleDoninoUpdateFinish.type:type_name -> api.GapleDominoFinishGameType
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_gaple_api_proto_init() }
func file_gaple_api_proto_init() {
	if File_gaple_api_proto != nil {
		return
	}
	file_bandarqq_api_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gaple_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoPenalty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoUpdateDesk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoPresenceNumRemained); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoPresenceHand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDominoUpdateDeal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gaple_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GapleDoninoUpdateFinish); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gaple_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gaple_api_proto_goTypes,
		DependencyIndexes: file_gaple_api_proto_depIdxs,
		EnumInfos:         file_gaple_api_proto_enumTypes,
		MessageInfos:      file_gaple_api_proto_msgTypes,
	}.Build()
	File_gaple_api_proto = out.File
	file_gaple_api_proto_rawDesc = nil
	file_gaple_api_proto_goTypes = nil
	file_gaple_api_proto_depIdxs = nil
}
