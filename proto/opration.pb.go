// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: opration.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	GameId      int64  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName    string `protobuf:"bytes,4,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	NoBet       int64  `protobuf:"varint,5,opt,name=no_bet,json=noBet,proto3" json:"no_bet,omitempty"`
	NoWin       int64  `protobuf:"varint,6,opt,name=no_win,json=noWin,proto3" json:"no_win,omitempty"`
	NoLost      int64  `protobuf:"varint,7,opt,name=no_lost,json=noLost,proto3" json:"no_lost,omitempty"`
	ChipWin     uint64 `protobuf:"varint,8,opt,name=chip_win,json=chipWin,proto3" json:"chip_win,omitempty"`
	ChipLost    uint64 `protobuf:"varint,9,opt,name=chip_lost,json=chipLost,proto3" json:"chip_lost,omitempty"`
	ChipBalance int64  `protobuf:"varint,10,opt,name=chip_balance,json=chipBalance,proto3" json:"chip_balance,omitempty"`
	Action      int64  `protobuf:"varint,11,opt,name=action,proto3" json:"action,omitempty"`
	Status      string `protobuf:"bytes,12,opt,name=status,proto3" json:"status,omitempty"`
	DateUnix    int64  `protobuf:"varint,13,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
	Mcb         int64  `protobuf:"varint,14,opt,name=mcb,proto3" json:"mcb,omitempty"`
}

func (x *OpPlayer) Reset() {
	*x = OpPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayer) ProtoMessage() {}

func (x *OpPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayer.ProtoReflect.Descriptor instead.
func (*OpPlayer) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{0}
}

func (x *OpPlayer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpPlayer) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OpPlayer) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *OpPlayer) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *OpPlayer) GetNoBet() int64 {
	if x != nil {
		return x.NoBet
	}
	return 0
}

func (x *OpPlayer) GetNoWin() int64 {
	if x != nil {
		return x.NoWin
	}
	return 0
}

func (x *OpPlayer) GetNoLost() int64 {
	if x != nil {
		return x.NoLost
	}
	return 0
}

func (x *OpPlayer) GetChipWin() uint64 {
	if x != nil {
		return x.ChipWin
	}
	return 0
}

func (x *OpPlayer) GetChipLost() uint64 {
	if x != nil {
		return x.ChipLost
	}
	return 0
}

func (x *OpPlayer) GetChipBalance() int64 {
	if x != nil {
		return x.ChipBalance
	}
	return 0
}

func (x *OpPlayer) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *OpPlayer) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OpPlayer) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

func (x *OpPlayer) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

type OpPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId   int64  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	FromUnix int64  `protobuf:"varint,3,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix   int64  `protobuf:"varint,4,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Action   int64  `protobuf:"varint,5,opt,name=action,proto3" json:"action,omitempty"`
	Offset   int64  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit    int64  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *OpPlayerRequest) Reset() {
	*x = OpPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayerRequest) ProtoMessage() {}

func (x *OpPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayerRequest.ProtoReflect.Descriptor instead.
func (*OpPlayerRequest) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{1}
}

func (x *OpPlayerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpPlayerRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *OpPlayerRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *OpPlayerRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *OpPlayerRequest) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *OpPlayerRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OpPlayerRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type OpPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpPlayers     []*OpPlayer `protobuf:"bytes,1,rep,name=op_players,json=opPlayers,proto3" json:"op_players,omitempty"`
	Total         int64       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Offset        int64       `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int64       `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalChipWin  uint64      `protobuf:"varint,5,opt,name=total_chip_win,json=totalChipWin,proto3" json:"total_chip_win,omitempty"`
	TotalChipLost uint64      `protobuf:"varint,6,opt,name=total_chip_lost,json=totalChipLost,proto3" json:"total_chip_lost,omitempty"`
}

func (x *OpPlayerResponse) Reset() {
	*x = OpPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayerResponse) ProtoMessage() {}

func (x *OpPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayerResponse.ProtoReflect.Descriptor instead.
func (*OpPlayerResponse) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{2}
}

func (x *OpPlayerResponse) GetOpPlayers() []*OpPlayer {
	if x != nil {
		return x.OpPlayers
	}
	return nil
}

func (x *OpPlayerResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpPlayerResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OpPlayerResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OpPlayerResponse) GetTotalChipWin() uint64 {
	if x != nil {
		return x.TotalChipWin
	}
	return 0
}

func (x *OpPlayerResponse) GetTotalChipLost() uint64 {
	if x != nil {
		return x.TotalChipLost
	}
	return 0
}

type MatchDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId         int64  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName       string `protobuf:"bytes,2,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	Mcb            int64  `protobuf:"varint,3,opt,name=mcb,proto3" json:"mcb,omitempty"`
	NumMatchPlayed int64  `protobuf:"varint,4,opt,name=num_match_played,json=numMatchPlayed,proto3" json:"num_match_played,omitempty"`
	ChipFee        uint64 `protobuf:"varint,5,opt,name=chip_fee,json=chipFee,proto3" json:"chip_fee,omitempty"`
	Detail         string `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	TableId        string `protobuf:"bytes,7,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	DateUnix       int64  `protobuf:"varint,8,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
}

func (x *MatchDetail) Reset() {
	*x = MatchDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetail) ProtoMessage() {}

func (x *MatchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetail.ProtoReflect.Descriptor instead.
func (*MatchDetail) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{3}
}

func (x *MatchDetail) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchDetail) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *MatchDetail) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

func (x *MatchDetail) GetNumMatchPlayed() int64 {
	if x != nil {
		return x.NumMatchPlayed
	}
	return 0
}

func (x *MatchDetail) GetChipFee() uint64 {
	if x != nil {
		return x.ChipFee
	}
	return 0
}

func (x *MatchDetail) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *MatchDetail) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *MatchDetail) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

type MatchDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId     int64  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	FromUnix   int64  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix     int64  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	UserId     string `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserPairId string `protobuf:"bytes,5,opt,name=user_pair_id,json=userPairId,proto3" json:"user_pair_id,omitempty"`
	Limit      int64  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     int64  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MatchDetailRequest) Reset() {
	*x = MatchDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetailRequest) ProtoMessage() {}

func (x *MatchDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetailRequest.ProtoReflect.Descriptor instead.
func (*MatchDetailRequest) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{4}
}

func (x *MatchDetailRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchDetailRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *MatchDetailRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *MatchDetailRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MatchDetailRequest) GetUserPairId() string {
	if x != nil {
		return x.UserPairId
	}
	return ""
}

func (x *MatchDetailRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MatchDetailRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type MatchDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchDetails []*MatchDetail `protobuf:"bytes,1,rep,name=match_details,json=matchDetails,proto3" json:"match_details,omitempty"`
	Total        int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Limit        int64          `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset       int64          `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *MatchDetailResponse) Reset() {
	*x = MatchDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetailResponse) ProtoMessage() {}

func (x *MatchDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetailResponse.ProtoReflect.Descriptor instead.
func (*MatchDetailResponse) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{5}
}

func (x *MatchDetailResponse) GetMatchDetails() []*MatchDetail {
	if x != nil {
		return x.MatchDetails
	}
	return nil
}

func (x *MatchDetailResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MatchDetailResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MatchDetailResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId  string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Chip    int64  `protobuf:"varint,2,opt,name=chip,proto3" json:"chip,omitempty"`
	ChipAdd int64  `protobuf:"varint,3,opt,name=chip_add,json=chipAdd,proto3" json:"chip_add,omitempty"`
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlayerData) GetChip() int64 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *PlayerData) GetChipAdd() int64 {
	if x != nil {
		return x.ChipAdd
	}
	return 0
}

type MatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId   int64  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameCode string `protobuf:"bytes,3,opt,name=game_code,json=gameCode,proto3" json:"game_code,omitempty"`
	Mcb      int64  `protobuf:"varint,4,opt,name=mcb,proto3" json:"mcb,omitempty"`
	ChipFee  int64  `protobuf:"varint,5,opt,name=chip_fee,json=chipFee,proto3" json:"chip_fee,omitempty"`
	MatchId  string `protobuf:"bytes,6,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *MatchData) Reset() {
	*x = MatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchData) ProtoMessage() {}

func (x *MatchData) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchData.ProtoReflect.Descriptor instead.
func (*MatchData) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{7}
}

func (x *MatchData) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchData) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *MatchData) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

func (x *MatchData) GetChipFee() int64 {
	if x != nil {
		return x.ChipFee
	}
	return 0
}

func (x *MatchData) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

type OpReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData []*PlayerData `protobuf:"bytes,1,rep,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
	MatchData  *MatchData    `protobuf:"bytes,2,opt,name=match_data,json=matchData,proto3" json:"match_data,omitempty"`
}

func (x *OpReport) Reset() {
	*x = OpReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpReport) ProtoMessage() {}

func (x *OpReport) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpReport.ProtoReflect.Descriptor instead.
func (*OpReport) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{8}
}

func (x *OpReport) GetPlayerData() []*PlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *OpReport) GetMatchData() *MatchData {
	if x != nil {
		return x.MatchData
	}
	return nil
}

type GoldStatistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeUpdateUnix int64        `protobuf:"varint,1,opt,name=time_update_unix,json=timeUpdateUnix,proto3" json:"time_update_unix,omitempty"`
	Pay            int64        `protobuf:"varint,2,opt,name=pay,proto3" json:"pay,omitempty"`
	Promotion      int64        `protobuf:"varint,3,opt,name=promotion,proto3" json:"promotion,omitempty"`
	MatchData      []*MatchData `protobuf:"bytes,4,rep,name=match_data,json=matchData,proto3" json:"match_data,omitempty"`
	AgCashout      int64        `protobuf:"varint,5,opt,name=ag_cashout,json=agCashout,proto3" json:"ag_cashout,omitempty"`
	AgBank         int64        `protobuf:"varint,6,opt,name=ag_bank,json=agBank,proto3" json:"ag_bank,omitempty"`
	Chips          int64        `protobuf:"varint,7,opt,name=chips,proto3" json:"chips,omitempty"`
}

func (x *GoldStatistic) Reset() {
	*x = GoldStatistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatistic) ProtoMessage() {}

func (x *GoldStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatistic.ProtoReflect.Descriptor instead.
func (*GoldStatistic) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{9}
}

func (x *GoldStatistic) GetTimeUpdateUnix() int64 {
	if x != nil {
		return x.TimeUpdateUnix
	}
	return 0
}

func (x *GoldStatistic) GetPay() int64 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *GoldStatistic) GetPromotion() int64 {
	if x != nil {
		return x.Promotion
	}
	return 0
}

func (x *GoldStatistic) GetMatchData() []*MatchData {
	if x != nil {
		return x.MatchData
	}
	return nil
}

func (x *GoldStatistic) GetAgCashout() int64 {
	if x != nil {
		return x.AgCashout
	}
	return 0
}

func (x *GoldStatistic) GetAgBank() int64 {
	if x != nil {
		return x.AgBank
	}
	return 0
}

func (x *GoldStatistic) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

type GoldStatisticRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUnix int64 `protobuf:"varint,1,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix   int64 `protobuf:"varint,2,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit    int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int64 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GoldStatisticRequest) Reset() {
	*x = GoldStatisticRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatisticRequest) ProtoMessage() {}

func (x *GoldStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatisticRequest.ProtoReflect.Descriptor instead.
func (*GoldStatisticRequest) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{10}
}

func (x *GoldStatisticRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *GoldStatisticRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *GoldStatisticRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GoldStatisticRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GoldStatisticResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoldStatistics []*GoldStatistic `protobuf:"bytes,1,rep,name=gold_statistics,json=goldStatistics,proto3" json:"gold_statistics,omitempty"`
	Limit          int64            `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int64            `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Total          int64            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GoldStatisticResponse) Reset() {
	*x = GoldStatisticResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_opration_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoldStatisticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatisticResponse) ProtoMessage() {}

func (x *GoldStatisticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_opration_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatisticResponse.ProtoReflect.Descriptor instead.
func (*GoldStatisticResponse) Descriptor() ([]byte, []int) {
	return file_opration_proto_rawDescGZIP(), []int{11}
}

func (x *GoldStatisticResponse) GetGoldStatistics() []*GoldStatistic {
	if x != nil {
		return x.GoldStatistics
	}
	return nil
}

func (x *GoldStatisticResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GoldStatisticResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GoldStatisticResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_opration_proto protoreflect.FileDescriptor

var file_opration_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6f, 0x70, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0xf7, 0x02, 0x0a, 0x08, 0x4f, 0x70, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15,
	0x0a, 0x06, 0x6e, 0x6f, 0x5f, 0x62, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6e, 0x6f, 0x42, 0x65, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6f, 0x5f, 0x77, 0x69, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x57, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e,
	0x6f, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x77, 0x69,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70, 0x57, 0x69, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x6c, 0x6f, 0x73, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x68, 0x69, 0x70, 0x4c, 0x6f, 0x73, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x69, 0x70, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x63, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x63, 0x62, 0x22,
	0xbf, 0x01, 0x0a, 0x0f, 0x4f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x6e,
	0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x6e,
	0x69, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x4f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x6f, 0x70, 0x5f, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4f, 0x70, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x70, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x77, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68, 0x69, 0x70, 0x57, 0x69, 0x6e, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x6c, 0x6f, 0x73,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x68,
	0x69, 0x70, 0x4c, 0x6f, 0x73, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x63, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x63, 0x62, 0x12, 0x28,
	0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x70,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70,
	0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75,
	0x6e, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x6e, 0x69, 0x78, 0x22, 0xcc, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x6e, 0x69, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x78,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x6f, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x69, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x13, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0d, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x68, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70,
	0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70, 0x41, 0x64, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x09,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x63, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x63,
	0x62, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x70, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x08, 0x4f, 0x70, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x0d, 0x47, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x69, 0x78,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x61, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2d, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x67, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x67, 0x43, 0x61, 0x73, 0x68, 0x6f, 0x75, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x61, 0x67, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x22, 0x7a, 0x0a,
	0x14, 0x47, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x6e,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x6e,
	0x69, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x75, 0x6e, 0x69, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x55, 0x6e, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x47, 0x6f,
	0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x67, 0x6f, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x0e, 0x67, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x69, 0x61, 0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x2d, 0x67, 0x61, 0x6d, 0x65,
	0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x67, 0x70, 0x2d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2d, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opration_proto_rawDescOnce sync.Once
	file_opration_proto_rawDescData = file_opration_proto_rawDesc
)

func file_opration_proto_rawDescGZIP() []byte {
	file_opration_proto_rawDescOnce.Do(func() {
		file_opration_proto_rawDescData = protoimpl.X.CompressGZIP(file_opration_proto_rawDescData)
	})
	return file_opration_proto_rawDescData
}

var file_opration_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_opration_proto_goTypes = []interface{}{
	(*OpPlayer)(nil),              // 0: api.OpPlayer
	(*OpPlayerRequest)(nil),       // 1: api.OpPlayerRequest
	(*OpPlayerResponse)(nil),      // 2: api.OpPlayerResponse
	(*MatchDetail)(nil),           // 3: api.MatchDetail
	(*MatchDetailRequest)(nil),    // 4: api.MatchDetailRequest
	(*MatchDetailResponse)(nil),   // 5: api.MatchDetailResponse
	(*PlayerData)(nil),            // 6: api.PlayerData
	(*MatchData)(nil),             // 7: api.MatchData
	(*OpReport)(nil),              // 8: api.OpReport
	(*GoldStatistic)(nil),         // 9: api.GoldStatistic
	(*GoldStatisticRequest)(nil),  // 10: api.GoldStatisticRequest
	(*GoldStatisticResponse)(nil), // 11: api.GoldStatisticResponse
}
var file_opration_proto_depIdxs = []int32{
	0, // 0: api.OpPlayerResponse.op_players:type_name -> api.OpPlayer
	3, // 1: api.MatchDetailResponse.match_details:type_name -> api.MatchDetail
	6, // 2: api.OpReport.player_data:type_name -> api.PlayerData
	7, // 3: api.OpReport.match_data:type_name -> api.MatchData
	7, // 4: api.GoldStatistic.match_data:type_name -> api.MatchData
	9, // 5: api.GoldStatisticResponse.gold_statistics:type_name -> api.GoldStatistic
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_opration_proto_init() }
func file_opration_proto_init() {
	if File_opration_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_opration_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldStatistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldStatisticRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_opration_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoldStatisticResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opration_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_opration_proto_goTypes,
		DependencyIndexes: file_opration_proto_depIdxs,
		MessageInfos:      file_opration_proto_msgTypes,
	}.Build()
	File_opration_proto = out.File
	file_opration_proto_rawDesc = nil
	file_opration_proto_goTypes = nil
	file_opration_proto_depIdxs = nil
}
