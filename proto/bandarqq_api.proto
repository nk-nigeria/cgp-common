syntax = "proto3";

package api;

option go_package = "github.com/nakamaFramework/cgp-bing-module/api";

enum QQBetCell {
  CELL_RED = 0;
  CELL_RED_TWIN = 1;
  CELL_RED_QIU = 2;
  CELL_BLUE = 3;
  CELL_BLUE_TWIN = 4;
  CELL_BLUE_QIU = 5;
  CELL_DRAW = 6;
  CELL_QIU_QIU = 7;
  CELL_SIX_TWINS = 8;
}

enum QQHandType {
  NORMAL = 0;
  QIU = 1;
  SIX = 2;
  TWIN = 3;
}

message Domino {
  int32 top = 1;
  int32 bottom = 2;
}

message DominoList {
  repeated Domino dominos = 1;
}

message QQBet {
  int64 chips = 2;
  QQBetCell cell = 3;
}

message QQBetResult {
  QQBet bet = 1;
  bool is_win = 2;
}

// message from client to server indicate user placing bet
message QQPlayerBets {
  string user_id = 1;
  repeated QQBet bets = 2;
}

// endgame result for 1 player
// win_bets contains the bets in the cell that player win
// in_chip is total of bet chips
// win_chip is raw
// chip is amount of win chip, if it's negative then player lost that game
message QQPlayerBetResult {
  string user_id = 1;
  repeated QQBetResult bet_results = 2;
}

// endgame result for all user playing in that game
message QQListPlayerBetResult {
  repeated QQPlayerBetResult results = 1;
}

// info of 1 hand
message QQHand {
  repeated Domino dominos = 1;
  QQHandType type = 2;
  int32 point = 3;
}

message QQPlayerEngameResult {
  string user_id = 1;
  int64 balance = 2;
  int64 win_amount = 3;
  QQPlayerBetResult bet_result = 4;
}

// message from server to client when the game end
// red's and blue's hand
// win_cells is list of winning cells
message QQGameFinish {
  QQGameFinishHand hands = 1;
  repeated QQBetCell win_cells = 3;
  QQPlayerEngameResult result = 4;
  map<string,int64> players_win_amount = 5;
}

message QQGameFinishHand {
  QQHand red_hand = 1;
  QQHand blue_hand = 2;
}

// game history of prev hands
message QQHistory {
  repeated QQGameFinishHand hand_histories = 1;
}

// amount and number of user placed bet in a cell
message QQDeskCellBet {
  QQBetCell cell = 1;
  int64 chips = 2;
  int32 n_user_bet = 3;
}

message QQDeskListCellBet {
  repeated QQDeskCellBet list_cell_bet = 1;
}

// message from server to client
// indicate changing in desk status
// - num of playing
// - acknowledge user bet -> update_user_bets=true
// - update total bet in each cell by all of the users -> update_cell_bets=true
// - update game history -> update_game_history=true
message QQUpdateDesk {
  int32 n_players = 1;
  bool update_user_bets = 2;
  bool update_cell_bets = 3;
  bool update_game_history = 4;
  QQPlayerBets user_bets = 5;
  QQDeskListCellBet list_cell_bet = 6;
  QQHistory history = 7;
}
