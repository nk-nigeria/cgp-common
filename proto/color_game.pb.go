// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: color_game.proto

// The realtime protocol for the template match engine.

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Color int32

const (
	Color_COLOR_UNSPECIFIED Color = 0
	Color_COLOR_YELLOW      Color = 1
	Color_COLOR_WHITE       Color = 2
	Color_COLOR_PINK        Color = 4
	Color_COLOR_BLUE        Color = 8
	Color_COLOR_RED         Color = 16
	Color_COLOR_GREEN       Color = 32
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0:  "COLOR_UNSPECIFIED",
		1:  "COLOR_YELLOW",
		2:  "COLOR_WHITE",
		4:  "COLOR_PINK",
		8:  "COLOR_BLUE",
		16: "COLOR_RED",
		32: "COLOR_GREEN",
	}
	Color_value = map[string]int32{
		"COLOR_UNSPECIFIED": 0,
		"COLOR_YELLOW":      1,
		"COLOR_WHITE":       2,
		"COLOR_PINK":        4,
		"COLOR_BLUE":        8,
		"COLOR_RED":         16,
		"COLOR_GREEN":       32,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_color_game_proto_enumTypes[0].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_color_game_proto_enumTypes[0]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{0}
}

type BetResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Bets          []*InfoBet             `protobuf:"bytes,2,rep,name=bets,proto3" json:"bets,omitempty"`
	IsWin         bool                   `protobuf:"varint,3,opt,name=is_win,json=isWin,proto3" json:"is_win,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BetResult) Reset() {
	*x = BetResult{}
	mi := &file_color_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BetResult) ProtoMessage() {}

func (x *BetResult) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BetResult.ProtoReflect.Descriptor instead.
func (*BetResult) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{0}
}

func (x *BetResult) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BetResult) GetBets() []*InfoBet {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *BetResult) GetIsWin() bool {
	if x != nil {
		return x.IsWin
	}
	return false
}

type ColorGameFinish struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RollColor     *ListColor             `protobuf:"bytes,1,opt,name=roll_color,json=rollColor,proto3" json:"roll_color,omitempty"`
	BetResults    []*BetResult           `protobuf:"bytes,2,rep,name=bet_results,json=betResults,proto3" json:"bet_results,omitempty"`
	HistoryRolls  *HistoryRoll           `protobuf:"bytes,3,opt,name=history_rolls,json=historyRolls,proto3" json:"history_rolls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColorGameFinish) Reset() {
	*x = ColorGameFinish{}
	mi := &file_color_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColorGameFinish) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorGameFinish) ProtoMessage() {}

func (x *ColorGameFinish) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorGameFinish.ProtoReflect.Descriptor instead.
func (*ColorGameFinish) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{1}
}

func (x *ColorGameFinish) GetRollColor() *ListColor {
	if x != nil {
		return x.RollColor
	}
	return nil
}

func (x *ColorGameFinish) GetBetResults() []*BetResult {
	if x != nil {
		return x.BetResults
	}
	return nil
}

func (x *ColorGameFinish) GetHistoryRolls() *HistoryRoll {
	if x != nil {
		return x.HistoryRolls
	}
	return nil
}

type ListColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Colors        []int32                `protobuf:"varint,1,rep,packed,name=colors,proto3" json:"colors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListColor) Reset() {
	*x = ListColor{}
	mi := &file_color_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListColor) ProtoMessage() {}

func (x *ListColor) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListColor.ProtoReflect.Descriptor instead.
func (*ListColor) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{2}
}

func (x *ListColor) GetColors() []int32 {
	if x != nil {
		return x.Colors
	}
	return nil
}

type RateColor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Percent       int32                  `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateColor) Reset() {
	*x = RateColor{}
	mi := &file_color_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateColor) ProtoMessage() {}

func (x *RateColor) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateColor.ProtoReflect.Descriptor instead.
func (*RateColor) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{3}
}

func (x *RateColor) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RateColor) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type HistoryRoll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListColors    []*ListColor           `protobuf:"bytes,1,rep,name=list_colors,json=listColors,proto3" json:"list_colors,omitempty"`
	RateColors    []*RateColor           `protobuf:"bytes,2,rep,name=rate_colors,json=rateColors,proto3" json:"rate_colors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoryRoll) Reset() {
	*x = HistoryRoll{}
	mi := &file_color_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoryRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryRoll) ProtoMessage() {}

func (x *HistoryRoll) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryRoll.ProtoReflect.Descriptor instead.
func (*HistoryRoll) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{4}
}

func (x *HistoryRoll) GetListColors() []*ListColor {
	if x != nil {
		return x.ListColors
	}
	return nil
}

func (x *HistoryRoll) GetRateColors() []*RateColor {
	if x != nil {
		return x.RateColors
	}
	return nil
}

type InfoBet struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Chips       int64                  `protobuf:"varint,2,opt,name=chips,proto3" json:"chips,omitempty"`
	NUserBet    int32                  `protobuf:"varint,3,opt,name=n_user_bet,json=nUserBet,proto3" json:"n_user_bet,omitempty"`
	Desp        string                 `protobuf:"bytes,4,opt,name=desp,proto3" json:"desp,omitempty"`
	ReqSpecGame int32                  `protobuf:"varint,5,opt,name=req_spec_game,json=reqSpecGame,proto3" json:"req_spec_game,omitempty"`
	// broadcast new game data
	EmitNewgameEvent bool `protobuf:"varint,6,opt,name=emit_newgame_event,json=emitNewgameEvent,proto3" json:"emit_newgame_event,omitempty"`
	// delay broadcast result endgame, unit 1s,1m, 1h, golang durationformat
	DelayEmitResult string `protobuf:"bytes,7,opt,name=delay_emit_result,json=delayEmitResult,proto3" json:"delay_emit_result,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InfoBet) Reset() {
	*x = InfoBet{}
	mi := &file_color_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InfoBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoBet) ProtoMessage() {}

func (x *InfoBet) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoBet.ProtoReflect.Descriptor instead.
func (*InfoBet) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{5}
}

func (x *InfoBet) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InfoBet) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *InfoBet) GetNUserBet() int32 {
	if x != nil {
		return x.NUserBet
	}
	return 0
}

func (x *InfoBet) GetDesp() string {
	if x != nil {
		return x.Desp
	}
	return ""
}

func (x *InfoBet) GetReqSpecGame() int32 {
	if x != nil {
		return x.ReqSpecGame
	}
	return 0
}

func (x *InfoBet) GetEmitNewgameEvent() bool {
	if x != nil {
		return x.EmitNewgameEvent
	}
	return false
}

func (x *InfoBet) GetDelayEmitResult() string {
	if x != nil {
		return x.DelayEmitResult
	}
	return ""
}

type ListInfoBet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListBets      []*InfoBet             `protobuf:"bytes,1,rep,name=list_bets,json=listBets,proto3" json:"list_bets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListInfoBet) Reset() {
	*x = ListInfoBet{}
	mi := &file_color_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListInfoBet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInfoBet) ProtoMessage() {}

func (x *ListInfoBet) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInfoBet.ProtoReflect.Descriptor instead.
func (*ListInfoBet) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{6}
}

func (x *ListInfoBet) GetListBets() []*InfoBet {
	if x != nil {
		return x.ListBets
	}
	return nil
}

type UpdateDesk struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NPlayer           int32                  `protobuf:"varint,1,opt,name=n_player,json=nPlayer,proto3" json:"n_player,omitempty"`
	UpdateUserBets    bool                   `protobuf:"varint,2,opt,name=update_user_bets,json=updateUserBets,proto3" json:"update_user_bets,omitempty"`
	UpdateCellBets    bool                   `protobuf:"varint,3,opt,name=update_cell_bets,json=updateCellBets,proto3" json:"update_cell_bets,omitempty"`
	UserBets          []*InfoBet             `protobuf:"bytes,4,rep,name=user_bets,json=userBets,proto3" json:"user_bets,omitempty"`
	CellBets          []*InfoBet             `protobuf:"bytes,5,rep,name=cell_bets,json=cellBets,proto3" json:"cell_bets,omitempty"`
	UpdateHistoryRoll bool                   `protobuf:"varint,6,opt,name=update_history_roll,json=updateHistoryRoll,proto3" json:"update_history_roll,omitempty"`
	HistoryRolls      *HistoryRoll           `protobuf:"bytes,7,opt,name=history_rolls,json=historyRolls,proto3" json:"history_rolls,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateDesk) Reset() {
	*x = UpdateDesk{}
	mi := &file_color_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDesk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDesk) ProtoMessage() {}

func (x *UpdateDesk) ProtoReflect() protoreflect.Message {
	mi := &file_color_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDesk.ProtoReflect.Descriptor instead.
func (*UpdateDesk) Descriptor() ([]byte, []int) {
	return file_color_game_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDesk) GetNPlayer() int32 {
	if x != nil {
		return x.NPlayer
	}
	return 0
}

func (x *UpdateDesk) GetUpdateUserBets() bool {
	if x != nil {
		return x.UpdateUserBets
	}
	return false
}

func (x *UpdateDesk) GetUpdateCellBets() bool {
	if x != nil {
		return x.UpdateCellBets
	}
	return false
}

func (x *UpdateDesk) GetUserBets() []*InfoBet {
	if x != nil {
		return x.UserBets
	}
	return nil
}

func (x *UpdateDesk) GetCellBets() []*InfoBet {
	if x != nil {
		return x.CellBets
	}
	return nil
}

func (x *UpdateDesk) GetUpdateHistoryRoll() bool {
	if x != nil {
		return x.UpdateHistoryRoll
	}
	return false
}

func (x *UpdateDesk) GetHistoryRolls() *HistoryRoll {
	if x != nil {
		return x.HistoryRolls
	}
	return nil
}

var File_color_game_proto protoreflect.FileDescriptor

const file_color_game_proto_rawDesc = "" +
	"\n" +
	"\x10color_game.proto\x12\x05proto\"_\n" +
	"\tBetResult\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\"\n" +
	"\x04bets\x18\x02 \x03(\v2\x0e.proto.InfoBetR\x04bets\x12\x15\n" +
	"\x06is_win\x18\x03 \x01(\bR\x05isWin\"\xae\x01\n" +
	"\x0fColorGameFinish\x12/\n" +
	"\n" +
	"roll_color\x18\x01 \x01(\v2\x10.proto.ListColorR\trollColor\x121\n" +
	"\vbet_results\x18\x02 \x03(\v2\x10.proto.BetResultR\n" +
	"betResults\x127\n" +
	"\rhistory_rolls\x18\x03 \x01(\v2\x12.proto.HistoryRollR\fhistoryRolls\"#\n" +
	"\tListColor\x12\x16\n" +
	"\x06colors\x18\x01 \x03(\x05R\x06colors\"5\n" +
	"\tRateColor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x18\n" +
	"\apercent\x18\x02 \x01(\x05R\apercent\"s\n" +
	"\vHistoryRoll\x121\n" +
	"\vlist_colors\x18\x01 \x03(\v2\x10.proto.ListColorR\n" +
	"listColors\x121\n" +
	"\vrate_colors\x18\x02 \x03(\v2\x10.proto.RateColorR\n" +
	"rateColors\"\xdf\x01\n" +
	"\aInfoBet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x14\n" +
	"\x05chips\x18\x02 \x01(\x03R\x05chips\x12\x1c\n" +
	"\n" +
	"n_user_bet\x18\x03 \x01(\x05R\bnUserBet\x12\x12\n" +
	"\x04desp\x18\x04 \x01(\tR\x04desp\x12\"\n" +
	"\rreq_spec_game\x18\x05 \x01(\x05R\vreqSpecGame\x12,\n" +
	"\x12emit_newgame_event\x18\x06 \x01(\bR\x10emitNewgameEvent\x12*\n" +
	"\x11delay_emit_result\x18\a \x01(\tR\x0fdelayEmitResult\":\n" +
	"\vListInfoBet\x12+\n" +
	"\tlist_bets\x18\x01 \x03(\v2\x0e.proto.InfoBetR\blistBets\"\xbe\x02\n" +
	"\n" +
	"UpdateDesk\x12\x19\n" +
	"\bn_player\x18\x01 \x01(\x05R\anPlayer\x12(\n" +
	"\x10update_user_bets\x18\x02 \x01(\bR\x0eupdateUserBets\x12(\n" +
	"\x10update_cell_bets\x18\x03 \x01(\bR\x0eupdateCellBets\x12+\n" +
	"\tuser_bets\x18\x04 \x03(\v2\x0e.proto.InfoBetR\buserBets\x12+\n" +
	"\tcell_bets\x18\x05 \x03(\v2\x0e.proto.InfoBetR\bcellBets\x12.\n" +
	"\x13update_history_roll\x18\x06 \x01(\bR\x11updateHistoryRoll\x127\n" +
	"\rhistory_rolls\x18\a \x01(\v2\x12.proto.HistoryRollR\fhistoryRolls*\x81\x01\n" +
	"\x05Color\x12\x15\n" +
	"\x11COLOR_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fCOLOR_YELLOW\x10\x01\x12\x0f\n" +
	"\vCOLOR_WHITE\x10\x02\x12\x0e\n" +
	"\n" +
	"COLOR_PINK\x10\x04\x12\x0e\n" +
	"\n" +
	"COLOR_BLUE\x10\b\x12\r\n" +
	"\tCOLOR_RED\x10\x10\x12\x0f\n" +
	"\vCOLOR_GREEN\x10 B(Z&github.com/nk-nigeria/cgp-common/protob\x06proto3"

var (
	file_color_game_proto_rawDescOnce sync.Once
	file_color_game_proto_rawDescData []byte
)

func file_color_game_proto_rawDescGZIP() []byte {
	file_color_game_proto_rawDescOnce.Do(func() {
		file_color_game_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_color_game_proto_rawDesc), len(file_color_game_proto_rawDesc)))
	})
	return file_color_game_proto_rawDescData
}

var file_color_game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_color_game_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_color_game_proto_goTypes = []any{
	(Color)(0),              // 0: proto.Color
	(*BetResult)(nil),       // 1: proto.BetResult
	(*ColorGameFinish)(nil), // 2: proto.ColorGameFinish
	(*ListColor)(nil),       // 3: proto.ListColor
	(*RateColor)(nil),       // 4: proto.RateColor
	(*HistoryRoll)(nil),     // 5: proto.HistoryRoll
	(*InfoBet)(nil),         // 6: proto.InfoBet
	(*ListInfoBet)(nil),     // 7: proto.ListInfoBet
	(*UpdateDesk)(nil),      // 8: proto.UpdateDesk
}
var file_color_game_proto_depIdxs = []int32{
	6,  // 0: proto.BetResult.bets:type_name -> proto.InfoBet
	3,  // 1: proto.ColorGameFinish.roll_color:type_name -> proto.ListColor
	1,  // 2: proto.ColorGameFinish.bet_results:type_name -> proto.BetResult
	5,  // 3: proto.ColorGameFinish.history_rolls:type_name -> proto.HistoryRoll
	3,  // 4: proto.HistoryRoll.list_colors:type_name -> proto.ListColor
	4,  // 5: proto.HistoryRoll.rate_colors:type_name -> proto.RateColor
	6,  // 6: proto.ListInfoBet.list_bets:type_name -> proto.InfoBet
	6,  // 7: proto.UpdateDesk.user_bets:type_name -> proto.InfoBet
	6,  // 8: proto.UpdateDesk.cell_bets:type_name -> proto.InfoBet
	5,  // 9: proto.UpdateDesk.history_rolls:type_name -> proto.HistoryRoll
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_color_game_proto_init() }
func file_color_game_proto_init() {
	if File_color_game_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_color_game_proto_rawDesc), len(file_color_game_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_color_game_proto_goTypes,
		DependencyIndexes: file_color_game_proto_depIdxs,
		EnumInfos:         file_color_game_proto_enumTypes,
		MessageInfos:      file_color_game_proto_msgTypes,
	}.Build()
	File_color_game_proto = out.File
	file_color_game_proto_goTypes = nil
	file_color_game_proto_depIdxs = nil
}
