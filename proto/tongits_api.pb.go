// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: tongits_api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tongits_GameState int32

const (
	Tongits_GameState_Unknown        Tongits_GameState = 0
	Tongits_GameState_Idle           Tongits_GameState = 1
	Tongits_GameState_Matching       Tongits_GameState = 2
	Tongits_GameState_Preparing      Tongits_GameState = 3
	Tongits_GameState_Play           Tongits_GameState = 4
	Tongits_GameState_DeclareTime    Tongits_GameState = 5
	Tongits_GameState_Reward         Tongits_GameState = 6
	Tongits_GameState_Fight_Response Tongits_GameState = 8
	Tongits_GameState_Finish         Tongits_GameState = 7
)

// Enum value maps for Tongits_GameState.
var (
	Tongits_GameState_name = map[int32]string{
		0: "Unknown",
		1: "Idle",
		2: "Matching",
		3: "Preparing",
		4: "Play",
		5: "DeclareTime",
		6: "Reward",
		8: "Fight_Response",
		7: "Finish",
	}
	Tongits_GameState_value = map[string]int32{
		"Unknown":        0,
		"Idle":           1,
		"Matching":       2,
		"Preparing":      3,
		"Play":           4,
		"DeclareTime":    5,
		"Reward":         6,
		"Fight_Response": 8,
		"Finish":         7,
	}
)

func (x Tongits_GameState) Enum() *Tongits_GameState {
	p := new(Tongits_GameState)
	*p = x
	return p
}

func (x Tongits_GameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tongits_GameState) Descriptor() protoreflect.EnumDescriptor {
	return file_tongits_api_proto_enumTypes[0].Descriptor()
}

func (Tongits_GameState) Type() protoreflect.EnumType {
	return &file_tongits_api_proto_enumTypes[0]
}

func (x Tongits_GameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tongits_GameState.Descriptor instead.
func (Tongits_GameState) EnumDescriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{0}
}

type Tongits_CardSuit int32

const (
	Tongits_CardSuit_SUIT_UNSPECIFIED Tongits_CardSuit = 0
	Tongits_CardSuit_SUIT_HEARTS      Tongits_CardSuit = 1
	Tongits_CardSuit_SUIT_DIAMONDS    Tongits_CardSuit = 2
	Tongits_CardSuit_SUIT_CLUBS       Tongits_CardSuit = 3
	Tongits_CardSuit_SUIT_SPADES      Tongits_CardSuit = 4
)

// Enum value maps for Tongits_CardSuit.
var (
	Tongits_CardSuit_name = map[int32]string{
		0: "SUIT_UNSPECIFIED",
		1: "SUIT_HEARTS",
		2: "SUIT_DIAMONDS",
		3: "SUIT_CLUBS",
		4: "SUIT_SPADES",
	}
	Tongits_CardSuit_value = map[string]int32{
		"SUIT_UNSPECIFIED": 0,
		"SUIT_HEARTS":      1,
		"SUIT_DIAMONDS":    2,
		"SUIT_CLUBS":       3,
		"SUIT_SPADES":      4,
	}
)

func (x Tongits_CardSuit) Enum() *Tongits_CardSuit {
	p := new(Tongits_CardSuit)
	*p = x
	return p
}

func (x Tongits_CardSuit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tongits_CardSuit) Descriptor() protoreflect.EnumDescriptor {
	return file_tongits_api_proto_enumTypes[1].Descriptor()
}

func (Tongits_CardSuit) Type() protoreflect.EnumType {
	return &file_tongits_api_proto_enumTypes[1]
}

func (x Tongits_CardSuit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tongits_CardSuit.Descriptor instead.
func (Tongits_CardSuit) EnumDescriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{1}
}

type Tongits_CardRank int32

const (
	Tongits_CardRank_RANK_UNSPECIFIED Tongits_CardRank = 0
	Tongits_CardRank_RANK_A           Tongits_CardRank = 1
	Tongits_CardRank_RANK_2           Tongits_CardRank = 2
	Tongits_CardRank_RANK_3           Tongits_CardRank = 3
	Tongits_CardRank_RANK_4           Tongits_CardRank = 4
	Tongits_CardRank_RANK_5           Tongits_CardRank = 5
	Tongits_CardRank_RANK_6           Tongits_CardRank = 6
	Tongits_CardRank_RANK_7           Tongits_CardRank = 7
	Tongits_CardRank_RANK_8           Tongits_CardRank = 8
	Tongits_CardRank_RANK_9           Tongits_CardRank = 9
	Tongits_CardRank_RANK_10          Tongits_CardRank = 10
	Tongits_CardRank_RANK_J           Tongits_CardRank = 11
	Tongits_CardRank_RANK_Q           Tongits_CardRank = 12
	Tongits_CardRank_RANK_K           Tongits_CardRank = 13
)

// Enum value maps for Tongits_CardRank.
var (
	Tongits_CardRank_name = map[int32]string{
		0:  "RANK_UNSPECIFIED",
		1:  "RANK_A",
		2:  "RANK_2",
		3:  "RANK_3",
		4:  "RANK_4",
		5:  "RANK_5",
		6:  "RANK_6",
		7:  "RANK_7",
		8:  "RANK_8",
		9:  "RANK_9",
		10: "RANK_10",
		11: "RANK_J",
		12: "RANK_Q",
		13: "RANK_K",
	}
	Tongits_CardRank_value = map[string]int32{
		"RANK_UNSPECIFIED": 0,
		"RANK_A":           1,
		"RANK_2":           2,
		"RANK_3":           3,
		"RANK_4":           4,
		"RANK_5":           5,
		"RANK_6":           6,
		"RANK_7":           7,
		"RANK_8":           8,
		"RANK_9":           9,
		"RANK_10":          10,
		"RANK_J":           11,
		"RANK_Q":           12,
		"RANK_K":           13,
	}
)

func (x Tongits_CardRank) Enum() *Tongits_CardRank {
	p := new(Tongits_CardRank)
	*p = x
	return p
}

func (x Tongits_CardRank) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tongits_CardRank) Descriptor() protoreflect.EnumDescriptor {
	return file_tongits_api_proto_enumTypes[2].Descriptor()
}

func (Tongits_CardRank) Type() protoreflect.EnumType {
	return &file_tongits_api_proto_enumTypes[2]
}

func (x Tongits_CardRank) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tongits_CardRank.Descriptor instead.
func (Tongits_CardRank) EnumDescriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{2}
}

type Tongits_OpCodeUpdate int32

const (
	Tongits_OpCodeUpdate_UNDEFINE           Tongits_OpCodeUpdate = 0 //message UpdateTable
	Tongits_OpCodeUpdate_UPDATE_TABLE       Tongits_OpCodeUpdate = 1 //message UpdateTable
	Tongits_OpCodeUpdate_DEAL               Tongits_OpCodeUpdate = 2 //message chia bai
	Tongits_OpCodeUpdate_FINISH             Tongits_OpCodeUpdate = 3 //message UpdateFinish
	Tongits_OpCodeUpdate_TONGITS            Tongits_OpCodeUpdate = 4 // khi user duoc tongits
	Tongits_OpCodeUpdate_UPDATE_GAME_STATE  Tongits_OpCodeUpdate = 5
	Tongits_OpCodeUpdate_UPDATE_WALLET      Tongits_OpCodeUpdate = 7
	Tongits_OpCodeUpdate_KICK_OFF_THE_TABLE Tongits_OpCodeUpdate = 8
	Tongits_OpCodeUpdate_UPDATE_USER_INFO   Tongits_OpCodeUpdate = 9
	Tongits_OpCodeUpdate_DISCARD            Tongits_OpCodeUpdate = 10
	Tongits_OpCodeUpdate_SEND_CARD          Tongits_OpCodeUpdate = 11
	Tongits_OpCodeUpdate_SHOW_SUIT          Tongits_OpCodeUpdate = 12
	Tongits_OpCodeUpdate_HIT_CARD           Tongits_OpCodeUpdate = 13
	Tongits_OpCodeUpdate_TAKE_CARD          Tongits_OpCodeUpdate = 15
	Tongits_OpCodeUpdate_UPDATE_POT         Tongits_OpCodeUpdate = 14
	Tongits_OpCodeUpdate_DECLARE            Tongits_OpCodeUpdate = 16
	Tongits_OpCodeUpdate_FIGHT              Tongits_OpCodeUpdate = 17
	Tongits_OpCodeUpdate_FIGHT_RESPONSE     Tongits_OpCodeUpdate = 18
)

// Enum value maps for Tongits_OpCodeUpdate.
var (
	Tongits_OpCodeUpdate_name = map[int32]string{
		0:  "UNDEFINE",
		1:  "UPDATE_TABLE",
		2:  "DEAL",
		3:  "FINISH",
		4:  "TONGITS",
		5:  "UPDATE_GAME_STATE",
		7:  "UPDATE_WALLET",
		8:  "KICK_OFF_THE_TABLE",
		9:  "UPDATE_USER_INFO",
		10: "DISCARD",
		11: "SEND_CARD",
		12: "SHOW_SUIT",
		13: "HIT_CARD",
		15: "TAKE_CARD",
		14: "UPDATE_POT",
		16: "DECLARE",
		17: "FIGHT",
		18: "FIGHT_RESPONSE",
	}
	Tongits_OpCodeUpdate_value = map[string]int32{
		"UNDEFINE":           0,
		"UPDATE_TABLE":       1,
		"DEAL":               2,
		"FINISH":             3,
		"TONGITS":            4,
		"UPDATE_GAME_STATE":  5,
		"UPDATE_WALLET":      7,
		"KICK_OFF_THE_TABLE": 8,
		"UPDATE_USER_INFO":   9,
		"DISCARD":            10,
		"SEND_CARD":          11,
		"SHOW_SUIT":          12,
		"HIT_CARD":           13,
		"TAKE_CARD":          15,
		"UPDATE_POT":         14,
		"DECLARE":            16,
		"FIGHT":              17,
		"FIGHT_RESPONSE":     18,
	}
)

func (x Tongits_OpCodeUpdate) Enum() *Tongits_OpCodeUpdate {
	p := new(Tongits_OpCodeUpdate)
	*p = x
	return p
}

func (x Tongits_OpCodeUpdate) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tongits_OpCodeUpdate) Descriptor() protoreflect.EnumDescriptor {
	return file_tongits_api_proto_enumTypes[3].Descriptor()
}

func (Tongits_OpCodeUpdate) Type() protoreflect.EnumType {
	return &file_tongits_api_proto_enumTypes[3]
}

func (x Tongits_OpCodeUpdate) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tongits_OpCodeUpdate.Descriptor instead.
func (Tongits_OpCodeUpdate) EnumDescriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{3}
}

type Tongits_Card struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rank          Tongits_CardRank       `protobuf:"varint,1,opt,name=rank,proto3,enum=Tongits_CardRank" json:"rank,omitempty"`
	Suit          Tongits_CardSuit       `protobuf:"varint,2,opt,name=suit,proto3,enum=Tongits_CardSuit" json:"suit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tongits_Card) Reset() {
	*x = Tongits_Card{}
	mi := &file_tongits_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tongits_Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tongits_Card) ProtoMessage() {}

func (x *Tongits_Card) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tongits_Card.ProtoReflect.Descriptor instead.
func (*Tongits_Card) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{0}
}

func (x *Tongits_Card) GetRank() Tongits_CardRank {
	if x != nil {
		return x.Rank
	}
	return Tongits_CardRank_RANK_UNSPECIFIED
}

func (x *Tongits_Card) GetSuit() Tongits_CardSuit {
	if x != nil {
		return x.Suit
	}
	return Tongits_CardSuit_SUIT_UNSPECIFIED
}

type TongitsPlayerHandCards struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Cards         []*Tongits_Card        `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TongitsPlayerHandCards) Reset() {
	*x = TongitsPlayerHandCards{}
	mi := &file_tongits_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TongitsPlayerHandCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TongitsPlayerHandCards) ProtoMessage() {}

func (x *TongitsPlayerHandCards) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TongitsPlayerHandCards.ProtoReflect.Descriptor instead.
func (*TongitsPlayerHandCards) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{1}
}

func (x *TongitsPlayerHandCards) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TongitsPlayerHandCards) GetCards() []*Tongits_Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type TongitsUpdateDeal struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Hand          *TongitsPlayerHandCards `protobuf:"bytes,1,opt,name=hand,proto3" json:"hand,omitempty"`
	CurrentTurn   string                  `protobuf:"bytes,2,opt,name=currentTurn,proto3" json:"currentTurn,omitempty"`
	Timeturn      int32                   `protobuf:"varint,3,opt,name=timeturn,proto3" json:"timeturn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TongitsUpdateDeal) Reset() {
	*x = TongitsUpdateDeal{}
	mi := &file_tongits_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TongitsUpdateDeal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TongitsUpdateDeal) ProtoMessage() {}

func (x *TongitsUpdateDeal) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TongitsUpdateDeal.ProtoReflect.Descriptor instead.
func (*TongitsUpdateDeal) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{2}
}

func (x *TongitsUpdateDeal) GetHand() *TongitsPlayerHandCards {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *TongitsUpdateDeal) GetCurrentTurn() string {
	if x != nil {
		return x.CurrentTurn
	}
	return ""
}

func (x *TongitsUpdateDeal) GetTimeturn() int32 {
	if x != nil {
		return x.Timeturn
	}
	return 0
}

type Pot struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Ag              int64                  `protobuf:"varint,1,opt,name=ag,proto3" json:"ag,omitempty"`
	UidWinLastMatch string                 `protobuf:"bytes,2,opt,name=uidWinLastMatch,proto3" json:"uidWinLastMatch,omitempty"`
	ChipUpdates     []*ChipUpdate          `protobuf:"bytes,3,rep,name=ChipUpdates,proto3" json:"ChipUpdates,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Pot) Reset() {
	*x = Pot{}
	mi := &file_tongits_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pot) ProtoMessage() {}

func (x *Pot) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pot.ProtoReflect.Descriptor instead.
func (*Pot) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{3}
}

func (x *Pot) GetAg() int64 {
	if x != nil {
		return x.Ag
	}
	return 0
}

func (x *Pot) GetUidWinLastMatch() string {
	if x != nil {
		return x.UidWinLastMatch
	}
	return ""
}

func (x *Pot) GetChipUpdates() []*ChipUpdate {
	if x != nil {
		return x.ChipUpdates
	}
	return nil
}

type ChipUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chip          int64                  `protobuf:"varint,1,opt,name=chip,proto3" json:"chip,omitempty"`
	Userid        string                 `protobuf:"bytes,2,opt,name=userid,proto3" json:"userid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChipUpdate) Reset() {
	*x = ChipUpdate{}
	mi := &file_tongits_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChipUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChipUpdate) ProtoMessage() {}

func (x *ChipUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChipUpdate.ProtoReflect.Descriptor instead.
func (*ChipUpdate) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{4}
}

func (x *ChipUpdate) GetChip() int64 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *ChipUpdate) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

type Tongits_ListCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         []*Tongits_Card        `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tongits_ListCard) Reset() {
	*x = Tongits_ListCard{}
	mi := &file_tongits_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tongits_ListCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tongits_ListCard) ProtoMessage() {}

func (x *Tongits_ListCard) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tongits_ListCard.ProtoReflect.Descriptor instead.
func (*Tongits_ListCard) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{5}
}

func (x *Tongits_ListCard) GetCards() []*Tongits_Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type Tongits_ListSuit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suits         []*Tongits_ListCard    `protobuf:"bytes,1,rep,name=suits,proto3" json:"suits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tongits_ListSuit) Reset() {
	*x = Tongits_ListSuit{}
	mi := &file_tongits_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tongits_ListSuit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tongits_ListSuit) ProtoMessage() {}

func (x *Tongits_ListSuit) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tongits_ListSuit.ProtoReflect.Descriptor instead.
func (*Tongits_ListSuit) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{6}
}

func (x *Tongits_ListSuit) GetSuits() []*Tongits_ListCard {
	if x != nil {
		return x.Suits
	}
	return nil
}

type DisCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Card          *Tongits_Card          `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	NextTurn      string                 `protobuf:"bytes,3,opt,name=nextTurn,proto3" json:"nextTurn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisCard) Reset() {
	*x = DisCard{}
	mi := &file_tongits_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisCard) ProtoMessage() {}

func (x *DisCard) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisCard.ProtoReflect.Descriptor instead.
func (*DisCard) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{7}
}

func (x *DisCard) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DisCard) GetCard() *Tongits_Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *DisCard) GetNextTurn() string {
	if x != nil {
		return x.NextTurn
	}
	return ""
}

type SendCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CardsFrom     *Tongits_ListCard      `protobuf:"bytes,1,opt,name=cardsFrom,proto3" json:"cardsFrom,omitempty"`
	CardsTo       *Tongits_ListCard      `protobuf:"bytes,2,opt,name=cardsTo,proto3" json:"cardsTo,omitempty"`
	ToUserId      string                 `protobuf:"bytes,3,opt,name=toUserId,proto3" json:"toUserId,omitempty"`
	UserId        string                 `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendCard) Reset() {
	*x = SendCard{}
	mi := &file_tongits_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCard) ProtoMessage() {}

func (x *SendCard) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCard.ProtoReflect.Descriptor instead.
func (*SendCard) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{8}
}

func (x *SendCard) GetCardsFrom() *Tongits_ListCard {
	if x != nil {
		return x.CardsFrom
	}
	return nil
}

func (x *SendCard) GetCardsTo() *Tongits_ListCard {
	if x != nil {
		return x.CardsTo
	}
	return nil
}

func (x *SendCard) GetToUserId() string {
	if x != nil {
		return x.ToUserId
	}
	return ""
}

func (x *SendCard) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type HitCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cards         *Tongits_ListCard      `protobuf:"bytes,2,opt,name=cards,proto3" json:"cards,omitempty"`
	Userid        string                 `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HitCard) Reset() {
	*x = HitCard{}
	mi := &file_tongits_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HitCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HitCard) ProtoMessage() {}

func (x *HitCard) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HitCard.ProtoReflect.Descriptor instead.
func (*HitCard) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{9}
}

func (x *HitCard) GetCards() *Tongits_ListCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *HitCard) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

type ShowSuit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Suit          *Tongits_ListCard      `protobuf:"bytes,2,opt,name=suit,proto3" json:"suit,omitempty"`
	Userid        string                 `protobuf:"bytes,3,opt,name=userid,proto3" json:"userid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowSuit) Reset() {
	*x = ShowSuit{}
	mi := &file_tongits_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowSuit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowSuit) ProtoMessage() {}

func (x *ShowSuit) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowSuit.ProtoReflect.Descriptor instead.
func (*ShowSuit) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{10}
}

func (x *ShowSuit) GetSuit() *Tongits_ListCard {
	if x != nil {
		return x.Suit
	}
	return nil
}

func (x *ShowSuit) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

type TakeCard struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Card          *Tongits_Card          `protobuf:"bytes,2,opt,name=card,proto3" json:"card,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TakeCard) Reset() {
	*x = TakeCard{}
	mi := &file_tongits_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TakeCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeCard) ProtoMessage() {}

func (x *TakeCard) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeCard.ProtoReflect.Descriptor instead.
func (*TakeCard) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{11}
}

func (x *TakeCard) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *TakeCard) GetCard() *Tongits_Card {
	if x != nil {
		return x.Card
	}
	return nil
}

type StartDeclareNoti struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timeout       float32                `protobuf:"fixed32,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartDeclareNoti) Reset() {
	*x = StartDeclareNoti{}
	mi := &file_tongits_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartDeclareNoti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDeclareNoti) ProtoMessage() {}

func (x *StartDeclareNoti) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDeclareNoti.ProtoReflect.Descriptor instead.
func (*StartDeclareNoti) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{12}
}

func (x *StartDeclareNoti) GetTimeout() float32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type PlayerDeclare struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	IsSuccess     bool                   `protobuf:"varint,2,opt,name=isSuccess,proto3" json:"isSuccess,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerDeclare) Reset() {
	*x = PlayerDeclare{}
	mi := &file_tongits_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerDeclare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDeclare) ProtoMessage() {}

func (x *PlayerDeclare) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDeclare.ProtoReflect.Descriptor instead.
func (*PlayerDeclare) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{13}
}

func (x *PlayerDeclare) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *PlayerDeclare) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type FightResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	IsFight       bool                   `protobuf:"varint,2,opt,name=isFight,proto3" json:"isFight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FightResponse) Reset() {
	*x = FightResponse{}
	mi := &file_tongits_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FightResponse) ProtoMessage() {}

func (x *FightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FightResponse.ProtoReflect.Descriptor instead.
func (*FightResponse) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{14}
}

func (x *FightResponse) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *FightResponse) GetIsFight() bool {
	if x != nil {
		return x.IsFight
	}
	return false
}

type Fight struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Userid        string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Timeout       int32                  `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fight) Reset() {
	*x = Fight{}
	mi := &file_tongits_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fight) ProtoMessage() {}

func (x *Fight) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fight.ProtoReflect.Descriptor instead.
func (*Fight) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{15}
}

func (x *Fight) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *Fight) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type FinishGame struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InforFinish   []*TongitsFinishItem   `protobuf:"bytes,1,rep,name=inforFinish,proto3" json:"inforFinish,omitempty"`
	Pot           int64                  `protobuf:"varint,2,opt,name=Pot,proto3" json:"Pot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinishGame) Reset() {
	*x = FinishGame{}
	mi := &file_tongits_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinishGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishGame) ProtoMessage() {}

func (x *FinishGame) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishGame.ProtoReflect.Descriptor instead.
func (*FinishGame) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{16}
}

func (x *FinishGame) GetInforFinish() []*TongitsFinishItem {
	if x != nil {
		return x.InforFinish
	}
	return nil
}

func (x *FinishGame) GetPot() int64 {
	if x != nil {
		return x.Pot
	}
	return 0
}

type TongitsFinishItem struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Userid             string                 `protobuf:"bytes,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Point              int32                  `protobuf:"varint,2,opt,name=point,proto3" json:"point,omitempty"`
	Agwin              int64                  `protobuf:"varint,3,opt,name=agwin,proto3" json:"agwin,omitempty"`
	BaseWinPoint       int32                  `protobuf:"varint,4,opt,name=baseWinPoint,proto3" json:"baseWinPoint,omitempty"`
	TongitsPoint       int32                  `protobuf:"varint,5,opt,name=tongitsPoint,proto3" json:"tongitsPoint,omitempty"`
	SecretPoint        int32                  `protobuf:"varint,6,opt,name=secretPoint,proto3" json:"secretPoint,omitempty"`
	NumSeceret         int32                  `protobuf:"varint,7,opt,name=numSeceret,proto3" json:"numSeceret,omitempty"`
	BonusPoint         int32                  `protobuf:"varint,8,opt,name=bonusPoint,proto3" json:"bonusPoint,omitempty"`
	BunnedPlayersPoint int32                  `protobuf:"varint,9,opt,name=bunnedPlayersPoint,proto3" json:"bunnedPlayersPoint,omitempty"`
	ChallengersPoint   int32                  `protobuf:"varint,10,opt,name=challengersPoint,proto3" json:"challengersPoint,omitempty"`
	HitPot             int64                  `protobuf:"varint,11,opt,name=hitPot,proto3" json:"hitPot,omitempty"`
	Hand               []*Tongits_ListCard    `protobuf:"bytes,12,rep,name=hand,proto3" json:"hand,omitempty"`
	Rank               int32                  `protobuf:"varint,13,opt,name=rank,proto3" json:"rank,omitempty"`
	Agfinal            int64                  `protobuf:"varint,14,opt,name=agfinal,proto3" json:"agfinal,omitempty"`
	WinFightType       int32                  `protobuf:"varint,15,opt,name=winFightType,proto3" json:"winFightType,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TongitsFinishItem) Reset() {
	*x = TongitsFinishItem{}
	mi := &file_tongits_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TongitsFinishItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TongitsFinishItem) ProtoMessage() {}

func (x *TongitsFinishItem) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TongitsFinishItem.ProtoReflect.Descriptor instead.
func (*TongitsFinishItem) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{17}
}

func (x *TongitsFinishItem) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *TongitsFinishItem) GetPoint() int32 {
	if x != nil {
		return x.Point
	}
	return 0
}

func (x *TongitsFinishItem) GetAgwin() int64 {
	if x != nil {
		return x.Agwin
	}
	return 0
}

func (x *TongitsFinishItem) GetBaseWinPoint() int32 {
	if x != nil {
		return x.BaseWinPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetTongitsPoint() int32 {
	if x != nil {
		return x.TongitsPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetSecretPoint() int32 {
	if x != nil {
		return x.SecretPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetNumSeceret() int32 {
	if x != nil {
		return x.NumSeceret
	}
	return 0
}

func (x *TongitsFinishItem) GetBonusPoint() int32 {
	if x != nil {
		return x.BonusPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetBunnedPlayersPoint() int32 {
	if x != nil {
		return x.BunnedPlayersPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetChallengersPoint() int32 {
	if x != nil {
		return x.ChallengersPoint
	}
	return 0
}

func (x *TongitsFinishItem) GetHitPot() int64 {
	if x != nil {
		return x.HitPot
	}
	return 0
}

func (x *TongitsFinishItem) GetHand() []*Tongits_ListCard {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *TongitsFinishItem) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *TongitsFinishItem) GetAgfinal() int64 {
	if x != nil {
		return x.Agfinal
	}
	return 0
}

func (x *TongitsFinishItem) GetWinFightType() int32 {
	if x != nil {
		return x.WinFightType
	}
	return 0
}

type TongitsUpdateDesk struct {
	state              protoimpl.MessageState  `protogen:"open.v1"`
	IsUpdateTurn       bool                    `protobuf:"varint,1,opt,name=is_update_turn,json=isUpdateTurn,proto3" json:"is_update_turn,omitempty"`
	PlayerTurn         string                  `protobuf:"bytes,2,opt,name=player_turn,json=playerTurn,proto3" json:"player_turn,omitempty"`
	IsUpdatePlayerHand bool                    `protobuf:"varint,5,opt,name=is_update_player_hand,json=isUpdatePlayerHand,proto3" json:"is_update_player_hand,omitempty"`
	Hand               *TongitsPlayerHandCards `protobuf:"bytes,6,opt,name=hand,proto3" json:"hand,omitempty"`
	IsUpdateTable      bool                    `protobuf:"varint,11,opt,name=is_update_table,json=isUpdateTable,proto3" json:"is_update_table,omitempty"`
	Table              *Tongits_UpdateTable    `protobuf:"bytes,12,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TongitsUpdateDesk) Reset() {
	*x = TongitsUpdateDesk{}
	mi := &file_tongits_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TongitsUpdateDesk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TongitsUpdateDesk) ProtoMessage() {}

func (x *TongitsUpdateDesk) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TongitsUpdateDesk.ProtoReflect.Descriptor instead.
func (*TongitsUpdateDesk) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{18}
}

func (x *TongitsUpdateDesk) GetIsUpdateTurn() bool {
	if x != nil {
		return x.IsUpdateTurn
	}
	return false
}

func (x *TongitsUpdateDesk) GetPlayerTurn() string {
	if x != nil {
		return x.PlayerTurn
	}
	return ""
}

func (x *TongitsUpdateDesk) GetIsUpdatePlayerHand() bool {
	if x != nil {
		return x.IsUpdatePlayerHand
	}
	return false
}

func (x *TongitsUpdateDesk) GetHand() *TongitsPlayerHandCards {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *TongitsUpdateDesk) GetIsUpdateTable() bool {
	if x != nil {
		return x.IsUpdateTable
	}
	return false
}

func (x *TongitsUpdateDesk) GetTable() *Tongits_UpdateTable {
	if x != nil {
		return x.Table
	}
	return nil
}

type Tongits_UpdateTable struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Players        []*Tongits_Player      `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	PlayingPlayers []*Tongits_Player      `protobuf:"bytes,2,rep,name=playing_players,json=playingPlayers,proto3" json:"playing_players,omitempty"`
	JoinPlayers    []*Tongits_Player      `protobuf:"bytes,3,rep,name=join_players,json=joinPlayers,proto3" json:"join_players,omitempty"`
	LeavePlayers   []*Tongits_Player      `protobuf:"bytes,4,rep,name=leave_players,json=leavePlayers,proto3" json:"leave_players,omitempty"`
	Pot            *Pot                   `protobuf:"bytes,5,opt,name=pot,proto3" json:"pot,omitempty"`
	TimePlay       int64                  `protobuf:"varint,7,opt,name=time_play,json=timePlay,proto3" json:"time_play,omitempty"`       // timestamp play game
	RemainTime     int64                  `protobuf:"varint,8,opt,name=remain_time,json=remainTime,proto3" json:"remain_time,omitempty"` // remain time to end game
	GameState      Tongits_GameState      `protobuf:"varint,9,opt,name=game_state,json=gameState,proto3,enum=Tongits_GameState" json:"game_state,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Tongits_UpdateTable) Reset() {
	*x = Tongits_UpdateTable{}
	mi := &file_tongits_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tongits_UpdateTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tongits_UpdateTable) ProtoMessage() {}

func (x *Tongits_UpdateTable) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tongits_UpdateTable.ProtoReflect.Descriptor instead.
func (*Tongits_UpdateTable) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{19}
}

func (x *Tongits_UpdateTable) GetPlayers() []*Tongits_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Tongits_UpdateTable) GetPlayingPlayers() []*Tongits_Player {
	if x != nil {
		return x.PlayingPlayers
	}
	return nil
}

func (x *Tongits_UpdateTable) GetJoinPlayers() []*Tongits_Player {
	if x != nil {
		return x.JoinPlayers
	}
	return nil
}

func (x *Tongits_UpdateTable) GetLeavePlayers() []*Tongits_Player {
	if x != nil {
		return x.LeavePlayers
	}
	return nil
}

func (x *Tongits_UpdateTable) GetPot() *Pot {
	if x != nil {
		return x.Pot
	}
	return nil
}

func (x *Tongits_UpdateTable) GetTimePlay() int64 {
	if x != nil {
		return x.TimePlay
	}
	return 0
}

func (x *Tongits_UpdateTable) GetRemainTime() int64 {
	if x != nil {
		return x.RemainTime
	}
	return 0
}

func (x *Tongits_UpdateTable) GetGameState() Tongits_GameState {
	if x != nil {
		return x.GameState
	}
	return Tongits_GameState_Unknown
}

type Tongits_Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Wallet        string                 `protobuf:"bytes,3,opt,name=wallet,proto3" json:"wallet,omitempty"`
	IsPlaying     bool                   `protobuf:"varint,4,opt,name=is_playing,json=isPlaying,proto3" json:"is_playing,omitempty"`
	Cards         []*Tongits_Card        `protobuf:"bytes,6,rep,name=cards,proto3" json:"cards,omitempty"`
	VipLevel      int64                  `protobuf:"varint,7,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	AvatarId      string                 `protobuf:"bytes,13,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tongits_Player) Reset() {
	*x = Tongits_Player{}
	mi := &file_tongits_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tongits_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tongits_Player) ProtoMessage() {}

func (x *Tongits_Player) ProtoReflect() protoreflect.Message {
	mi := &file_tongits_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tongits_Player.ProtoReflect.Descriptor instead.
func (*Tongits_Player) Descriptor() ([]byte, []int) {
	return file_tongits_api_proto_rawDescGZIP(), []int{20}
}

func (x *Tongits_Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Tongits_Player) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Tongits_Player) GetWallet() string {
	if x != nil {
		return x.Wallet
	}
	return ""
}

func (x *Tongits_Player) GetIsPlaying() bool {
	if x != nil {
		return x.IsPlaying
	}
	return false
}

func (x *Tongits_Player) GetCards() []*Tongits_Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *Tongits_Player) GetVipLevel() int64 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *Tongits_Player) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

var File_tongits_api_proto protoreflect.FileDescriptor

const file_tongits_api_proto_rawDesc = "" +
	"\n" +
	"\x11tongits_api.proto\"\\\n" +
	"\fTongits_Card\x12%\n" +
	"\x04rank\x18\x01 \x01(\x0e2\x11.Tongits_CardRankR\x04rank\x12%\n" +
	"\x04suit\x18\x02 \x01(\x0e2\x11.Tongits_CardSuitR\x04suit\"V\n" +
	"\x16TongitsPlayerHandCards\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\x05cards\x18\x02 \x03(\v2\r.Tongits_CardR\x05cards\"~\n" +
	"\x11TongitsUpdateDeal\x12+\n" +
	"\x04hand\x18\x01 \x01(\v2\x17.TongitsPlayerHandCardsR\x04hand\x12 \n" +
	"\vcurrentTurn\x18\x02 \x01(\tR\vcurrentTurn\x12\x1a\n" +
	"\btimeturn\x18\x03 \x01(\x05R\btimeturn\"n\n" +
	"\x03Pot\x12\x0e\n" +
	"\x02ag\x18\x01 \x01(\x03R\x02ag\x12(\n" +
	"\x0fuidWinLastMatch\x18\x02 \x01(\tR\x0fuidWinLastMatch\x12-\n" +
	"\vChipUpdates\x18\x03 \x03(\v2\v.ChipUpdateR\vChipUpdates\"8\n" +
	"\n" +
	"ChipUpdate\x12\x12\n" +
	"\x04chip\x18\x01 \x01(\x03R\x04chip\x12\x16\n" +
	"\x06userid\x18\x02 \x01(\tR\x06userid\"7\n" +
	"\x10Tongits_ListCard\x12#\n" +
	"\x05cards\x18\x01 \x03(\v2\r.Tongits_CardR\x05cards\";\n" +
	"\x10Tongits_ListSuit\x12'\n" +
	"\x05suits\x18\x01 \x03(\v2\x11.Tongits_ListCardR\x05suits\"a\n" +
	"\aDisCard\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\x04card\x18\x02 \x01(\v2\r.Tongits_CardR\x04card\x12\x1a\n" +
	"\bnextTurn\x18\x03 \x01(\tR\bnextTurn\"\x9c\x01\n" +
	"\bSendCard\x12/\n" +
	"\tcardsFrom\x18\x01 \x01(\v2\x11.Tongits_ListCardR\tcardsFrom\x12+\n" +
	"\acardsTo\x18\x02 \x01(\v2\x11.Tongits_ListCardR\acardsTo\x12\x1a\n" +
	"\btoUserId\x18\x03 \x01(\tR\btoUserId\x12\x16\n" +
	"\x06userId\x18\x04 \x01(\tR\x06userId\"J\n" +
	"\aHitCard\x12'\n" +
	"\x05cards\x18\x02 \x01(\v2\x11.Tongits_ListCardR\x05cards\x12\x16\n" +
	"\x06userid\x18\x03 \x01(\tR\x06userid\"I\n" +
	"\bShowSuit\x12%\n" +
	"\x04suit\x18\x02 \x01(\v2\x11.Tongits_ListCardR\x04suit\x12\x16\n" +
	"\x06userid\x18\x03 \x01(\tR\x06userid\"E\n" +
	"\bTakeCard\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12!\n" +
	"\x04card\x18\x02 \x01(\v2\r.Tongits_CardR\x04card\",\n" +
	"\x10StartDeclareNoti\x12\x18\n" +
	"\atimeout\x18\x01 \x01(\x02R\atimeout\"E\n" +
	"\rPlayerDeclare\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\x1c\n" +
	"\tisSuccess\x18\x02 \x01(\bR\tisSuccess\"A\n" +
	"\rFightResponse\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\x18\n" +
	"\aisFight\x18\x02 \x01(\bR\aisFight\"9\n" +
	"\x05Fight\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\x18\n" +
	"\atimeout\x18\x02 \x01(\x05R\atimeout\"T\n" +
	"\n" +
	"FinishGame\x124\n" +
	"\vinforFinish\x18\x01 \x03(\v2\x12.TongitsFinishItemR\vinforFinish\x12\x10\n" +
	"\x03Pot\x18\x02 \x01(\x03R\x03Pot\"\xee\x03\n" +
	"\x11TongitsFinishItem\x12\x16\n" +
	"\x06userid\x18\x01 \x01(\tR\x06userid\x12\x14\n" +
	"\x05point\x18\x02 \x01(\x05R\x05point\x12\x14\n" +
	"\x05agwin\x18\x03 \x01(\x03R\x05agwin\x12\"\n" +
	"\fbaseWinPoint\x18\x04 \x01(\x05R\fbaseWinPoint\x12\"\n" +
	"\ftongitsPoint\x18\x05 \x01(\x05R\ftongitsPoint\x12 \n" +
	"\vsecretPoint\x18\x06 \x01(\x05R\vsecretPoint\x12\x1e\n" +
	"\n" +
	"numSeceret\x18\a \x01(\x05R\n" +
	"numSeceret\x12\x1e\n" +
	"\n" +
	"bonusPoint\x18\b \x01(\x05R\n" +
	"bonusPoint\x12.\n" +
	"\x12bunnedPlayersPoint\x18\t \x01(\x05R\x12bunnedPlayersPoint\x12*\n" +
	"\x10challengersPoint\x18\n" +
	" \x01(\x05R\x10challengersPoint\x12\x16\n" +
	"\x06hitPot\x18\v \x01(\x03R\x06hitPot\x12%\n" +
	"\x04hand\x18\f \x03(\v2\x11.Tongits_ListCardR\x04hand\x12\x12\n" +
	"\x04rank\x18\r \x01(\x05R\x04rank\x12\x18\n" +
	"\aagfinal\x18\x0e \x01(\x03R\aagfinal\x12\"\n" +
	"\fwinFightType\x18\x0f \x01(\x05R\fwinFightType\"\x8e\x02\n" +
	"\x11TongitsUpdateDesk\x12$\n" +
	"\x0eis_update_turn\x18\x01 \x01(\bR\fisUpdateTurn\x12\x1f\n" +
	"\vplayer_turn\x18\x02 \x01(\tR\n" +
	"playerTurn\x121\n" +
	"\x15is_update_player_hand\x18\x05 \x01(\bR\x12isUpdatePlayerHand\x12+\n" +
	"\x04hand\x18\x06 \x01(\v2\x17.TongitsPlayerHandCardsR\x04hand\x12&\n" +
	"\x0fis_update_table\x18\v \x01(\bR\risUpdateTable\x12*\n" +
	"\x05table\x18\f \x01(\v2\x14.Tongits_UpdateTableR\x05table\"\xed\x02\n" +
	"\x13Tongits_UpdateTable\x12)\n" +
	"\aplayers\x18\x01 \x03(\v2\x0f.Tongits_PlayerR\aplayers\x128\n" +
	"\x0fplaying_players\x18\x02 \x03(\v2\x0f.Tongits_PlayerR\x0eplayingPlayers\x122\n" +
	"\fjoin_players\x18\x03 \x03(\v2\x0f.Tongits_PlayerR\vjoinPlayers\x124\n" +
	"\rleave_players\x18\x04 \x03(\v2\x0f.Tongits_PlayerR\fleavePlayers\x12\x16\n" +
	"\x03pot\x18\x05 \x01(\v2\x04.PotR\x03pot\x12\x1b\n" +
	"\ttime_play\x18\a \x01(\x03R\btimePlay\x12\x1f\n" +
	"\vremain_time\x18\b \x01(\x03R\n" +
	"remainTime\x121\n" +
	"\n" +
	"game_state\x18\t \x01(\x0e2\x12.Tongits_GameStateR\tgameState\"\xd3\x01\n" +
	"\x0eTongits_Player\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x16\n" +
	"\x06wallet\x18\x03 \x01(\tR\x06wallet\x12\x1d\n" +
	"\n" +
	"is_playing\x18\x04 \x01(\bR\tisPlaying\x12#\n" +
	"\x05cards\x18\x06 \x03(\v2\r.Tongits_CardR\x05cards\x12\x1b\n" +
	"\tvip_level\x18\a \x01(\x03R\bvipLevel\x12\x1b\n" +
	"\tavatar_id\x18\r \x01(\tR\bavatarId*\x8e\x01\n" +
	"\x11Tongits_GameState\x12\v\n" +
	"\aUnknown\x10\x00\x12\b\n" +
	"\x04Idle\x10\x01\x12\f\n" +
	"\bMatching\x10\x02\x12\r\n" +
	"\tPreparing\x10\x03\x12\b\n" +
	"\x04Play\x10\x04\x12\x0f\n" +
	"\vDeclareTime\x10\x05\x12\n" +
	"\n" +
	"\x06Reward\x10\x06\x12\x12\n" +
	"\x0eFight_Response\x10\b\x12\n" +
	"\n" +
	"\x06Finish\x10\a*m\n" +
	"\x10Tongits_CardSuit\x12\x14\n" +
	"\x10SUIT_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vSUIT_HEARTS\x10\x01\x12\x11\n" +
	"\rSUIT_DIAMONDS\x10\x02\x12\x0e\n" +
	"\n" +
	"SUIT_CLUBS\x10\x03\x12\x0f\n" +
	"\vSUIT_SPADES\x10\x04*\xc5\x01\n" +
	"\x10Tongits_CardRank\x12\x14\n" +
	"\x10RANK_UNSPECIFIED\x10\x00\x12\n" +
	"\n" +
	"\x06RANK_A\x10\x01\x12\n" +
	"\n" +
	"\x06RANK_2\x10\x02\x12\n" +
	"\n" +
	"\x06RANK_3\x10\x03\x12\n" +
	"\n" +
	"\x06RANK_4\x10\x04\x12\n" +
	"\n" +
	"\x06RANK_5\x10\x05\x12\n" +
	"\n" +
	"\x06RANK_6\x10\x06\x12\n" +
	"\n" +
	"\x06RANK_7\x10\a\x12\n" +
	"\n" +
	"\x06RANK_8\x10\b\x12\n" +
	"\n" +
	"\x06RANK_9\x10\t\x12\v\n" +
	"\aRANK_10\x10\n" +
	"\x12\n" +
	"\n" +
	"\x06RANK_J\x10\v\x12\n" +
	"\n" +
	"\x06RANK_Q\x10\f\x12\n" +
	"\n" +
	"\x06RANK_K\x10\r*\xb5\x02\n" +
	"\x14Tongits_OpCodeUpdate\x12\f\n" +
	"\bUNDEFINE\x10\x00\x12\x10\n" +
	"\fUPDATE_TABLE\x10\x01\x12\b\n" +
	"\x04DEAL\x10\x02\x12\n" +
	"\n" +
	"\x06FINISH\x10\x03\x12\v\n" +
	"\aTONGITS\x10\x04\x12\x15\n" +
	"\x11UPDATE_GAME_STATE\x10\x05\x12\x11\n" +
	"\rUPDATE_WALLET\x10\a\x12\x16\n" +
	"\x12KICK_OFF_THE_TABLE\x10\b\x12\x14\n" +
	"\x10UPDATE_USER_INFO\x10\t\x12\v\n" +
	"\aDISCARD\x10\n" +
	"\x12\r\n" +
	"\tSEND_CARD\x10\v\x12\r\n" +
	"\tSHOW_SUIT\x10\f\x12\f\n" +
	"\bHIT_CARD\x10\r\x12\r\n" +
	"\tTAKE_CARD\x10\x0f\x12\x0e\n" +
	"\n" +
	"UPDATE_POT\x10\x0e\x12\v\n" +
	"\aDECLARE\x10\x10\x12\t\n" +
	"\x05FIGHT\x10\x11\x12\x12\n" +
	"\x0eFIGHT_RESPONSE\x10\x12B(Z&github.com/nakamaFramework/tongits/apib\x06proto3"

var (
	file_tongits_api_proto_rawDescOnce sync.Once
	file_tongits_api_proto_rawDescData []byte
)

func file_tongits_api_proto_rawDescGZIP() []byte {
	file_tongits_api_proto_rawDescOnce.Do(func() {
		file_tongits_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tongits_api_proto_rawDesc), len(file_tongits_api_proto_rawDesc)))
	})
	return file_tongits_api_proto_rawDescData
}

var file_tongits_api_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tongits_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_tongits_api_proto_goTypes = []any{
	(Tongits_GameState)(0),         // 0: Tongits_GameState
	(Tongits_CardSuit)(0),          // 1: Tongits_CardSuit
	(Tongits_CardRank)(0),          // 2: Tongits_CardRank
	(Tongits_OpCodeUpdate)(0),      // 3: Tongits_OpCodeUpdate
	(*Tongits_Card)(nil),           // 4: Tongits_Card
	(*TongitsPlayerHandCards)(nil), // 5: TongitsPlayerHandCards
	(*TongitsUpdateDeal)(nil),      // 6: TongitsUpdateDeal
	(*Pot)(nil),                    // 7: Pot
	(*ChipUpdate)(nil),             // 8: ChipUpdate
	(*Tongits_ListCard)(nil),       // 9: Tongits_ListCard
	(*Tongits_ListSuit)(nil),       // 10: Tongits_ListSuit
	(*DisCard)(nil),                // 11: DisCard
	(*SendCard)(nil),               // 12: SendCard
	(*HitCard)(nil),                // 13: HitCard
	(*ShowSuit)(nil),               // 14: ShowSuit
	(*TakeCard)(nil),               // 15: TakeCard
	(*StartDeclareNoti)(nil),       // 16: StartDeclareNoti
	(*PlayerDeclare)(nil),          // 17: PlayerDeclare
	(*FightResponse)(nil),          // 18: FightResponse
	(*Fight)(nil),                  // 19: Fight
	(*FinishGame)(nil),             // 20: FinishGame
	(*TongitsFinishItem)(nil),      // 21: TongitsFinishItem
	(*TongitsUpdateDesk)(nil),      // 22: TongitsUpdateDesk
	(*Tongits_UpdateTable)(nil),    // 23: Tongits_UpdateTable
	(*Tongits_Player)(nil),         // 24: Tongits_Player
}
var file_tongits_api_proto_depIdxs = []int32{
	2,  // 0: Tongits_Card.rank:type_name -> Tongits_CardRank
	1,  // 1: Tongits_Card.suit:type_name -> Tongits_CardSuit
	4,  // 2: TongitsPlayerHandCards.cards:type_name -> Tongits_Card
	5,  // 3: TongitsUpdateDeal.hand:type_name -> TongitsPlayerHandCards
	8,  // 4: Pot.ChipUpdates:type_name -> ChipUpdate
	4,  // 5: Tongits_ListCard.cards:type_name -> Tongits_Card
	9,  // 6: Tongits_ListSuit.suits:type_name -> Tongits_ListCard
	4,  // 7: DisCard.card:type_name -> Tongits_Card
	9,  // 8: SendCard.cardsFrom:type_name -> Tongits_ListCard
	9,  // 9: SendCard.cardsTo:type_name -> Tongits_ListCard
	9,  // 10: HitCard.cards:type_name -> Tongits_ListCard
	9,  // 11: ShowSuit.suit:type_name -> Tongits_ListCard
	4,  // 12: TakeCard.card:type_name -> Tongits_Card
	21, // 13: FinishGame.inforFinish:type_name -> TongitsFinishItem
	9,  // 14: TongitsFinishItem.hand:type_name -> Tongits_ListCard
	5,  // 15: TongitsUpdateDesk.hand:type_name -> TongitsPlayerHandCards
	23, // 16: TongitsUpdateDesk.table:type_name -> Tongits_UpdateTable
	24, // 17: Tongits_UpdateTable.players:type_name -> Tongits_Player
	24, // 18: Tongits_UpdateTable.playing_players:type_name -> Tongits_Player
	24, // 19: Tongits_UpdateTable.join_players:type_name -> Tongits_Player
	24, // 20: Tongits_UpdateTable.leave_players:type_name -> Tongits_Player
	7,  // 21: Tongits_UpdateTable.pot:type_name -> Pot
	0,  // 22: Tongits_UpdateTable.game_state:type_name -> Tongits_GameState
	4,  // 23: Tongits_Player.cards:type_name -> Tongits_Card
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_tongits_api_proto_init() }
func file_tongits_api_proto_init() {
	if File_tongits_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tongits_api_proto_rawDesc), len(file_tongits_api_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tongits_api_proto_goTypes,
		DependencyIndexes: file_tongits_api_proto_depIdxs,
		EnumInfos:         file_tongits_api_proto_enumTypes,
		MessageInfos:      file_tongits_api_proto_msgTypes,
	}.Build()
	File_tongits_api_proto = out.File
	file_tongits_api_proto_goTypes = nil
	file_tongits_api_proto_depIdxs = nil
}
