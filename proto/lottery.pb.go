// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: lottery.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Lottery ticket status
type LotteryTicketStatus int32

const (
	LotteryTicketStatus_LOTTERY_TICKET_STATUS_WAITING LotteryTicketStatus = 0
	LotteryTicketStatus_LOTTERY_TICKET_STATUS_WIN     LotteryTicketStatus = 1
	LotteryTicketStatus_LOTTERY_TICKET_STATUS_LOSE    LotteryTicketStatus = 2
)

// Enum value maps for LotteryTicketStatus.
var (
	LotteryTicketStatus_name = map[int32]string{
		0: "LOTTERY_TICKET_STATUS_WAITING",
		1: "LOTTERY_TICKET_STATUS_WIN",
		2: "LOTTERY_TICKET_STATUS_LOSE",
	}
	LotteryTicketStatus_value = map[string]int32{
		"LOTTERY_TICKET_STATUS_WAITING": 0,
		"LOTTERY_TICKET_STATUS_WIN":     1,
		"LOTTERY_TICKET_STATUS_LOSE":    2,
	}
)

func (x LotteryTicketStatus) Enum() *LotteryTicketStatus {
	p := new(LotteryTicketStatus)
	*p = x
	return p
}

func (x LotteryTicketStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LotteryTicketStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lottery_proto_enumTypes[0].Descriptor()
}

func (LotteryTicketStatus) Type() protoreflect.EnumType {
	return &file_lottery_proto_enumTypes[0]
}

func (x LotteryTicketStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LotteryTicketStatus.Descriptor instead.
func (LotteryTicketStatus) EnumDescriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{0}
}

// Lottery draw status
type LotteryDrawStatus int32

const (
	LotteryDrawStatus_LOTTERY_DRAW_STATUS_UPCOMING LotteryDrawStatus = 0
	LotteryDrawStatus_LOTTERY_DRAW_STATUS_CLOSED   LotteryDrawStatus = 1
	LotteryDrawStatus_LOTTERY_DRAW_STATUS_DRAWN    LotteryDrawStatus = 2
)

// Enum value maps for LotteryDrawStatus.
var (
	LotteryDrawStatus_name = map[int32]string{
		0: "LOTTERY_DRAW_STATUS_UPCOMING",
		1: "LOTTERY_DRAW_STATUS_CLOSED",
		2: "LOTTERY_DRAW_STATUS_DRAWN",
	}
	LotteryDrawStatus_value = map[string]int32{
		"LOTTERY_DRAW_STATUS_UPCOMING": 0,
		"LOTTERY_DRAW_STATUS_CLOSED":   1,
		"LOTTERY_DRAW_STATUS_DRAWN":    2,
	}
)

func (x LotteryDrawStatus) Enum() *LotteryDrawStatus {
	p := new(LotteryDrawStatus)
	*p = x
	return p
}

func (x LotteryDrawStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LotteryDrawStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_lottery_proto_enumTypes[1].Descriptor()
}

func (LotteryDrawStatus) Type() protoreflect.EnumType {
	return &file_lottery_proto_enumTypes[1]
}

func (x LotteryDrawStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LotteryDrawStatus.Descriptor instead.
func (LotteryDrawStatus) EnumDescriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{1}
}

// Request to buy lottery ticket
type BuyLotteryTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Numbers       []int32                `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`      // 6 numbers from 1-49
	DrawId        int64                  `protobuf:"varint,2,opt,name=draw_id,json=drawId,proto3" json:"draw_id,omitempty"` // Which draw session to participate
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyLotteryTicketRequest) Reset() {
	*x = BuyLotteryTicketRequest{}
	mi := &file_lottery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyLotteryTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyLotteryTicketRequest) ProtoMessage() {}

func (x *BuyLotteryTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyLotteryTicketRequest.ProtoReflect.Descriptor instead.
func (*BuyLotteryTicketRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{0}
}

func (x *BuyLotteryTicketRequest) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *BuyLotteryTicketRequest) GetDrawId() int64 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

// Response after buying ticket
type BuyLotteryTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *LotteryTicket         `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	Profile       *Profile               `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"` // Updated user profile with new balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyLotteryTicketResponse) Reset() {
	*x = BuyLotteryTicketResponse{}
	mi := &file_lottery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyLotteryTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyLotteryTicketResponse) ProtoMessage() {}

func (x *BuyLotteryTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyLotteryTicketResponse.ProtoReflect.Descriptor instead.
func (*BuyLotteryTicketResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{1}
}

func (x *BuyLotteryTicketResponse) GetTicket() *LotteryTicket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

func (x *BuyLotteryTicketResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// Request to buy multiple tickets
type BuyMultipleLotteryTicketsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*LotteryTicketInput  `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyMultipleLotteryTicketsRequest) Reset() {
	*x = BuyMultipleLotteryTicketsRequest{}
	mi := &file_lottery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyMultipleLotteryTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyMultipleLotteryTicketsRequest) ProtoMessage() {}

func (x *BuyMultipleLotteryTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyMultipleLotteryTicketsRequest.ProtoReflect.Descriptor instead.
func (*BuyMultipleLotteryTicketsRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{2}
}

func (x *BuyMultipleLotteryTicketsRequest) GetTickets() []*LotteryTicketInput {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type LotteryTicketInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Numbers       []int32                `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"` // 6 numbers from 1-49
	DrawId        int64                  `protobuf:"varint,2,opt,name=draw_id,json=drawId,proto3" json:"draw_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LotteryTicketInput) Reset() {
	*x = LotteryTicketInput{}
	mi := &file_lottery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LotteryTicketInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryTicketInput) ProtoMessage() {}

func (x *LotteryTicketInput) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryTicketInput.ProtoReflect.Descriptor instead.
func (*LotteryTicketInput) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{3}
}

func (x *LotteryTicketInput) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *LotteryTicketInput) GetDrawId() int64 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

// Response for multiple tickets
type BuyMultipleLotteryTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*LotteryTicket       `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	Profile       *Profile               `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BuyMultipleLotteryTicketsResponse) Reset() {
	*x = BuyMultipleLotteryTicketsResponse{}
	mi := &file_lottery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyMultipleLotteryTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyMultipleLotteryTicketsResponse) ProtoMessage() {}

func (x *BuyMultipleLotteryTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyMultipleLotteryTicketsResponse.ProtoReflect.Descriptor instead.
func (*BuyMultipleLotteryTicketsResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{4}
}

func (x *BuyMultipleLotteryTicketsResponse) GetTickets() []*LotteryTicket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *BuyMultipleLotteryTicketsResponse) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// Lottery ticket data
type LotteryTicket struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId           string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName         string                 `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Numbers          []int32                `protobuf:"varint,4,rep,packed,name=numbers,proto3" json:"numbers,omitempty"` // 6 numbers chosen
	DrawId           int64                  `protobuf:"varint,5,opt,name=draw_id,json=drawId,proto3" json:"draw_id,omitempty"`
	PurchasePrice    int64                  `protobuf:"varint,6,opt,name=purchase_price,json=purchasePrice,proto3" json:"purchase_price,omitempty"`
	Status           LotteryTicketStatus    `protobuf:"varint,7,opt,name=status,proto3,enum=proto.LotteryTicketStatus" json:"status,omitempty"`
	Reward           int64                  `protobuf:"varint,8,opt,name=reward,proto3" json:"reward,omitempty"`                                 // Amount won
	MatchedCount     int32                  `protobuf:"varint,9,opt,name=matched_count,json=matchedCount,proto3" json:"matched_count,omitempty"` // How many numbers matched
	PurchaseTimeUnix int64                  `protobuf:"varint,10,opt,name=purchase_time_unix,json=purchaseTimeUnix,proto3" json:"purchase_time_unix,omitempty"`
	DrawTimeUnix     int64                  `protobuf:"varint,11,opt,name=draw_time_unix,json=drawTimeUnix,proto3" json:"draw_time_unix,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LotteryTicket) Reset() {
	*x = LotteryTicket{}
	mi := &file_lottery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LotteryTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryTicket) ProtoMessage() {}

func (x *LotteryTicket) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryTicket.ProtoReflect.Descriptor instead.
func (*LotteryTicket) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{5}
}

func (x *LotteryTicket) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LotteryTicket) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *LotteryTicket) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LotteryTicket) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *LotteryTicket) GetDrawId() int64 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

func (x *LotteryTicket) GetPurchasePrice() int64 {
	if x != nil {
		return x.PurchasePrice
	}
	return 0
}

func (x *LotteryTicket) GetStatus() LotteryTicketStatus {
	if x != nil {
		return x.Status
	}
	return LotteryTicketStatus_LOTTERY_TICKET_STATUS_WAITING
}

func (x *LotteryTicket) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *LotteryTicket) GetMatchedCount() int32 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *LotteryTicket) GetPurchaseTimeUnix() int64 {
	if x != nil {
		return x.PurchaseTimeUnix
	}
	return 0
}

func (x *LotteryTicket) GetDrawTimeUnix() int64 {
	if x != nil {
		return x.DrawTimeUnix
	}
	return 0
}

// Lottery draw session
type LotteryDraw struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DrawTimeUnix       int64                  `protobuf:"varint,2,opt,name=draw_time_unix,json=drawTimeUnix,proto3" json:"draw_time_unix,omitempty"`    // When the draw will happen
	CloseTimeUnix      int64                  `protobuf:"varint,3,opt,name=close_time_unix,json=closeTimeUnix,proto3" json:"close_time_unix,omitempty"` // When ticket sales close (30 min before draw)
	Status             LotteryDrawStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=proto.LotteryDrawStatus" json:"status,omitempty"`
	WinningNumbers     []int32                `protobuf:"varint,5,rep,packed,name=winning_numbers,json=winningNumbers,proto3" json:"winning_numbers,omitempty"` // The 6 winning numbers
	PrizePool          int64                  `protobuf:"varint,6,opt,name=prize_pool,json=prizePool,proto3" json:"prize_pool,omitempty"`                       // Total prize pool for this draw
	TotalTicketsSold   int64                  `protobuf:"varint,7,opt,name=total_tickets_sold,json=totalTicketsSold,proto3" json:"total_tickets_sold,omitempty"`
	TotalTicketSales   int64                  `protobuf:"varint,8,opt,name=total_ticket_sales,json=totalTicketSales,proto3" json:"total_ticket_sales,omitempty"`         // Total money from ticket sales
	ActualDrawTimeUnix int64                  `protobuf:"varint,9,opt,name=actual_draw_time_unix,json=actualDrawTimeUnix,proto3" json:"actual_draw_time_unix,omitempty"` // When draw actually happened
	WinnerStats        *WinnerStats           `protobuf:"bytes,10,opt,name=winner_stats,json=winnerStats,proto3" json:"winner_stats,omitempty"`                          // Statistics about winners
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LotteryDraw) Reset() {
	*x = LotteryDraw{}
	mi := &file_lottery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LotteryDraw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LotteryDraw) ProtoMessage() {}

func (x *LotteryDraw) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LotteryDraw.ProtoReflect.Descriptor instead.
func (*LotteryDraw) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{6}
}

func (x *LotteryDraw) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LotteryDraw) GetDrawTimeUnix() int64 {
	if x != nil {
		return x.DrawTimeUnix
	}
	return 0
}

func (x *LotteryDraw) GetCloseTimeUnix() int64 {
	if x != nil {
		return x.CloseTimeUnix
	}
	return 0
}

func (x *LotteryDraw) GetStatus() LotteryDrawStatus {
	if x != nil {
		return x.Status
	}
	return LotteryDrawStatus_LOTTERY_DRAW_STATUS_UPCOMING
}

func (x *LotteryDraw) GetWinningNumbers() []int32 {
	if x != nil {
		return x.WinningNumbers
	}
	return nil
}

func (x *LotteryDraw) GetPrizePool() int64 {
	if x != nil {
		return x.PrizePool
	}
	return 0
}

func (x *LotteryDraw) GetTotalTicketsSold() int64 {
	if x != nil {
		return x.TotalTicketsSold
	}
	return 0
}

func (x *LotteryDraw) GetTotalTicketSales() int64 {
	if x != nil {
		return x.TotalTicketSales
	}
	return 0
}

func (x *LotteryDraw) GetActualDrawTimeUnix() int64 {
	if x != nil {
		return x.ActualDrawTimeUnix
	}
	return 0
}

func (x *LotteryDraw) GetWinnerStats() *WinnerStats {
	if x != nil {
		return x.WinnerStats
	}
	return nil
}

// Statistics about winners in a draw
type WinnerStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Winners_6Match int32                  `protobuf:"varint,1,opt,name=winners_6_match,json=winners6Match,proto3" json:"winners_6_match,omitempty"`
	Winners_5Match int32                  `protobuf:"varint,2,opt,name=winners_5_match,json=winners5Match,proto3" json:"winners_5_match,omitempty"`
	Winners_4Match int32                  `protobuf:"varint,3,opt,name=winners_4_match,json=winners4Match,proto3" json:"winners_4_match,omitempty"`
	Winners_3Match int32                  `protobuf:"varint,4,opt,name=winners_3_match,json=winners3Match,proto3" json:"winners_3_match,omitempty"`
	Winners_2Match int32                  `protobuf:"varint,5,opt,name=winners_2_match,json=winners2Match,proto3" json:"winners_2_match,omitempty"`
	Prize_6Match   int64                  `protobuf:"varint,6,opt,name=prize_6_match,json=prize6Match,proto3" json:"prize_6_match,omitempty"` // Total prize for 6 match winners
	Prize_5Match   int64                  `protobuf:"varint,7,opt,name=prize_5_match,json=prize5Match,proto3" json:"prize_5_match,omitempty"`
	Prize_4Match   int64                  `protobuf:"varint,8,opt,name=prize_4_match,json=prize4Match,proto3" json:"prize_4_match,omitempty"`
	Prize_3Match   int64                  `protobuf:"varint,9,opt,name=prize_3_match,json=prize3Match,proto3" json:"prize_3_match,omitempty"`
	Prize_2Match   int64                  `protobuf:"varint,10,opt,name=prize_2_match,json=prize2Match,proto3" json:"prize_2_match,omitempty"` // Refund amount per ticket
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WinnerStats) Reset() {
	*x = WinnerStats{}
	mi := &file_lottery_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WinnerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WinnerStats) ProtoMessage() {}

func (x *WinnerStats) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WinnerStats.ProtoReflect.Descriptor instead.
func (*WinnerStats) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{7}
}

func (x *WinnerStats) GetWinners_6Match() int32 {
	if x != nil {
		return x.Winners_6Match
	}
	return 0
}

func (x *WinnerStats) GetWinners_5Match() int32 {
	if x != nil {
		return x.Winners_5Match
	}
	return 0
}

func (x *WinnerStats) GetWinners_4Match() int32 {
	if x != nil {
		return x.Winners_4Match
	}
	return 0
}

func (x *WinnerStats) GetWinners_3Match() int32 {
	if x != nil {
		return x.Winners_3Match
	}
	return 0
}

func (x *WinnerStats) GetWinners_2Match() int32 {
	if x != nil {
		return x.Winners_2Match
	}
	return 0
}

func (x *WinnerStats) GetPrize_6Match() int64 {
	if x != nil {
		return x.Prize_6Match
	}
	return 0
}

func (x *WinnerStats) GetPrize_5Match() int64 {
	if x != nil {
		return x.Prize_5Match
	}
	return 0
}

func (x *WinnerStats) GetPrize_4Match() int64 {
	if x != nil {
		return x.Prize_4Match
	}
	return 0
}

func (x *WinnerStats) GetPrize_3Match() int64 {
	if x != nil {
		return x.Prize_3Match
	}
	return 0
}

func (x *WinnerStats) GetPrize_2Match() int64 {
	if x != nil {
		return x.Prize_2Match
	}
	return 0
}

// Request to get user's lottery history
type GetLotteryHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Status        LotteryTicketStatus    `protobuf:"varint,4,opt,name=status,proto3,enum=proto.LotteryTicketStatus" json:"status,omitempty"` // Filter by status (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLotteryHistoryRequest) Reset() {
	*x = GetLotteryHistoryRequest{}
	mi := &file_lottery_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotteryHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotteryHistoryRequest) ProtoMessage() {}

func (x *GetLotteryHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotteryHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetLotteryHistoryRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{8}
}

func (x *GetLotteryHistoryRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetLotteryHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetLotteryHistoryRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetLotteryHistoryRequest) GetStatus() LotteryTicketStatus {
	if x != nil {
		return x.Status
	}
	return LotteryTicketStatus_LOTTERY_TICKET_STATUS_WAITING
}

// Response with user's lottery tickets
type GetLotteryHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*LotteryTicket       `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLotteryHistoryResponse) Reset() {
	*x = GetLotteryHistoryResponse{}
	mi := &file_lottery_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotteryHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotteryHistoryResponse) ProtoMessage() {}

func (x *GetLotteryHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotteryHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetLotteryHistoryResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{9}
}

func (x *GetLotteryHistoryResponse) GetTickets() []*LotteryTicket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *GetLotteryHistoryResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Request to get available draws
type GetAvailableDrawsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // How many upcoming draws to fetch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableDrawsRequest) Reset() {
	*x = GetAvailableDrawsRequest{}
	mi := &file_lottery_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableDrawsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableDrawsRequest) ProtoMessage() {}

func (x *GetAvailableDrawsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableDrawsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableDrawsRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvailableDrawsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response with available draws
type GetAvailableDrawsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draws         []*LotteryDraw         `protobuf:"bytes,1,rep,name=draws,proto3" json:"draws,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableDrawsResponse) Reset() {
	*x = GetAvailableDrawsResponse{}
	mi := &file_lottery_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableDrawsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableDrawsResponse) ProtoMessage() {}

func (x *GetAvailableDrawsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableDrawsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableDrawsResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{11}
}

func (x *GetAvailableDrawsResponse) GetDraws() []*LotteryDraw {
	if x != nil {
		return x.Draws
	}
	return nil
}

// Request to get draw results
type GetDrawResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DrawId        int64                  `protobuf:"varint,1,opt,name=draw_id,json=drawId,proto3" json:"draw_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDrawResultRequest) Reset() {
	*x = GetDrawResultRequest{}
	mi := &file_lottery_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDrawResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDrawResultRequest) ProtoMessage() {}

func (x *GetDrawResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDrawResultRequest.ProtoReflect.Descriptor instead.
func (*GetDrawResultRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{12}
}

func (x *GetDrawResultRequest) GetDrawId() int64 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

// Response with draw results
type GetDrawResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draw          *LotteryDraw           `protobuf:"bytes,1,opt,name=draw,proto3" json:"draw,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDrawResultResponse) Reset() {
	*x = GetDrawResultResponse{}
	mi := &file_lottery_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDrawResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDrawResultResponse) ProtoMessage() {}

func (x *GetDrawResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDrawResultResponse.ProtoReflect.Descriptor instead.
func (*GetDrawResultResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{13}
}

func (x *GetDrawResultResponse) GetDraw() *LotteryDraw {
	if x != nil {
		return x.Draw
	}
	return nil
}

// Request to get latest draw result
type GetLatestDrawResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestDrawResultRequest) Reset() {
	*x = GetLatestDrawResultRequest{}
	mi := &file_lottery_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestDrawResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestDrawResultRequest) ProtoMessage() {}

func (x *GetLatestDrawResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestDrawResultRequest.ProtoReflect.Descriptor instead.
func (*GetLatestDrawResultRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{14}
}

// Response with latest draw result
type GetLatestDrawResultResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draw          *LotteryDraw           `protobuf:"bytes,1,opt,name=draw,proto3" json:"draw,omitempty"`
	UserTickets   []*LotteryTicket       `protobuf:"bytes,2,rep,name=user_tickets,json=userTickets,proto3" json:"user_tickets,omitempty"` // User's tickets for this draw (if any)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLatestDrawResultResponse) Reset() {
	*x = GetLatestDrawResultResponse{}
	mi := &file_lottery_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestDrawResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestDrawResultResponse) ProtoMessage() {}

func (x *GetLatestDrawResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestDrawResultResponse.ProtoReflect.Descriptor instead.
func (*GetLatestDrawResultResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{15}
}

func (x *GetLatestDrawResultResponse) GetDraw() *LotteryDraw {
	if x != nil {
		return x.Draw
	}
	return nil
}

func (x *GetLatestDrawResultResponse) GetUserTickets() []*LotteryTicket {
	if x != nil {
		return x.UserTickets
	}
	return nil
}

// Request to get quick pick numbers
type QuickPickRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // How many sets of numbers to generate (default 1)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickPickRequest) Reset() {
	*x = QuickPickRequest{}
	mi := &file_lottery_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickPickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickPickRequest) ProtoMessage() {}

func (x *QuickPickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickPickRequest.ProtoReflect.Descriptor instead.
func (*QuickPickRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{16}
}

func (x *QuickPickRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Response with quick pick numbers
type QuickPickResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NumberSets    []*QuickPickNumbers    `protobuf:"bytes,1,rep,name=number_sets,json=numberSets,proto3" json:"number_sets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickPickResponse) Reset() {
	*x = QuickPickResponse{}
	mi := &file_lottery_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickPickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickPickResponse) ProtoMessage() {}

func (x *QuickPickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickPickResponse.ProtoReflect.Descriptor instead.
func (*QuickPickResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{17}
}

func (x *QuickPickResponse) GetNumberSets() []*QuickPickNumbers {
	if x != nil {
		return x.NumberSets
	}
	return nil
}

type QuickPickNumbers struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Numbers       []int32                `protobuf:"varint,1,rep,packed,name=numbers,proto3" json:"numbers,omitempty"` // 6 random numbers
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuickPickNumbers) Reset() {
	*x = QuickPickNumbers{}
	mi := &file_lottery_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuickPickNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickPickNumbers) ProtoMessage() {}

func (x *QuickPickNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickPickNumbers.ProtoReflect.Descriptor instead.
func (*QuickPickNumbers) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{18}
}

func (x *QuickPickNumbers) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

// Admin request to manually trigger draw
type TriggerDrawRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DrawId        int64                  `protobuf:"varint,1,opt,name=draw_id,json=drawId,proto3" json:"draw_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerDrawRequest) Reset() {
	*x = TriggerDrawRequest{}
	mi := &file_lottery_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerDrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerDrawRequest) ProtoMessage() {}

func (x *TriggerDrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerDrawRequest.ProtoReflect.Descriptor instead.
func (*TriggerDrawRequest) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{19}
}

func (x *TriggerDrawRequest) GetDrawId() int64 {
	if x != nil {
		return x.DrawId
	}
	return 0
}

// Admin response
type TriggerDrawResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Draw          *LotteryDraw           `protobuf:"bytes,1,opt,name=draw,proto3" json:"draw,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerDrawResponse) Reset() {
	*x = TriggerDrawResponse{}
	mi := &file_lottery_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerDrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerDrawResponse) ProtoMessage() {}

func (x *TriggerDrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerDrawResponse.ProtoReflect.Descriptor instead.
func (*TriggerDrawResponse) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{20}
}

func (x *TriggerDrawResponse) GetDraw() *LotteryDraw {
	if x != nil {
		return x.Draw
	}
	return nil
}

func (x *TriggerDrawResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Import Profile from auth.proto for user balance updates
type Profile struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	UserId                 string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName               string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	DisplayName            string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	AvatarUrl              string                 `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Status                 string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	AccountChip            int64                  `protobuf:"varint,6,opt,name=account_chip,json=accountChip,proto3" json:"account_chip,omitempty"`
	BankChip               int64                  `protobuf:"varint,7,opt,name=bank_chip,json=bankChip,proto3" json:"bank_chip,omitempty"`
	RefCode                string                 `protobuf:"bytes,8,opt,name=ref_code,json=refCode,proto3" json:"ref_code,omitempty"`
	LangTag                string                 `protobuf:"bytes,9,opt,name=lang_tag,json=langTag,proto3" json:"lang_tag,omitempty"`
	LinkGroup              string                 `protobuf:"bytes,10,opt,name=link_group,json=linkGroup,proto3" json:"link_group,omitempty"`
	LinkFanpageFb          string                 `protobuf:"bytes,11,opt,name=link_fanpage_fb,json=linkFanpageFb,proto3" json:"link_fanpage_fb,omitempty"`
	AppConfig              string                 `protobuf:"bytes,12,opt,name=app_config,json=appConfig,proto3" json:"app_config,omitempty"`
	AvatarId               string                 `protobuf:"bytes,13,opt,name=avatar_id,json=avatarId,proto3" json:"avatar_id,omitempty"`
	Registrable            bool                   `protobuf:"varint,14,opt,name=registrable,proto3" json:"registrable,omitempty"`
	VipLevel               int64                  `protobuf:"varint,15,opt,name=vip_level,json=vipLevel,proto3" json:"vip_level,omitempty"`
	LastOnlineTimeUnix     int64                  `protobuf:"varint,16,opt,name=last_online_time_unix,json=lastOnlineTimeUnix,proto3" json:"last_online_time_unix,omitempty"`
	CreateTimeUnix         int64                  `protobuf:"varint,17,opt,name=create_time_unix,json=createTimeUnix,proto3" json:"create_time_unix,omitempty"`
	RemainTimeInputRefCode int64                  `protobuf:"varint,18,opt,name=remain_time_input_ref_code,json=remainTimeInputRefCode,proto3" json:"remain_time_input_ref_code,omitempty"`
	UserSid                int64                  `protobuf:"varint,29,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_lottery_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_lottery_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_lottery_proto_rawDescGZIP(), []int{21}
}

func (x *Profile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Profile) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Profile) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Profile) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Profile) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Profile) GetAccountChip() int64 {
	if x != nil {
		return x.AccountChip
	}
	return 0
}

func (x *Profile) GetBankChip() int64 {
	if x != nil {
		return x.BankChip
	}
	return 0
}

func (x *Profile) GetRefCode() string {
	if x != nil {
		return x.RefCode
	}
	return ""
}

func (x *Profile) GetLangTag() string {
	if x != nil {
		return x.LangTag
	}
	return ""
}

func (x *Profile) GetLinkGroup() string {
	if x != nil {
		return x.LinkGroup
	}
	return ""
}

func (x *Profile) GetLinkFanpageFb() string {
	if x != nil {
		return x.LinkFanpageFb
	}
	return ""
}

func (x *Profile) GetAppConfig() string {
	if x != nil {
		return x.AppConfig
	}
	return ""
}

func (x *Profile) GetAvatarId() string {
	if x != nil {
		return x.AvatarId
	}
	return ""
}

func (x *Profile) GetRegistrable() bool {
	if x != nil {
		return x.Registrable
	}
	return false
}

func (x *Profile) GetVipLevel() int64 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *Profile) GetLastOnlineTimeUnix() int64 {
	if x != nil {
		return x.LastOnlineTimeUnix
	}
	return 0
}

func (x *Profile) GetCreateTimeUnix() int64 {
	if x != nil {
		return x.CreateTimeUnix
	}
	return 0
}

func (x *Profile) GetRemainTimeInputRefCode() int64 {
	if x != nil {
		return x.RemainTimeInputRefCode
	}
	return 0
}

func (x *Profile) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

var File_lottery_proto protoreflect.FileDescriptor

const file_lottery_proto_rawDesc = "" +
	"\n" +
	"\rlottery.proto\x12\x05proto\"L\n" +
	"\x17BuyLotteryTicketRequest\x12\x18\n" +
	"\anumbers\x18\x01 \x03(\x05R\anumbers\x12\x17\n" +
	"\adraw_id\x18\x02 \x01(\x03R\x06drawId\"r\n" +
	"\x18BuyLotteryTicketResponse\x12,\n" +
	"\x06ticket\x18\x01 \x01(\v2\x14.proto.LotteryTicketR\x06ticket\x12(\n" +
	"\aprofile\x18\x02 \x01(\v2\x0e.proto.ProfileR\aprofile\"W\n" +
	" BuyMultipleLotteryTicketsRequest\x123\n" +
	"\atickets\x18\x01 \x03(\v2\x19.proto.LotteryTicketInputR\atickets\"G\n" +
	"\x12LotteryTicketInput\x12\x18\n" +
	"\anumbers\x18\x01 \x03(\x05R\anumbers\x12\x17\n" +
	"\adraw_id\x18\x02 \x01(\x03R\x06drawId\"}\n" +
	"!BuyMultipleLotteryTicketsResponse\x12.\n" +
	"\atickets\x18\x01 \x03(\v2\x14.proto.LotteryTicketR\atickets\x12(\n" +
	"\aprofile\x18\x02 \x01(\v2\x0e.proto.ProfileR\aprofile\"\xf4\x02\n" +
	"\rLotteryTicket\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x03 \x01(\tR\buserName\x12\x18\n" +
	"\anumbers\x18\x04 \x03(\x05R\anumbers\x12\x17\n" +
	"\adraw_id\x18\x05 \x01(\x03R\x06drawId\x12%\n" +
	"\x0epurchase_price\x18\x06 \x01(\x03R\rpurchasePrice\x122\n" +
	"\x06status\x18\a \x01(\x0e2\x1a.proto.LotteryTicketStatusR\x06status\x12\x16\n" +
	"\x06reward\x18\b \x01(\x03R\x06reward\x12#\n" +
	"\rmatched_count\x18\t \x01(\x05R\fmatchedCount\x12,\n" +
	"\x12purchase_time_unix\x18\n" +
	" \x01(\x03R\x10purchaseTimeUnix\x12$\n" +
	"\x0edraw_time_unix\x18\v \x01(\x03R\fdrawTimeUnix\"\xab\x03\n" +
	"\vLotteryDraw\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12$\n" +
	"\x0edraw_time_unix\x18\x02 \x01(\x03R\fdrawTimeUnix\x12&\n" +
	"\x0fclose_time_unix\x18\x03 \x01(\x03R\rcloseTimeUnix\x120\n" +
	"\x06status\x18\x04 \x01(\x0e2\x18.proto.LotteryDrawStatusR\x06status\x12'\n" +
	"\x0fwinning_numbers\x18\x05 \x03(\x05R\x0ewinningNumbers\x12\x1d\n" +
	"\n" +
	"prize_pool\x18\x06 \x01(\x03R\tprizePool\x12,\n" +
	"\x12total_tickets_sold\x18\a \x01(\x03R\x10totalTicketsSold\x12,\n" +
	"\x12total_ticket_sales\x18\b \x01(\x03R\x10totalTicketSales\x121\n" +
	"\x15actual_draw_time_unix\x18\t \x01(\x03R\x12actualDrawTimeUnix\x125\n" +
	"\fwinner_stats\x18\n" +
	" \x01(\v2\x12.proto.WinnerStatsR\vwinnerStats\"\x89\x03\n" +
	"\vWinnerStats\x12&\n" +
	"\x0fwinners_6_match\x18\x01 \x01(\x05R\rwinners6Match\x12&\n" +
	"\x0fwinners_5_match\x18\x02 \x01(\x05R\rwinners5Match\x12&\n" +
	"\x0fwinners_4_match\x18\x03 \x01(\x05R\rwinners4Match\x12&\n" +
	"\x0fwinners_3_match\x18\x04 \x01(\x05R\rwinners3Match\x12&\n" +
	"\x0fwinners_2_match\x18\x05 \x01(\x05R\rwinners2Match\x12\"\n" +
	"\rprize_6_match\x18\x06 \x01(\x03R\vprize6Match\x12\"\n" +
	"\rprize_5_match\x18\a \x01(\x03R\vprize5Match\x12\"\n" +
	"\rprize_4_match\x18\b \x01(\x03R\vprize4Match\x12\"\n" +
	"\rprize_3_match\x18\t \x01(\x03R\vprize3Match\x12\"\n" +
	"\rprize_2_match\x18\n" +
	" \x01(\x03R\vprize2Match\"\x95\x01\n" +
	"\x18GetLotteryHistoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.proto.LotteryTicketStatusR\x06status\"a\n" +
	"\x19GetLotteryHistoryResponse\x12.\n" +
	"\atickets\x18\x01 \x03(\v2\x14.proto.LotteryTicketR\atickets\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"0\n" +
	"\x18GetAvailableDrawsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"E\n" +
	"\x19GetAvailableDrawsResponse\x12(\n" +
	"\x05draws\x18\x01 \x03(\v2\x12.proto.LotteryDrawR\x05draws\"/\n" +
	"\x14GetDrawResultRequest\x12\x17\n" +
	"\adraw_id\x18\x01 \x01(\x03R\x06drawId\"?\n" +
	"\x15GetDrawResultResponse\x12&\n" +
	"\x04draw\x18\x01 \x01(\v2\x12.proto.LotteryDrawR\x04draw\"\x1c\n" +
	"\x1aGetLatestDrawResultRequest\"~\n" +
	"\x1bGetLatestDrawResultResponse\x12&\n" +
	"\x04draw\x18\x01 \x01(\v2\x12.proto.LotteryDrawR\x04draw\x127\n" +
	"\fuser_tickets\x18\x02 \x03(\v2\x14.proto.LotteryTicketR\vuserTickets\"(\n" +
	"\x10QuickPickRequest\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\"M\n" +
	"\x11QuickPickResponse\x128\n" +
	"\vnumber_sets\x18\x01 \x03(\v2\x17.proto.QuickPickNumbersR\n" +
	"numberSets\",\n" +
	"\x10QuickPickNumbers\x12\x18\n" +
	"\anumbers\x18\x01 \x03(\x05R\anumbers\"-\n" +
	"\x12TriggerDrawRequest\x12\x17\n" +
	"\adraw_id\x18\x01 \x01(\x03R\x06drawId\"W\n" +
	"\x13TriggerDrawResponse\x12&\n" +
	"\x04draw\x18\x01 \x01(\v2\x12.proto.LotteryDrawR\x04draw\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x85\x05\n" +
	"\aProfile\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12!\n" +
	"\faccount_chip\x18\x06 \x01(\x03R\vaccountChip\x12\x1b\n" +
	"\tbank_chip\x18\a \x01(\x03R\bbankChip\x12\x19\n" +
	"\bref_code\x18\b \x01(\tR\arefCode\x12\x19\n" +
	"\blang_tag\x18\t \x01(\tR\alangTag\x12\x1d\n" +
	"\n" +
	"link_group\x18\n" +
	" \x01(\tR\tlinkGroup\x12&\n" +
	"\x0flink_fanpage_fb\x18\v \x01(\tR\rlinkFanpageFb\x12\x1d\n" +
	"\n" +
	"app_config\x18\f \x01(\tR\tappConfig\x12\x1b\n" +
	"\tavatar_id\x18\r \x01(\tR\bavatarId\x12 \n" +
	"\vregistrable\x18\x0e \x01(\bR\vregistrable\x12\x1b\n" +
	"\tvip_level\x18\x0f \x01(\x03R\bvipLevel\x121\n" +
	"\x15last_online_time_unix\x18\x10 \x01(\x03R\x12lastOnlineTimeUnix\x12(\n" +
	"\x10create_time_unix\x18\x11 \x01(\x03R\x0ecreateTimeUnix\x12:\n" +
	"\x1aremain_time_input_ref_code\x18\x12 \x01(\x03R\x16remainTimeInputRefCode\x12\x19\n" +
	"\buser_sid\x18\x1d \x01(\x03R\auserSid*w\n" +
	"\x13LotteryTicketStatus\x12!\n" +
	"\x1dLOTTERY_TICKET_STATUS_WAITING\x10\x00\x12\x1d\n" +
	"\x19LOTTERY_TICKET_STATUS_WIN\x10\x01\x12\x1e\n" +
	"\x1aLOTTERY_TICKET_STATUS_LOSE\x10\x02*t\n" +
	"\x11LotteryDrawStatus\x12 \n" +
	"\x1cLOTTERY_DRAW_STATUS_UPCOMING\x10\x00\x12\x1e\n" +
	"\x1aLOTTERY_DRAW_STATUS_CLOSED\x10\x01\x12\x1d\n" +
	"\x19LOTTERY_DRAW_STATUS_DRAWN\x10\x02B(Z&github.com/nk-nigeria/cgp-common/protob\x06proto3"

var (
	file_lottery_proto_rawDescOnce sync.Once
	file_lottery_proto_rawDescData []byte
)

func file_lottery_proto_rawDescGZIP() []byte {
	file_lottery_proto_rawDescOnce.Do(func() {
		file_lottery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lottery_proto_rawDesc), len(file_lottery_proto_rawDesc)))
	})
	return file_lottery_proto_rawDescData
}

var file_lottery_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_lottery_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_lottery_proto_goTypes = []any{
	(LotteryTicketStatus)(0),                  // 0: proto.LotteryTicketStatus
	(LotteryDrawStatus)(0),                    // 1: proto.LotteryDrawStatus
	(*BuyLotteryTicketRequest)(nil),           // 2: proto.BuyLotteryTicketRequest
	(*BuyLotteryTicketResponse)(nil),          // 3: proto.BuyLotteryTicketResponse
	(*BuyMultipleLotteryTicketsRequest)(nil),  // 4: proto.BuyMultipleLotteryTicketsRequest
	(*LotteryTicketInput)(nil),                // 5: proto.LotteryTicketInput
	(*BuyMultipleLotteryTicketsResponse)(nil), // 6: proto.BuyMultipleLotteryTicketsResponse
	(*LotteryTicket)(nil),                     // 7: proto.LotteryTicket
	(*LotteryDraw)(nil),                       // 8: proto.LotteryDraw
	(*WinnerStats)(nil),                       // 9: proto.WinnerStats
	(*GetLotteryHistoryRequest)(nil),          // 10: proto.GetLotteryHistoryRequest
	(*GetLotteryHistoryResponse)(nil),         // 11: proto.GetLotteryHistoryResponse
	(*GetAvailableDrawsRequest)(nil),          // 12: proto.GetAvailableDrawsRequest
	(*GetAvailableDrawsResponse)(nil),         // 13: proto.GetAvailableDrawsResponse
	(*GetDrawResultRequest)(nil),              // 14: proto.GetDrawResultRequest
	(*GetDrawResultResponse)(nil),             // 15: proto.GetDrawResultResponse
	(*GetLatestDrawResultRequest)(nil),        // 16: proto.GetLatestDrawResultRequest
	(*GetLatestDrawResultResponse)(nil),       // 17: proto.GetLatestDrawResultResponse
	(*QuickPickRequest)(nil),                  // 18: proto.QuickPickRequest
	(*QuickPickResponse)(nil),                 // 19: proto.QuickPickResponse
	(*QuickPickNumbers)(nil),                  // 20: proto.QuickPickNumbers
	(*TriggerDrawRequest)(nil),                // 21: proto.TriggerDrawRequest
	(*TriggerDrawResponse)(nil),               // 22: proto.TriggerDrawResponse
	(*Profile)(nil),                           // 23: proto.Profile
}
var file_lottery_proto_depIdxs = []int32{
	7,  // 0: proto.BuyLotteryTicketResponse.ticket:type_name -> proto.LotteryTicket
	23, // 1: proto.BuyLotteryTicketResponse.profile:type_name -> proto.Profile
	5,  // 2: proto.BuyMultipleLotteryTicketsRequest.tickets:type_name -> proto.LotteryTicketInput
	7,  // 3: proto.BuyMultipleLotteryTicketsResponse.tickets:type_name -> proto.LotteryTicket
	23, // 4: proto.BuyMultipleLotteryTicketsResponse.profile:type_name -> proto.Profile
	0,  // 5: proto.LotteryTicket.status:type_name -> proto.LotteryTicketStatus
	1,  // 6: proto.LotteryDraw.status:type_name -> proto.LotteryDrawStatus
	9,  // 7: proto.LotteryDraw.winner_stats:type_name -> proto.WinnerStats
	0,  // 8: proto.GetLotteryHistoryRequest.status:type_name -> proto.LotteryTicketStatus
	7,  // 9: proto.GetLotteryHistoryResponse.tickets:type_name -> proto.LotteryTicket
	8,  // 10: proto.GetAvailableDrawsResponse.draws:type_name -> proto.LotteryDraw
	8,  // 11: proto.GetDrawResultResponse.draw:type_name -> proto.LotteryDraw
	8,  // 12: proto.GetLatestDrawResultResponse.draw:type_name -> proto.LotteryDraw
	7,  // 13: proto.GetLatestDrawResultResponse.user_tickets:type_name -> proto.LotteryTicket
	20, // 14: proto.QuickPickResponse.number_sets:type_name -> proto.QuickPickNumbers
	8,  // 15: proto.TriggerDrawResponse.draw:type_name -> proto.LotteryDraw
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_lottery_proto_init() }
func file_lottery_proto_init() {
	if File_lottery_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lottery_proto_rawDesc), len(file_lottery_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_lottery_proto_goTypes,
		DependencyIndexes: file_lottery_proto_depIdxs,
		EnumInfos:         file_lottery_proto_enumTypes,
		MessageInfos:      file_lottery_proto_msgTypes,
	}.Build()
	File_lottery_proto = out.File
	file_lottery_proto_goTypes = nil
	file_lottery_proto_depIdxs = nil
}
