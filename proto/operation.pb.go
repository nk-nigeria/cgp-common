// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: operation.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CurrencyUnitId int32

const (
	CurrencyUnitId_CURRENCY_UNIT_ID_UNSPECIFIED CurrencyUnitId = 0
	CurrencyUnitId_CURRENCY_UNIT_ID_VN          CurrencyUnitId = 1
)

// Enum value maps for CurrencyUnitId.
var (
	CurrencyUnitId_name = map[int32]string{
		0: "CURRENCY_UNIT_ID_UNSPECIFIED",
		1: "CURRENCY_UNIT_ID_VN",
	}
	CurrencyUnitId_value = map[string]int32{
		"CURRENCY_UNIT_ID_UNSPECIFIED": 0,
		"CURRENCY_UNIT_ID_VN":          1,
	}
)

func (x CurrencyUnitId) Enum() *CurrencyUnitId {
	p := new(CurrencyUnitId)
	*p = x
	return p
}

func (x CurrencyUnitId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CurrencyUnitId) Descriptor() protoreflect.EnumDescriptor {
	return file_operation_proto_enumTypes[0].Descriptor()
}

func (CurrencyUnitId) Type() protoreflect.EnumType {
	return &file_operation_proto_enumTypes[0]
}

func (x CurrencyUnitId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CurrencyUnitId.Descriptor instead.
func (CurrencyUnitId) EnumDescriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{0}
}

type OpPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	GameId        int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName      string                 `protobuf:"bytes,4,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	NoBet         int64                  `protobuf:"varint,5,opt,name=no_bet,json=noBet,proto3" json:"no_bet,omitempty"`
	NoWin         int64                  `protobuf:"varint,6,opt,name=no_win,json=noWin,proto3" json:"no_win,omitempty"`
	NoLost        int64                  `protobuf:"varint,7,opt,name=no_lost,json=noLost,proto3" json:"no_lost,omitempty"`
	ChipWin       uint64                 `protobuf:"varint,8,opt,name=chip_win,json=chipWin,proto3" json:"chip_win,omitempty"`
	ChipWinPrefee uint64                 `protobuf:"varint,9,opt,name=chip_win_prefee,json=chipWinPrefee,proto3" json:"chip_win_prefee,omitempty"`
	ChipLost      uint64                 `protobuf:"varint,10,opt,name=chip_lost,json=chipLost,proto3" json:"chip_lost,omitempty"`
	ChipBalance   int64                  `protobuf:"varint,11,opt,name=chip_balance,json=chipBalance,proto3" json:"chip_balance,omitempty"`
	Action        int64                  `protobuf:"varint,12,opt,name=action,proto3" json:"action,omitempty"`
	Status        string                 `protobuf:"bytes,13,opt,name=status,proto3" json:"status,omitempty"`
	DateUnix      int64                  `protobuf:"varint,14,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
	Mcb           int64                  `protobuf:"varint,15,opt,name=mcb,proto3" json:"mcb,omitempty"`
	UserSid       int64                  `protobuf:"varint,16,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpPlayer) Reset() {
	*x = OpPlayer{}
	mi := &file_operation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayer) ProtoMessage() {}

func (x *OpPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayer.ProtoReflect.Descriptor instead.
func (*OpPlayer) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{0}
}

func (x *OpPlayer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpPlayer) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *OpPlayer) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *OpPlayer) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *OpPlayer) GetNoBet() int64 {
	if x != nil {
		return x.NoBet
	}
	return 0
}

func (x *OpPlayer) GetNoWin() int64 {
	if x != nil {
		return x.NoWin
	}
	return 0
}

func (x *OpPlayer) GetNoLost() int64 {
	if x != nil {
		return x.NoLost
	}
	return 0
}

func (x *OpPlayer) GetChipWin() uint64 {
	if x != nil {
		return x.ChipWin
	}
	return 0
}

func (x *OpPlayer) GetChipWinPrefee() uint64 {
	if x != nil {
		return x.ChipWinPrefee
	}
	return 0
}

func (x *OpPlayer) GetChipLost() uint64 {
	if x != nil {
		return x.ChipLost
	}
	return 0
}

func (x *OpPlayer) GetChipBalance() int64 {
	if x != nil {
		return x.ChipBalance
	}
	return 0
}

func (x *OpPlayer) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *OpPlayer) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OpPlayer) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

func (x *OpPlayer) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

func (x *OpPlayer) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type OpPlayerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        int64                  `protobuf:"varint,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	FromUnix      int64                  `protobuf:"varint,3,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,4,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Action        int64                  `protobuf:"varint,5,opt,name=action,proto3" json:"action,omitempty"`
	Offset        int64                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int64                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	UserSid       int64                  `protobuf:"varint,8,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpPlayerRequest) Reset() {
	*x = OpPlayerRequest{}
	mi := &file_operation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayerRequest) ProtoMessage() {}

func (x *OpPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayerRequest.ProtoReflect.Descriptor instead.
func (*OpPlayerRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{1}
}

func (x *OpPlayerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OpPlayerRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *OpPlayerRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *OpPlayerRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *OpPlayerRequest) GetAction() int64 {
	if x != nil {
		return x.Action
	}
	return 0
}

func (x *OpPlayerRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OpPlayerRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OpPlayerRequest) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type OpPlayerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OpPlayers     []*OpPlayer            `protobuf:"bytes,1,rep,name=op_players,json=opPlayers,proto3" json:"op_players,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	TotalChipWin  uint64                 `protobuf:"varint,5,opt,name=total_chip_win,json=totalChipWin,proto3" json:"total_chip_win,omitempty"`
	TotalChipLost uint64                 `protobuf:"varint,6,opt,name=total_chip_lost,json=totalChipLost,proto3" json:"total_chip_lost,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpPlayerResponse) Reset() {
	*x = OpPlayerResponse{}
	mi := &file_operation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpPlayerResponse) ProtoMessage() {}

func (x *OpPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpPlayerResponse.ProtoReflect.Descriptor instead.
func (*OpPlayerResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{2}
}

func (x *OpPlayerResponse) GetOpPlayers() []*OpPlayer {
	if x != nil {
		return x.OpPlayers
	}
	return nil
}

func (x *OpPlayerResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OpPlayerResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *OpPlayerResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *OpPlayerResponse) GetTotalChipWin() uint64 {
	if x != nil {
		return x.TotalChipWin
	}
	return 0
}

func (x *OpPlayerResponse) GetTotalChipLost() uint64 {
	if x != nil {
		return x.TotalChipLost
	}
	return 0
}

type MatchDetail struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GameId         int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName       string                 `protobuf:"bytes,2,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	Mcb            int64                  `protobuf:"varint,3,opt,name=mcb,proto3" json:"mcb,omitempty"`
	NumMatchPlayed int64                  `protobuf:"varint,4,opt,name=num_match_played,json=numMatchPlayed,proto3" json:"num_match_played,omitempty"`
	ChipFee        uint64                 `protobuf:"varint,5,opt,name=chip_fee,json=chipFee,proto3" json:"chip_fee,omitempty"`
	Detail         string                 `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail,omitempty"`
	TableId        int64                  `protobuf:"varint,7,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	DateUnix       int64                  `protobuf:"varint,8,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
	CreatedAtUnix  int64                  `protobuf:"varint,9,opt,name=created_at_unix,json=createdAtUnix,proto3" json:"created_at_unix,omitempty"`
	ChipWin        int64                  `protobuf:"varint,10,opt,name=chip_win,json=chipWin,proto3" json:"chip_win,omitempty"`
	ChipLose       int64                  `protobuf:"varint,11,opt,name=chip_lose,json=chipLose,proto3" json:"chip_lose,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MatchDetail) Reset() {
	*x = MatchDetail{}
	mi := &file_operation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetail) ProtoMessage() {}

func (x *MatchDetail) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetail.ProtoReflect.Descriptor instead.
func (*MatchDetail) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{3}
}

func (x *MatchDetail) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchDetail) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *MatchDetail) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

func (x *MatchDetail) GetNumMatchPlayed() int64 {
	if x != nil {
		return x.NumMatchPlayed
	}
	return 0
}

func (x *MatchDetail) GetChipFee() uint64 {
	if x != nil {
		return x.ChipFee
	}
	return 0
}

func (x *MatchDetail) GetDetail() string {
	if x != nil {
		return x.Detail
	}
	return ""
}

func (x *MatchDetail) GetTableId() int64 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *MatchDetail) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

func (x *MatchDetail) GetCreatedAtUnix() int64 {
	if x != nil {
		return x.CreatedAtUnix
	}
	return 0
}

func (x *MatchDetail) GetChipWin() int64 {
	if x != nil {
		return x.ChipWin
	}
	return 0
}

func (x *MatchDetail) GetChipLose() int64 {
	if x != nil {
		return x.ChipLose
	}
	return 0
}

type MatchDetailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	UserSid       int64                  `protobuf:"varint,4,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	UserPairSid   int64                  `protobuf:"varint,5,opt,name=user_pair_sid,json=userPairSid,proto3" json:"user_pair_sid,omitempty"`
	Limit         int64                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchDetailRequest) Reset() {
	*x = MatchDetailRequest{}
	mi := &file_operation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetailRequest) ProtoMessage() {}

func (x *MatchDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetailRequest.ProtoReflect.Descriptor instead.
func (*MatchDetailRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{4}
}

func (x *MatchDetailRequest) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchDetailRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *MatchDetailRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *MatchDetailRequest) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *MatchDetailRequest) GetUserPairSid() int64 {
	if x != nil {
		return x.UserPairSid
	}
	return 0
}

func (x *MatchDetailRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MatchDetailRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type MatchDetailResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchDetails  []*MatchDetail         `protobuf:"bytes,1,rep,name=match_details,json=matchDetails,proto3" json:"match_details,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Limit         int64                  `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,7,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchDetailResponse) Reset() {
	*x = MatchDetailResponse{}
	mi := &file_operation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchDetailResponse) ProtoMessage() {}

func (x *MatchDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchDetailResponse.ProtoReflect.Descriptor instead.
func (*MatchDetailResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{5}
}

func (x *MatchDetailResponse) GetMatchDetails() []*MatchDetail {
	if x != nil {
		return x.MatchDetails
	}
	return nil
}

func (x *MatchDetailResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MatchDetailResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MatchDetailResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PlayerData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Chip          int64                  `protobuf:"varint,2,opt,name=chip,proto3" json:"chip,omitempty"`
	ChipAdd       int64                  `protobuf:"varint,3,opt,name=chip_add,json=chipAdd,proto3" json:"chip_add,omitempty"`
	UserSid       int64                  `protobuf:"varint,8,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	ChipFee       int64                  `protobuf:"varint,9,opt,name=chip_fee,json=chipFee,proto3" json:"chip_fee,omitempty"`
	ChipAddPrefee int64                  `protobuf:"varint,10,opt,name=chip_add_prefee,json=chipAddPrefee,proto3" json:"chip_add_prefee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	mi := &file_operation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlayerData) GetChip() int64 {
	if x != nil {
		return x.Chip
	}
	return 0
}

func (x *PlayerData) GetChipAdd() int64 {
	if x != nil {
		return x.ChipAdd
	}
	return 0
}

func (x *PlayerData) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *PlayerData) GetChipFee() int64 {
	if x != nil {
		return x.ChipFee
	}
	return 0
}

func (x *PlayerData) GetChipAddPrefee() int64 {
	if x != nil {
		return x.ChipAddPrefee
	}
	return 0
}

type MatchData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameCode      string                 `protobuf:"bytes,3,opt,name=game_code,json=gameCode,proto3" json:"game_code,omitempty"`
	Mcb           int64                  `protobuf:"varint,4,opt,name=mcb,proto3" json:"mcb,omitempty"`
	ChipFee       int64                  `protobuf:"varint,5,opt,name=chip_fee,json=chipFee,proto3" json:"chip_fee,omitempty"`
	MatchId       string                 `protobuf:"bytes,6,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	TableId       string                 `protobuf:"bytes,7,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MatchData) Reset() {
	*x = MatchData{}
	mi := &file_operation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchData) ProtoMessage() {}

func (x *MatchData) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchData.ProtoReflect.Descriptor instead.
func (*MatchData) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{7}
}

func (x *MatchData) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *MatchData) GetGameCode() string {
	if x != nil {
		return x.GameCode
	}
	return ""
}

func (x *MatchData) GetMcb() int64 {
	if x != nil {
		return x.Mcb
	}
	return 0
}

func (x *MatchData) GetChipFee() int64 {
	if x != nil {
		return x.ChipFee
	}
	return 0
}

func (x *MatchData) GetMatchId() string {
	if x != nil {
		return x.MatchId
	}
	return ""
}

func (x *MatchData) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type OpReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerData    []*PlayerData          `protobuf:"bytes,1,rep,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
	MatchData     *MatchData             `protobuf:"bytes,2,opt,name=match_data,json=matchData,proto3" json:"match_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpReport) Reset() {
	*x = OpReport{}
	mi := &file_operation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpReport) ProtoMessage() {}

func (x *OpReport) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpReport.ProtoReflect.Descriptor instead.
func (*OpReport) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{8}
}

func (x *OpReport) GetPlayerData() []*PlayerData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

func (x *OpReport) GetMatchData() *MatchData {
	if x != nil {
		return x.MatchData
	}
	return nil
}

type GoldStatistic struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeUpdateUnix int64                  `protobuf:"varint,1,opt,name=time_update_unix,json=timeUpdateUnix,proto3" json:"time_update_unix,omitempty"`
	Pay            int64                  `protobuf:"varint,2,opt,name=pay,proto3" json:"pay,omitempty"`
	Promotion      int64                  `protobuf:"varint,3,opt,name=promotion,proto3" json:"promotion,omitempty"`
	MatchData      []*MatchData           `protobuf:"bytes,4,rep,name=match_data,json=matchData,proto3" json:"match_data,omitempty"`
	AgCashout      int64                  `protobuf:"varint,5,opt,name=ag_cashout,json=agCashout,proto3" json:"ag_cashout,omitempty"`
	AgBank         int64                  `protobuf:"varint,6,opt,name=ag_bank,json=agBank,proto3" json:"ag_bank,omitempty"`
	Chips          int64                  `protobuf:"varint,7,opt,name=chips,proto3" json:"chips,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GoldStatistic) Reset() {
	*x = GoldStatistic{}
	mi := &file_operation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoldStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatistic) ProtoMessage() {}

func (x *GoldStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatistic.ProtoReflect.Descriptor instead.
func (*GoldStatistic) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{9}
}

func (x *GoldStatistic) GetTimeUpdateUnix() int64 {
	if x != nil {
		return x.TimeUpdateUnix
	}
	return 0
}

func (x *GoldStatistic) GetPay() int64 {
	if x != nil {
		return x.Pay
	}
	return 0
}

func (x *GoldStatistic) GetPromotion() int64 {
	if x != nil {
		return x.Promotion
	}
	return 0
}

func (x *GoldStatistic) GetMatchData() []*MatchData {
	if x != nil {
		return x.MatchData
	}
	return nil
}

func (x *GoldStatistic) GetAgCashout() int64 {
	if x != nil {
		return x.AgCashout
	}
	return 0
}

func (x *GoldStatistic) GetAgBank() int64 {
	if x != nil {
		return x.AgBank
	}
	return 0
}

func (x *GoldStatistic) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

type GoldStatisticRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUnix      int64                  `protobuf:"varint,1,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,2,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoldStatisticRequest) Reset() {
	*x = GoldStatisticRequest{}
	mi := &file_operation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoldStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatisticRequest) ProtoMessage() {}

func (x *GoldStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatisticRequest.ProtoReflect.Descriptor instead.
func (*GoldStatisticRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{10}
}

func (x *GoldStatisticRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *GoldStatisticRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *GoldStatisticRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GoldStatisticRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GoldStatisticResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GoldStatistics []*GoldStatistic       `protobuf:"bytes,1,rep,name=gold_statistics,json=goldStatistics,proto3" json:"gold_statistics,omitempty"`
	Limit          int64                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset         int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Total          int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GoldStatisticResponse) Reset() {
	*x = GoldStatisticResponse{}
	mi := &file_operation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoldStatisticResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoldStatisticResponse) ProtoMessage() {}

func (x *GoldStatisticResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoldStatisticResponse.ProtoReflect.Descriptor instead.
func (*GoldStatisticResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{11}
}

func (x *GoldStatisticResponse) GetGoldStatistics() []*GoldStatistic {
	if x != nil {
		return x.GoldStatistics
	}
	return nil
}

func (x *GoldStatisticResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GoldStatisticResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GoldStatisticResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UserStatistic struct {
	state                 protoimpl.MessageState  `protogen:"open.v1"`
	TotalChipDeposit      int64                   `protobuf:"varint,1,opt,name=total_chip_deposit,json=totalChipDeposit,proto3" json:"total_chip_deposit,omitempty"`
	TotalChipWithDraw     int64                   `protobuf:"varint,2,opt,name=total_chip_with_draw,json=totalChipWithDraw,proto3" json:"total_chip_with_draw,omitempty"`
	TotalChipWin          int64                   `protobuf:"varint,3,opt,name=total_chip_win,json=totalChipWin,proto3" json:"total_chip_win,omitempty"`
	TotalChipWinPrefee    int64                   `protobuf:"varint,4,opt,name=total_chip_win_prefee,json=totalChipWinPrefee,proto3" json:"total_chip_win_prefee,omitempty"`
	TotalChipLose         int64                   `protobuf:"varint,5,opt,name=total_chip_lose,json=totalChipLose,proto3" json:"total_chip_lose,omitempty"`
	TotalChipPromotion    int64                   `protobuf:"varint,6,opt,name=total_chip_promotion,json=totalChipPromotion,proto3" json:"total_chip_promotion,omitempty"`
	TotalChipSend         int64                   `protobuf:"varint,7,opt,name=total_chip_send,json=totalChipSend,proto3" json:"total_chip_send,omitempty"`
	TotalChipRecv         int64                   `protobuf:"varint,8,opt,name=total_chip_recv,json=totalChipRecv,proto3" json:"total_chip_recv,omitempty"`
	CoRatio               int64                   `protobuf:"varint,9,opt,name=co_ratio,json=coRatio,proto3" json:"co_ratio,omitempty"`
	TotalChipDeposit_3D   int64                   `protobuf:"varint,10,opt,name=total_chip_deposit_3d,json=totalChipDeposit3d,proto3" json:"total_chip_deposit_3d,omitempty"`
	TotalChipWithDraw_3D  int64                   `protobuf:"varint,11,opt,name=total_chip_with_draw_3d,json=totalChipWithDraw3d,proto3" json:"total_chip_with_draw_3d,omitempty"`
	Luck                  int64                   `protobuf:"varint,12,opt,name=luck,proto3" json:"luck,omitempty"`
	UserCreateTimeUnix    int64                   `protobuf:"varint,13,opt,name=user_create_time_unix,json=userCreateTimeUnix,proto3" json:"user_create_time_unix,omitempty"`
	UserStatGameHistories []*UserStatGameHistory  `protobuf:"bytes,14,rep,name=user_stat_game_histories,json=userStatGameHistories,proto3" json:"user_stat_game_histories,omitempty"`
	RecvChipStats         []*UserTransferGoldStat `protobuf:"bytes,15,rep,name=recv_chip_stats,json=recvChipStats,proto3" json:"recv_chip_stats,omitempty"`
	SendChipStats         []*UserTransferGoldStat `protobuf:"bytes,16,rep,name=send_chip_stats,json=sendChipStats,proto3" json:"send_chip_stats,omitempty"`
	UserId                string                  `protobuf:"bytes,17,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *UserStatistic) Reset() {
	*x = UserStatistic{}
	mi := &file_operation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatistic) ProtoMessage() {}

func (x *UserStatistic) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatistic.ProtoReflect.Descriptor instead.
func (*UserStatistic) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{12}
}

func (x *UserStatistic) GetTotalChipDeposit() int64 {
	if x != nil {
		return x.TotalChipDeposit
	}
	return 0
}

func (x *UserStatistic) GetTotalChipWithDraw() int64 {
	if x != nil {
		return x.TotalChipWithDraw
	}
	return 0
}

func (x *UserStatistic) GetTotalChipWin() int64 {
	if x != nil {
		return x.TotalChipWin
	}
	return 0
}

func (x *UserStatistic) GetTotalChipWinPrefee() int64 {
	if x != nil {
		return x.TotalChipWinPrefee
	}
	return 0
}

func (x *UserStatistic) GetTotalChipLose() int64 {
	if x != nil {
		return x.TotalChipLose
	}
	return 0
}

func (x *UserStatistic) GetTotalChipPromotion() int64 {
	if x != nil {
		return x.TotalChipPromotion
	}
	return 0
}

func (x *UserStatistic) GetTotalChipSend() int64 {
	if x != nil {
		return x.TotalChipSend
	}
	return 0
}

func (x *UserStatistic) GetTotalChipRecv() int64 {
	if x != nil {
		return x.TotalChipRecv
	}
	return 0
}

func (x *UserStatistic) GetCoRatio() int64 {
	if x != nil {
		return x.CoRatio
	}
	return 0
}

func (x *UserStatistic) GetTotalChipDeposit_3D() int64 {
	if x != nil {
		return x.TotalChipDeposit_3D
	}
	return 0
}

func (x *UserStatistic) GetTotalChipWithDraw_3D() int64 {
	if x != nil {
		return x.TotalChipWithDraw_3D
	}
	return 0
}

func (x *UserStatistic) GetLuck() int64 {
	if x != nil {
		return x.Luck
	}
	return 0
}

func (x *UserStatistic) GetUserCreateTimeUnix() int64 {
	if x != nil {
		return x.UserCreateTimeUnix
	}
	return 0
}

func (x *UserStatistic) GetUserStatGameHistories() []*UserStatGameHistory {
	if x != nil {
		return x.UserStatGameHistories
	}
	return nil
}

func (x *UserStatistic) GetRecvChipStats() []*UserTransferGoldStat {
	if x != nil {
		return x.RecvChipStats
	}
	return nil
}

func (x *UserStatistic) GetSendChipStats() []*UserTransferGoldStat {
	if x != nil {
		return x.SendChipStats
	}
	return nil
}

func (x *UserStatistic) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserStatisticRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	UserSid       int64                  `protobuf:"varint,4,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	DeviceId      string                 `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserStatisticRequest) Reset() {
	*x = UserStatisticRequest{}
	mi := &file_operation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatisticRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatisticRequest) ProtoMessage() {}

func (x *UserStatisticRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatisticRequest.ProtoReflect.Descriptor instead.
func (*UserStatisticRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{13}
}

func (x *UserStatisticRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserStatisticRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *UserStatisticRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *UserStatisticRequest) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *UserStatisticRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type UserStatGameHistory struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	GameId             int64                  `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	GameName           string                 `protobuf:"bytes,2,opt,name=game_name,json=gameName,proto3" json:"game_name,omitempty"`
	TotalChipWin       int64                  `protobuf:"varint,3,opt,name=total_chip_win,json=totalChipWin,proto3" json:"total_chip_win,omitempty"`
	TotalChipWinPrefee int64                  `protobuf:"varint,4,opt,name=total_chip_win_prefee,json=totalChipWinPrefee,proto3" json:"total_chip_win_prefee,omitempty"`
	TotalChipLost      int64                  `protobuf:"varint,5,opt,name=total_chip_lost,json=totalChipLost,proto3" json:"total_chip_lost,omitempty"`
	NoGameWin          int64                  `protobuf:"varint,6,opt,name=no_game_win,json=noGameWin,proto3" json:"no_game_win,omitempty"`
	NoGameLost         int64                  `protobuf:"varint,7,opt,name=no_game_lost,json=noGameLost,proto3" json:"no_game_lost,omitempty"`
	UserId             string                 `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UserStatGameHistory) Reset() {
	*x = UserStatGameHistory{}
	mi := &file_operation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserStatGameHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStatGameHistory) ProtoMessage() {}

func (x *UserStatGameHistory) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStatGameHistory.ProtoReflect.Descriptor instead.
func (*UserStatGameHistory) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{14}
}

func (x *UserStatGameHistory) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *UserStatGameHistory) GetGameName() string {
	if x != nil {
		return x.GameName
	}
	return ""
}

func (x *UserStatGameHistory) GetTotalChipWin() int64 {
	if x != nil {
		return x.TotalChipWin
	}
	return 0
}

func (x *UserStatGameHistory) GetTotalChipWinPrefee() int64 {
	if x != nil {
		return x.TotalChipWinPrefee
	}
	return 0
}

func (x *UserStatGameHistory) GetTotalChipLost() int64 {
	if x != nil {
		return x.TotalChipLost
	}
	return 0
}

func (x *UserStatGameHistory) GetNoGameWin() int64 {
	if x != nil {
		return x.NoGameWin
	}
	return 0
}

func (x *UserStatGameHistory) GetNoGameLost() int64 {
	if x != nil {
		return x.NoGameLost
	}
	return 0
}

func (x *UserStatGameHistory) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UserTransferGoldStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserSendId    string                 `protobuf:"bytes,1,opt,name=user_send_id,json=userSendId,proto3" json:"user_send_id,omitempty"`
	UserSendName  string                 `protobuf:"bytes,2,opt,name=user_send_name,json=userSendName,proto3" json:"user_send_name,omitempty"`
	UserRecvId    string                 `protobuf:"bytes,3,opt,name=user_recv_id,json=userRecvId,proto3" json:"user_recv_id,omitempty"`
	UserRecvName  string                 `protobuf:"bytes,4,opt,name=user_recv_name,json=userRecvName,proto3" json:"user_recv_name,omitempty"`
	Chip          int64                  `protobuf:"varint,5,opt,name=chip,proto3" json:"chip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserTransferGoldStat) Reset() {
	*x = UserTransferGoldStat{}
	mi := &file_operation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserTransferGoldStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTransferGoldStat) ProtoMessage() {}

func (x *UserTransferGoldStat) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTransferGoldStat.ProtoReflect.Descriptor instead.
func (*UserTransferGoldStat) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{15}
}

func (x *UserTransferGoldStat) GetUserSendId() string {
	if x != nil {
		return x.UserSendId
	}
	return ""
}

func (x *UserTransferGoldStat) GetUserSendName() string {
	if x != nil {
		return x.UserSendName
	}
	return ""
}

func (x *UserTransferGoldStat) GetUserRecvId() string {
	if x != nil {
		return x.UserRecvId
	}
	return ""
}

func (x *UserTransferGoldStat) GetUserRecvName() string {
	if x != nil {
		return x.UserRecvName
	}
	return ""
}

func (x *UserTransferGoldStat) GetChip() int64 {
	if x != nil {
		return x.Chip
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Profile       *Profile               `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	TotalIn       int64                  `protobuf:"varint,2,opt,name=total_in,json=totalIn,proto3" json:"total_in,omitempty"`
	TotalOut      int64                  `protobuf:"varint,3,opt,name=total_out,json=totalOut,proto3" json:"total_out,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_operation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{16}
}

func (x *UserInfo) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *UserInfo) GetTotalIn() int64 {
	if x != nil {
		return x.TotalIn
	}
	return 0
}

func (x *UserInfo) GetTotalOut() int64 {
	if x != nil {
		return x.TotalOut
	}
	return 0
}

type UserInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserInfos     []*UserInfo            `protobuf:"bytes,1,rep,name=user_infos,json=userInfos,proto3" json:"user_infos,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	DeviceId      string                 `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	TotalIn       int64                  `protobuf:"varint,4,opt,name=total_in,json=totalIn,proto3" json:"total_in,omitempty"`
	TotalOut      int64                  `protobuf:"varint,5,opt,name=total_out,json=totalOut,proto3" json:"total_out,omitempty"`
	TotalLock     int64                  `protobuf:"varint,6,opt,name=total_lock,json=totalLock,proto3" json:"total_lock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInfoResponse) Reset() {
	*x = UserInfoResponse{}
	mi := &file_operation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoResponse) ProtoMessage() {}

func (x *UserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoResponse.ProtoReflect.Descriptor instead.
func (*UserInfoResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{17}
}

func (x *UserInfoResponse) GetUserInfos() []*UserInfo {
	if x != nil {
		return x.UserInfos
	}
	return nil
}

func (x *UserInfoResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserInfoResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UserInfoResponse) GetTotalIn() int64 {
	if x != nil {
		return x.TotalIn
	}
	return 0
}

func (x *UserInfoResponse) GetTotalOut() int64 {
	if x != nil {
		return x.TotalOut
	}
	return 0
}

func (x *UserInfoResponse) GetTotalLock() int64 {
	if x != nil {
		return x.TotalLock
	}
	return 0
}

type CashOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Ci            int64                  `protobuf:"varint,3,opt,name=ci,proto3" json:"ci,omitempty"`
	Cio           int64                  `protobuf:"varint,4,opt,name=cio,proto3" json:"cio,omitempty"`
	Co            int64                  `protobuf:"varint,5,opt,name=co,proto3" json:"co,omitempty"`
	Coo           int64                  `protobuf:"varint,6,opt,name=coo,proto3" json:"coo,omitempty"`
	LuckyPercent  int64                  `protobuf:"varint,7,opt,name=lucky_percent,json=luckyPercent,proto3" json:"lucky_percent,omitempty"`
	UserSid       int64                  `protobuf:"varint,8,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashOut) Reset() {
	*x = CashOut{}
	mi := &file_operation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashOut) ProtoMessage() {}

func (x *CashOut) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashOut.ProtoReflect.Descriptor instead.
func (*CashOut) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{18}
}

func (x *CashOut) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CashOut) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *CashOut) GetCi() int64 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *CashOut) GetCio() int64 {
	if x != nil {
		return x.Cio
	}
	return 0
}

func (x *CashOut) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *CashOut) GetCoo() int64 {
	if x != nil {
		return x.Coo
	}
	return 0
}

func (x *CashOut) GetLuckyPercent() int64 {
	if x != nil {
		return x.LuckyPercent
	}
	return 0
}

func (x *CashOut) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type TopCashOut struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cashouts      []*CashOut             `protobuf:"bytes,1,rep,name=cashouts,proto3" json:"cashouts,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	Total         int64                  `protobuf:"varint,6,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopCashOut) Reset() {
	*x = TopCashOut{}
	mi := &file_operation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopCashOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopCashOut) ProtoMessage() {}

func (x *TopCashOut) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopCashOut.ProtoReflect.Descriptor instead.
func (*TopCashOut) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{19}
}

func (x *TopCashOut) GetCashouts() []*CashOut {
	if x != nil {
		return x.Cashouts
	}
	return nil
}

func (x *TopCashOut) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *TopCashOut) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *TopCashOut) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopCashOut) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopCashOut) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Vip struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	UserId            string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName          string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Cio               int64                  `protobuf:"varint,3,opt,name=cio,proto3" json:"cio,omitempty"`
	TotalChip         int64                  `protobuf:"varint,4,opt,name=total_chip,json=totalChip,proto3" json:"total_chip,omitempty"`
	LastLoginTimeUnix int64                  `protobuf:"varint,5,opt,name=last_login_time_unix,json=lastLoginTimeUnix,proto3" json:"last_login_time_unix,omitempty"`
	CreatedTimeUnix   int64                  `protobuf:"varint,6,opt,name=created_time_unix,json=createdTimeUnix,proto3" json:"created_time_unix,omitempty"`
	RefGame           string                 `protobuf:"bytes,7,opt,name=ref_game,json=refGame,proto3" json:"ref_game,omitempty"`
	Ci                int64                  `protobuf:"varint,8,opt,name=ci,proto3" json:"ci,omitempty"`
	Co                int64                  `protobuf:"varint,9,opt,name=co,proto3" json:"co,omitempty"`
	Ci2D              int64                  `protobuf:"varint,10,opt,name=ci2d,proto3" json:"ci2d,omitempty"`
	Co2D              int64                  `protobuf:"varint,11,opt,name=co2d,proto3" json:"co2d,omitempty"`
	LuckyPercent      int64                  `protobuf:"varint,12,opt,name=lucky_percent,json=luckyPercent,proto3" json:"lucky_percent,omitempty"`
	IsBanned          bool                   `protobuf:"varint,13,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	IsOnline          bool                   `protobuf:"varint,14,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"`
	TotalIn           int64                  `protobuf:"varint,15,opt,name=total_in,json=totalIn,proto3" json:"total_in,omitempty"`
	TotalOut          int64                  `protobuf:"varint,16,opt,name=total_out,json=totalOut,proto3" json:"total_out,omitempty"`
	UserSid           int64                  `protobuf:"varint,17,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Vip) Reset() {
	*x = Vip{}
	mi := &file_operation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vip) ProtoMessage() {}

func (x *Vip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vip.ProtoReflect.Descriptor instead.
func (*Vip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{20}
}

func (x *Vip) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Vip) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Vip) GetCio() int64 {
	if x != nil {
		return x.Cio
	}
	return 0
}

func (x *Vip) GetTotalChip() int64 {
	if x != nil {
		return x.TotalChip
	}
	return 0
}

func (x *Vip) GetLastLoginTimeUnix() int64 {
	if x != nil {
		return x.LastLoginTimeUnix
	}
	return 0
}

func (x *Vip) GetCreatedTimeUnix() int64 {
	if x != nil {
		return x.CreatedTimeUnix
	}
	return 0
}

func (x *Vip) GetRefGame() string {
	if x != nil {
		return x.RefGame
	}
	return ""
}

func (x *Vip) GetCi() int64 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *Vip) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *Vip) GetCi2D() int64 {
	if x != nil {
		return x.Ci2D
	}
	return 0
}

func (x *Vip) GetCo2D() int64 {
	if x != nil {
		return x.Co2D
	}
	return 0
}

func (x *Vip) GetLuckyPercent() int64 {
	if x != nil {
		return x.LuckyPercent
	}
	return 0
}

func (x *Vip) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *Vip) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

func (x *Vip) GetTotalIn() int64 {
	if x != nil {
		return x.TotalIn
	}
	return 0
}

func (x *Vip) GetTotalOut() int64 {
	if x != nil {
		return x.TotalOut
	}
	return 0
}

func (x *Vip) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type TopVip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vips          []*Vip                 `protobuf:"bytes,1,rep,name=vips,proto3" json:"vips,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	RefGame       string                 `protobuf:"bytes,6,opt,name=ref_game,json=refGame,proto3" json:"ref_game,omitempty"`
	Total         int64                  `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopVip) Reset() {
	*x = TopVip{}
	mi := &file_operation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopVip) ProtoMessage() {}

func (x *TopVip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopVip.ProtoReflect.Descriptor instead.
func (*TopVip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{21}
}

func (x *TopVip) GetVips() []*Vip {
	if x != nil {
		return x.Vips
	}
	return nil
}

func (x *TopVip) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *TopVip) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *TopVip) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopVip) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopVip) GetRefGame() string {
	if x != nil {
		return x.RefGame
	}
	return ""
}

func (x *TopVip) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Win struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Vip           int64                  `protobuf:"varint,3,opt,name=vip,proto3" json:"vip,omitempty"`
	Gold          int64                  `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`
	Ag            int64                  `protobuf:"varint,5,opt,name=ag,proto3" json:"ag,omitempty"`
	AgWin         int64                  `protobuf:"varint,6,opt,name=ag_win,json=agWin,proto3" json:"ag_win,omitempty"`
	Co            int64                  `protobuf:"varint,7,opt,name=co,proto3" json:"co,omitempty"`
	Ci            int64                  `protobuf:"varint,8,opt,name=ci,proto3" json:"ci,omitempty"`
	CoRate        int64                  `protobuf:"varint,9,opt,name=co_rate,json=coRate,proto3" json:"co_rate,omitempty"`
	LuckyPercent  int64                  `protobuf:"varint,10,opt,name=lucky_percent,json=luckyPercent,proto3" json:"lucky_percent,omitempty"`
	UserSid       int64                  `protobuf:"varint,11,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Win) Reset() {
	*x = Win{}
	mi := &file_operation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Win) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Win) ProtoMessage() {}

func (x *Win) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Win.ProtoReflect.Descriptor instead.
func (*Win) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{22}
}

func (x *Win) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Win) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Win) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *Win) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Win) GetAg() int64 {
	if x != nil {
		return x.Ag
	}
	return 0
}

func (x *Win) GetAgWin() int64 {
	if x != nil {
		return x.AgWin
	}
	return 0
}

func (x *Win) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *Win) GetCi() int64 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *Win) GetCoRate() int64 {
	if x != nil {
		return x.CoRate
	}
	return 0
}

func (x *Win) GetLuckyPercent() int64 {
	if x != nil {
		return x.LuckyPercent
	}
	return 0
}

func (x *Win) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type TopWin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wins          []*Win                 `protobuf:"bytes,1,rep,name=wins,proto3" json:"wins,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	RefGame       string                 `protobuf:"bytes,6,opt,name=ref_game,json=refGame,proto3" json:"ref_game,omitempty"`
	Total         int64                  `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	GameId        int64                  `protobuf:"varint,8,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopWin) Reset() {
	*x = TopWin{}
	mi := &file_operation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopWin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopWin) ProtoMessage() {}

func (x *TopWin) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopWin.ProtoReflect.Descriptor instead.
func (*TopWin) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{23}
}

func (x *TopWin) GetWins() []*Win {
	if x != nil {
		return x.Wins
	}
	return nil
}

func (x *TopWin) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *TopWin) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *TopWin) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopWin) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopWin) GetRefGame() string {
	if x != nil {
		return x.RefGame
	}
	return ""
}

func (x *TopWin) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TopWin) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type Lost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string                 `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Vip           int64                  `protobuf:"varint,3,opt,name=vip,proto3" json:"vip,omitempty"`
	Gold          int64                  `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`
	Ag            int64                  `protobuf:"varint,5,opt,name=ag,proto3" json:"ag,omitempty"`
	AgLost        int64                  `protobuf:"varint,6,opt,name=ag_lost,json=agLost,proto3" json:"ag_lost,omitempty"`
	Co            int64                  `protobuf:"varint,7,opt,name=co,proto3" json:"co,omitempty"`
	Ci            int64                  `protobuf:"varint,8,opt,name=ci,proto3" json:"ci,omitempty"`
	CoRate        int64                  `protobuf:"varint,9,opt,name=co_rate,json=coRate,proto3" json:"co_rate,omitempty"`
	LuckyPercent  int64                  `protobuf:"varint,10,opt,name=lucky_percent,json=luckyPercent,proto3" json:"lucky_percent,omitempty"`
	UserSid       int64                  `protobuf:"varint,11,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lost) Reset() {
	*x = Lost{}
	mi := &file_operation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lost) ProtoMessage() {}

func (x *Lost) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lost.ProtoReflect.Descriptor instead.
func (*Lost) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{24}
}

func (x *Lost) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Lost) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Lost) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *Lost) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *Lost) GetAg() int64 {
	if x != nil {
		return x.Ag
	}
	return 0
}

func (x *Lost) GetAgLost() int64 {
	if x != nil {
		return x.AgLost
	}
	return 0
}

func (x *Lost) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *Lost) GetCi() int64 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *Lost) GetCoRate() int64 {
	if x != nil {
		return x.CoRate
	}
	return 0
}

func (x *Lost) GetLuckyPercent() int64 {
	if x != nil {
		return x.LuckyPercent
	}
	return 0
}

func (x *Lost) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

type TopLost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Losts         []*Lost                `protobuf:"bytes,1,rep,name=losts,proto3" json:"losts,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	RefGame       string                 `protobuf:"bytes,6,opt,name=ref_game,json=refGame,proto3" json:"ref_game,omitempty"`
	Total         int64                  `protobuf:"varint,7,opt,name=total,proto3" json:"total,omitempty"`
	GameId        int64                  `protobuf:"varint,8,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopLost) Reset() {
	*x = TopLost{}
	mi := &file_operation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopLost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopLost) ProtoMessage() {}

func (x *TopLost) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopLost.ProtoReflect.Descriptor instead.
func (*TopLost) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{25}
}

func (x *TopLost) GetLosts() []*Lost {
	if x != nil {
		return x.Losts
	}
	return nil
}

func (x *TopLost) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *TopLost) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *TopLost) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TopLost) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TopLost) GetRefGame() string {
	if x != nil {
		return x.RefGame
	}
	return ""
}

func (x *TopLost) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TopLost) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

type TransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserSid       int64                  `protobuf:"varint,1,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	mi := &file_operation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{26}
}

func (x *TransactionRequest) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *TransactionRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *TransactionRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *TransactionRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransactionRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TransactionDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserSid       int64                  `protobuf:"varint,3,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	UserName      string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Vip           int64                  `protobuf:"varint,5,opt,name=vip,proto3" json:"vip,omitempty"`
	Rp            int64                  `protobuf:"varint,6,opt,name=rp,proto3" json:"rp,omitempty"` // Số tiền nạp
	TypeTopup     string                 `protobuf:"bytes,7,opt,name=type_topup,json=typeTopup,proto3" json:"type_topup,omitempty"`
	ChipsTopup    int64                  `protobuf:"varint,8,opt,name=chips_topup,json=chipsTopup,proto3" json:"chips_topup,omitempty"` // Số chip user được nhận của giao dịch
	CreatedUnix   int64                  `protobuf:"varint,9,opt,name=created_unix,json=createdUnix,proto3" json:"created_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionDetail) Reset() {
	*x = TransactionDetail{}
	mi := &file_operation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetail) ProtoMessage() {}

func (x *TransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetail.ProtoReflect.Descriptor instead.
func (*TransactionDetail) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{27}
}

func (x *TransactionDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionDetail) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TransactionDetail) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *TransactionDetail) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *TransactionDetail) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *TransactionDetail) GetRp() int64 {
	if x != nil {
		return x.Rp
	}
	return 0
}

func (x *TransactionDetail) GetTypeTopup() string {
	if x != nil {
		return x.TypeTopup
	}
	return ""
}

func (x *TransactionDetail) GetChipsTopup() int64 {
	if x != nil {
		return x.ChipsTopup
	}
	return 0
}

func (x *TransactionDetail) GetCreatedUnix() int64 {
	if x != nil {
		return x.CreatedUnix
	}
	return 0
}

type TransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransDetails  []*TransactionDetail   `protobuf:"bytes,1,rep,name=trans_details,json=transDetails,proto3" json:"trans_details,omitempty"`
	TotalRp       int64                  `protobuf:"varint,2,opt,name=total_rp,json=totalRp,proto3" json:"total_rp,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Total         int64                  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	mi := &file_operation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{28}
}

func (x *TransactionResponse) GetTransDetails() []*TransactionDetail {
	if x != nil {
		return x.TransDetails
	}
	return nil
}

func (x *TransactionResponse) GetTotalRp() int64 {
	if x != nil {
		return x.TotalRp
	}
	return 0
}

func (x *TransactionResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *TransactionResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TransactionResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IAPSummary struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreateAtUnix    int64                  `protobuf:"varint,3,opt,name=create_at_unix,json=createAtUnix,proto3" json:"create_at_unix,omitempty"`
	TotalTopup      int64                  `protobuf:"varint,4,opt,name=total_topup,json=totalTopup,proto3" json:"total_topup,omitempty"`
	VipPoint        int64                  `protobuf:"varint,5,opt,name=vip_point,json=vipPoint,proto3" json:"vip_point,omitempty"`
	TotalCashout    int64                  `protobuf:"varint,6,opt,name=total_cashout,json=totalCashout,proto3" json:"total_cashout,omitempty"`
	Vip             int64                  `protobuf:"varint,7,opt,name=vip,proto3" json:"vip,omitempty"`
	CurrencyTopup   int64                  `protobuf:"varint,8,opt,name=currency_topup,json=currencyTopup,proto3" json:"currency_topup,omitempty"`
	CurrencyCashout int64                  `protobuf:"varint,9,opt,name=currency_cashout,json=currencyCashout,proto3" json:"currency_cashout,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IAPSummary) Reset() {
	*x = IAPSummary{}
	mi := &file_operation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IAPSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IAPSummary) ProtoMessage() {}

func (x *IAPSummary) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IAPSummary.ProtoReflect.Descriptor instead.
func (*IAPSummary) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{29}
}

func (x *IAPSummary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IAPSummary) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IAPSummary) GetCreateAtUnix() int64 {
	if x != nil {
		return x.CreateAtUnix
	}
	return 0
}

func (x *IAPSummary) GetTotalTopup() int64 {
	if x != nil {
		return x.TotalTopup
	}
	return 0
}

func (x *IAPSummary) GetVipPoint() int64 {
	if x != nil {
		return x.VipPoint
	}
	return 0
}

func (x *IAPSummary) GetTotalCashout() int64 {
	if x != nil {
		return x.TotalCashout
	}
	return 0
}

func (x *IAPSummary) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *IAPSummary) GetCurrencyTopup() int64 {
	if x != nil {
		return x.CurrencyTopup
	}
	return 0
}

func (x *IAPSummary) GetCurrencyCashout() int64 {
	if x != nil {
		return x.CurrencyCashout
	}
	return 0
}

type CashInfo struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Id                      int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId                  string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreateAtUnix            int64                  `protobuf:"varint,3,opt,name=create_at_unix,json=createAtUnix,proto3" json:"create_at_unix,omitempty"`
	Chips                   int64                  `protobuf:"varint,4,opt,name=chips,proto3" json:"chips,omitempty"`
	VipPoint                int64                  `protobuf:"varint,5,opt,name=vip_point,json=vipPoint,proto3" json:"vip_point,omitempty"`
	Publisher               int64                  `protobuf:"varint,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Currency                int64                  `protobuf:"varint,7,opt,name=currency,proto3" json:"currency,omitempty"`
	CurrencyUnitId          int64                  `protobuf:"varint,8,opt,name=currency_unit_id,json=currencyUnitId,proto3" json:"currency_unit_id,omitempty"` // vi_vn, en_us follow Locale name standard
	TransId                 string                 `protobuf:"bytes,9,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	DateUnix                int64                  `protobuf:"varint,10,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
	NumTransaction          int64                  `protobuf:"varint,11,opt,name=num_transaction,json=numTransaction,proto3" json:"num_transaction,omitempty"`
	CurrencyValue           int64                  `protobuf:"varint,12,opt,name=currency_value,json=currencyValue,proto3" json:"currency_value,omitempty"` // 10, 20, 30 ...
	CurrencyUnitName        string                 `protobuf:"bytes,13,opt,name=currency_unit_name,json=currencyUnitName,proto3" json:"currency_unit_name,omitempty"`
	NumTransByCurrencyValue map[int64]int64        `protobuf:"bytes,14,rep,name=num_trans_by_currency_value,json=numTransByCurrencyValue,proto3" json:"num_trans_by_currency_value,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	NumAccountUnique        int64                  `protobuf:"varint,15,opt,name=num_account_unique,json=numAccountUnique,proto3" json:"num_account_unique,omitempty"`
	NetRev                  int64                  `protobuf:"varint,16,opt,name=net_rev,json=netRev,proto3" json:"net_rev,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *CashInfo) Reset() {
	*x = CashInfo{}
	mi := &file_operation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashInfo) ProtoMessage() {}

func (x *CashInfo) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashInfo.ProtoReflect.Descriptor instead.
func (*CashInfo) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{30}
}

func (x *CashInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CashInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CashInfo) GetCreateAtUnix() int64 {
	if x != nil {
		return x.CreateAtUnix
	}
	return 0
}

func (x *CashInfo) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *CashInfo) GetVipPoint() int64 {
	if x != nil {
		return x.VipPoint
	}
	return 0
}

func (x *CashInfo) GetPublisher() int64 {
	if x != nil {
		return x.Publisher
	}
	return 0
}

func (x *CashInfo) GetCurrency() int64 {
	if x != nil {
		return x.Currency
	}
	return 0
}

func (x *CashInfo) GetCurrencyUnitId() int64 {
	if x != nil {
		return x.CurrencyUnitId
	}
	return 0
}

func (x *CashInfo) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *CashInfo) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

func (x *CashInfo) GetNumTransaction() int64 {
	if x != nil {
		return x.NumTransaction
	}
	return 0
}

func (x *CashInfo) GetCurrencyValue() int64 {
	if x != nil {
		return x.CurrencyValue
	}
	return 0
}

func (x *CashInfo) GetCurrencyUnitName() string {
	if x != nil {
		return x.CurrencyUnitName
	}
	return ""
}

func (x *CashInfo) GetNumTransByCurrencyValue() map[int64]int64 {
	if x != nil {
		return x.NumTransByCurrencyValue
	}
	return nil
}

func (x *CashInfo) GetNumAccountUnique() int64 {
	if x != nil {
		return x.NumAccountUnique
	}
	return 0
}

func (x *CashInfo) GetNetRev() int64 {
	if x != nil {
		return x.NetRev
	}
	return 0
}

type CashInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromUnix      int64                  `protobuf:"varint,1,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,2,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	Publisher     int64                  `protobuf:"varint,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	CurrencyId    CurrencyUnitId         `protobuf:"varint,6,opt,name=currency_id,json=currencyId,proto3,enum=proto.CurrencyUnitId" json:"currency_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashInfoRequest) Reset() {
	*x = CashInfoRequest{}
	mi := &file_operation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashInfoRequest) ProtoMessage() {}

func (x *CashInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashInfoRequest.ProtoReflect.Descriptor instead.
func (*CashInfoRequest) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{31}
}

func (x *CashInfoRequest) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *CashInfoRequest) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

func (x *CashInfoRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *CashInfoRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *CashInfoRequest) GetPublisher() int64 {
	if x != nil {
		return x.Publisher
	}
	return 0
}

func (x *CashInfoRequest) GetCurrencyId() CurrencyUnitId {
	if x != nil {
		return x.CurrencyId
	}
	return CurrencyUnitId_CURRENCY_UNIT_ID_UNSPECIFIED
}

type CashInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CashoutInfos  []*CashInfo            `protobuf:"bytes,1,rep,name=cashout_infos,json=cashoutInfos,proto3" json:"cashout_infos,omitempty"`
	TotalCash     int64                  `protobuf:"varint,2,opt,name=total_cash,json=totalCash,proto3" json:"total_cash,omitempty"`
	TotalAccount  int64                  `protobuf:"varint,3,opt,name=total_account,json=totalAccount,proto3" json:"total_account,omitempty"`
	AvgCash       int64                  `protobuf:"varint,4,opt,name=avg_cash,json=avgCash,proto3" json:"avg_cash,omitempty"`
	TotalRev      int64                  `protobuf:"varint,5,opt,name=total_rev,json=totalRev,proto3" json:"total_rev,omitempty"`
	AvgRev        int64                  `protobuf:"varint,6,opt,name=avg_rev,json=avgRev,proto3" json:"avg_rev,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashInfoResponse) Reset() {
	*x = CashInfoResponse{}
	mi := &file_operation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashInfoResponse) ProtoMessage() {}

func (x *CashInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashInfoResponse.ProtoReflect.Descriptor instead.
func (*CashInfoResponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{32}
}

func (x *CashInfoResponse) GetCashoutInfos() []*CashInfo {
	if x != nil {
		return x.CashoutInfos
	}
	return nil
}

func (x *CashInfoResponse) GetTotalCash() int64 {
	if x != nil {
		return x.TotalCash
	}
	return 0
}

func (x *CashInfoResponse) GetTotalAccount() int64 {
	if x != nil {
		return x.TotalAccount
	}
	return 0
}

func (x *CashInfoResponse) GetAvgCash() int64 {
	if x != nil {
		return x.AvgCash
	}
	return 0
}

func (x *CashInfoResponse) GetTotalRev() int64 {
	if x != nil {
		return x.TotalRev
	}
	return 0
}

func (x *CashInfoResponse) GetAvgRev() int64 {
	if x != nil {
		return x.AvgRev
	}
	return 0
}

type UserGameCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DateUnix      int64                  `protobuf:"varint,1,opt,name=date_unix,json=dateUnix,proto3" json:"date_unix,omitempty"`
	CountGame     int64                  `protobuf:"varint,2,opt,name=count_game,json=countGame,proto3" json:"count_game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserGameCount) Reset() {
	*x = UserGameCount{}
	mi := &file_operation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGameCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGameCount) ProtoMessage() {}

func (x *UserGameCount) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGameCount.ProtoReflect.Descriptor instead.
func (*UserGameCount) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{33}
}

func (x *UserGameCount) GetDateUnix() int64 {
	if x != nil {
		return x.DateUnix
	}
	return 0
}

func (x *UserGameCount) GetCountGame() int64 {
	if x != nil {
		return x.CountGame
	}
	return 0
}

type UserGameStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UserId         string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameNo         int64                  `protobuf:"varint,2,opt,name=game_no,json=gameNo,proto3" json:"game_no,omitempty"`
	UserGameCounts []*UserGameCount       `protobuf:"bytes,3,rep,name=user_game_counts,json=userGameCounts,proto3" json:"user_game_counts,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UserGameStats) Reset() {
	*x = UserGameStats{}
	mi := &file_operation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserGameStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserGameStats) ProtoMessage() {}

func (x *UserGameStats) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserGameStats.ProtoReflect.Descriptor instead.
func (*UserGameStats) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{34}
}

func (x *UserGameStats) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserGameStats) GetGameNo() int64 {
	if x != nil {
		return x.GameNo
	}
	return 0
}

func (x *UserGameStats) GetUserGameCounts() []*UserGameCount {
	if x != nil {
		return x.UserGameCounts
	}
	return nil
}

type PaymentByVip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vip           int64                  `protobuf:"varint,1,opt,name=vip,proto3" json:"vip,omitempty"`
	Ci            int64                  `protobuf:"varint,2,opt,name=ci,proto3" json:"ci,omitempty"`
	Chips         int64                  `protobuf:"varint,3,opt,name=chips,proto3" json:"chips,omitempty"`
	NumTrans      int64                  `protobuf:"varint,4,opt,name=num_trans,json=numTrans,proto3" json:"num_trans,omitempty"`
	NumAccount    int64                  `protobuf:"varint,5,opt,name=num_account,json=numAccount,proto3" json:"num_account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentByVip) Reset() {
	*x = PaymentByVip{}
	mi := &file_operation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentByVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentByVip) ProtoMessage() {}

func (x *PaymentByVip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentByVip.ProtoReflect.Descriptor instead.
func (*PaymentByVip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{35}
}

func (x *PaymentByVip) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *PaymentByVip) GetCi() int64 {
	if x != nil {
		return x.Ci
	}
	return 0
}

func (x *PaymentByVip) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *PaymentByVip) GetNumTrans() int64 {
	if x != nil {
		return x.NumTrans
	}
	return 0
}

func (x *PaymentByVip) GetNumAccount() int64 {
	if x != nil {
		return x.NumAccount
	}
	return 0
}

type PaymentsByVip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Payments      []*PaymentByVip        `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentsByVip) Reset() {
	*x = PaymentsByVip{}
	mi := &file_operation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentsByVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsByVip) ProtoMessage() {}

func (x *PaymentsByVip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsByVip.ProtoReflect.Descriptor instead.
func (*PaymentsByVip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{36}
}

func (x *PaymentsByVip) GetPayments() []*PaymentByVip {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *PaymentsByVip) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *PaymentsByVip) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

type CashoutByVip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Vip           int64                  `protobuf:"varint,1,opt,name=vip,proto3" json:"vip,omitempty"`
	Co            int64                  `protobuf:"varint,2,opt,name=co,proto3" json:"co,omitempty"`
	Chips         int64                  `protobuf:"varint,3,opt,name=chips,proto3" json:"chips,omitempty"`
	NumTrans      int64                  `protobuf:"varint,4,opt,name=num_trans,json=numTrans,proto3" json:"num_trans,omitempty"`
	NumAccount    int64                  `protobuf:"varint,5,opt,name=num_account,json=numAccount,proto3" json:"num_account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashoutByVip) Reset() {
	*x = CashoutByVip{}
	mi := &file_operation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashoutByVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutByVip) ProtoMessage() {}

func (x *CashoutByVip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutByVip.ProtoReflect.Descriptor instead.
func (*CashoutByVip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{37}
}

func (x *CashoutByVip) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

func (x *CashoutByVip) GetCo() int64 {
	if x != nil {
		return x.Co
	}
	return 0
}

func (x *CashoutByVip) GetChips() int64 {
	if x != nil {
		return x.Chips
	}
	return 0
}

func (x *CashoutByVip) GetNumTrans() int64 {
	if x != nil {
		return x.NumTrans
	}
	return 0
}

func (x *CashoutByVip) GetNumAccount() int64 {
	if x != nil {
		return x.NumAccount
	}
	return 0
}

type CashoutsByVip struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cashouts      []*CashoutByVip        `protobuf:"bytes,1,rep,name=cashouts,proto3" json:"cashouts,omitempty"`
	FromUnix      int64                  `protobuf:"varint,2,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	ToUnix        int64                  `protobuf:"varint,3,opt,name=to_unix,json=toUnix,proto3" json:"to_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CashoutsByVip) Reset() {
	*x = CashoutsByVip{}
	mi := &file_operation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CashoutsByVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CashoutsByVip) ProtoMessage() {}

func (x *CashoutsByVip) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CashoutsByVip.ProtoReflect.Descriptor instead.
func (*CashoutsByVip) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{38}
}

func (x *CashoutsByVip) GetCashouts() []*CashoutByVip {
	if x != nil {
		return x.Cashouts
	}
	return nil
}

func (x *CashoutsByVip) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *CashoutsByVip) GetToUnix() int64 {
	if x != nil {
		return x.ToUnix
	}
	return 0
}

type VipStats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TimeUpdateUnix int64                  `protobuf:"varint,1,opt,name=time_update_unix,json=timeUpdateUnix,proto3" json:"time_update_unix,omitempty"`
	UserSid        int64                  `protobuf:"varint,2,opt,name=user_sid,json=userSid,proto3" json:"user_sid,omitempty"`
	UserId         string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName       string                 `protobuf:"bytes,4,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	NoWin          int64                  `protobuf:"varint,5,opt,name=no_win,json=noWin,proto3" json:"no_win,omitempty"`
	NoLose         int64                  `protobuf:"varint,6,opt,name=no_lose,json=noLose,proto3" json:"no_lose,omitempty"`
	ChipsWin       int64                  `protobuf:"varint,7,opt,name=chips_win,json=chipsWin,proto3" json:"chips_win,omitempty"`
	ChipsLose      int64                  `protobuf:"varint,8,opt,name=chips_lose,json=chipsLose,proto3" json:"chips_lose,omitempty"`
	CashIn         int64                  `protobuf:"varint,9,opt,name=cash_in,json=cashIn,proto3" json:"cash_in,omitempty"`
	CashIn5        int64                  `protobuf:"varint,10,opt,name=cash_in5,json=cashIn5,proto3" json:"cash_in5,omitempty"`
	CashIn10       int64                  `protobuf:"varint,11,opt,name=cash_in10,json=cashIn10,proto3" json:"cash_in10,omitempty"`
	CashOut        int64                  `protobuf:"varint,12,opt,name=cash_out,json=cashOut,proto3" json:"cash_out,omitempty"`
	CashOut5       int64                  `protobuf:"varint,13,opt,name=cash_out5,json=cashOut5,proto3" json:"cash_out5,omitempty"`
	CashOut10      int64                  `protobuf:"varint,14,opt,name=cash_out10,json=cashOut10,proto3" json:"cash_out10,omitempty"`
	Vip            int64                  `protobuf:"varint,15,opt,name=vip,proto3" json:"vip,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *VipStats) Reset() {
	*x = VipStats{}
	mi := &file_operation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipStats) ProtoMessage() {}

func (x *VipStats) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipStats.ProtoReflect.Descriptor instead.
func (*VipStats) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{39}
}

func (x *VipStats) GetTimeUpdateUnix() int64 {
	if x != nil {
		return x.TimeUpdateUnix
	}
	return 0
}

func (x *VipStats) GetUserSid() int64 {
	if x != nil {
		return x.UserSid
	}
	return 0
}

func (x *VipStats) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VipStats) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *VipStats) GetNoWin() int64 {
	if x != nil {
		return x.NoWin
	}
	return 0
}

func (x *VipStats) GetNoLose() int64 {
	if x != nil {
		return x.NoLose
	}
	return 0
}

func (x *VipStats) GetChipsWin() int64 {
	if x != nil {
		return x.ChipsWin
	}
	return 0
}

func (x *VipStats) GetChipsLose() int64 {
	if x != nil {
		return x.ChipsLose
	}
	return 0
}

func (x *VipStats) GetCashIn() int64 {
	if x != nil {
		return x.CashIn
	}
	return 0
}

func (x *VipStats) GetCashIn5() int64 {
	if x != nil {
		return x.CashIn5
	}
	return 0
}

func (x *VipStats) GetCashIn10() int64 {
	if x != nil {
		return x.CashIn10
	}
	return 0
}

func (x *VipStats) GetCashOut() int64 {
	if x != nil {
		return x.CashOut
	}
	return 0
}

func (x *VipStats) GetCashOut5() int64 {
	if x != nil {
		return x.CashOut5
	}
	return 0
}

func (x *VipStats) GetCashOut10() int64 {
	if x != nil {
		return x.CashOut10
	}
	return 0
}

func (x *VipStats) GetVip() int64 {
	if x != nil {
		return x.Vip
	}
	return 0
}

type VipStatsReponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VipsStats     []*VipStats            `protobuf:"bytes,1,rep,name=vips_stats,json=vipsStats,proto3" json:"vips_stats,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	FromUnix      int64                  `protobuf:"varint,3,opt,name=from_unix,json=fromUnix,proto3" json:"from_unix,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int64                  `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VipStatsReponse) Reset() {
	*x = VipStatsReponse{}
	mi := &file_operation_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipStatsReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipStatsReponse) ProtoMessage() {}

func (x *VipStatsReponse) ProtoReflect() protoreflect.Message {
	mi := &file_operation_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipStatsReponse.ProtoReflect.Descriptor instead.
func (*VipStatsReponse) Descriptor() ([]byte, []int) {
	return file_operation_proto_rawDescGZIP(), []int{40}
}

func (x *VipStatsReponse) GetVipsStats() []*VipStats {
	if x != nil {
		return x.VipsStats
	}
	return nil
}

func (x *VipStatsReponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *VipStatsReponse) GetFromUnix() int64 {
	if x != nil {
		return x.FromUnix
	}
	return 0
}

func (x *VipStatsReponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *VipStatsReponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

var File_operation_proto protoreflect.FileDescriptor

const file_operation_proto_rawDesc = "" +
	"\n" +
	"\x0foperation.proto\x12\x05proto\x1a\n" +
	"auth.proto\"\xba\x03\n" +
	"\bOpPlayer\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\x04 \x01(\tR\bgameName\x12\x15\n" +
	"\x06no_bet\x18\x05 \x01(\x03R\x05noBet\x12\x15\n" +
	"\x06no_win\x18\x06 \x01(\x03R\x05noWin\x12\x17\n" +
	"\ano_lost\x18\a \x01(\x03R\x06noLost\x12\x19\n" +
	"\bchip_win\x18\b \x01(\x04R\achipWin\x12&\n" +
	"\x0fchip_win_prefee\x18\t \x01(\x04R\rchipWinPrefee\x12\x1b\n" +
	"\tchip_lost\x18\n" +
	" \x01(\x04R\bchipLost\x12!\n" +
	"\fchip_balance\x18\v \x01(\x03R\vchipBalance\x12\x16\n" +
	"\x06action\x18\f \x01(\x03R\x06action\x12\x16\n" +
	"\x06status\x18\r \x01(\tR\x06status\x12\x1b\n" +
	"\tdate_unix\x18\x0e \x01(\x03R\bdateUnix\x12\x10\n" +
	"\x03mcb\x18\x0f \x01(\x03R\x03mcb\x12\x19\n" +
	"\buser_sid\x18\x10 \x01(\x03R\auserSid\"\xda\x01\n" +
	"\x0fOpPlayerRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tfrom_unix\x18\x03 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x04 \x01(\x03R\x06toUnix\x12\x16\n" +
	"\x06action\x18\x05 \x01(\x03R\x06action\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\a \x01(\x03R\x05limit\x12\x19\n" +
	"\buser_sid\x18\b \x01(\x03R\auserSid\"\xd4\x01\n" +
	"\x10OpPlayerResponse\x12.\n" +
	"\n" +
	"op_players\x18\x01 \x03(\v2\x0f.proto.OpPlayerR\topPlayers\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12$\n" +
	"\x0etotal_chip_win\x18\x05 \x01(\x04R\ftotalChipWin\x12&\n" +
	"\x0ftotal_chip_lost\x18\x06 \x01(\x04R\rtotalChipLost\"\xca\x02\n" +
	"\vMatchDetail\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\x02 \x01(\tR\bgameName\x12\x10\n" +
	"\x03mcb\x18\x03 \x01(\x03R\x03mcb\x12(\n" +
	"\x10num_match_played\x18\x04 \x01(\x03R\x0enumMatchPlayed\x12\x19\n" +
	"\bchip_fee\x18\x05 \x01(\x04R\achipFee\x12\x16\n" +
	"\x06detail\x18\x06 \x01(\tR\x06detail\x12\x19\n" +
	"\btable_id\x18\a \x01(\x03R\atableId\x12\x1b\n" +
	"\tdate_unix\x18\b \x01(\x03R\bdateUnix\x12&\n" +
	"\x0fcreated_at_unix\x18\t \x01(\x03R\rcreatedAtUnix\x12\x19\n" +
	"\bchip_win\x18\n" +
	" \x01(\x03R\achipWin\x12\x1b\n" +
	"\tchip_lose\x18\v \x01(\x03R\bchipLose\"\xd0\x01\n" +
	"\x12MatchDetailRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x19\n" +
	"\buser_sid\x18\x04 \x01(\x03R\auserSid\x12\"\n" +
	"\ruser_pair_sid\x18\x05 \x01(\x03R\vuserPairSid\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\a \x01(\x03R\x06offset\"\x92\x01\n" +
	"\x13MatchDetailResponse\x127\n" +
	"\rmatch_details\x18\x01 \x03(\v2\x12.proto.MatchDetailR\fmatchDetails\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x14\n" +
	"\x05limit\x18\x06 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\a \x01(\x03R\x06offset\"\xb2\x01\n" +
	"\n" +
	"PlayerData\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04chip\x18\x02 \x01(\x03R\x04chip\x12\x19\n" +
	"\bchip_add\x18\x03 \x01(\x03R\achipAdd\x12\x19\n" +
	"\buser_sid\x18\b \x01(\x03R\auserSid\x12\x19\n" +
	"\bchip_fee\x18\t \x01(\x03R\achipFee\x12&\n" +
	"\x0fchip_add_prefee\x18\n" +
	" \x01(\x03R\rchipAddPrefee\"\xa4\x01\n" +
	"\tMatchData\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_code\x18\x03 \x01(\tR\bgameCode\x12\x10\n" +
	"\x03mcb\x18\x04 \x01(\x03R\x03mcb\x12\x19\n" +
	"\bchip_fee\x18\x05 \x01(\x03R\achipFee\x12\x19\n" +
	"\bmatch_id\x18\x06 \x01(\tR\amatchId\x12\x19\n" +
	"\btable_id\x18\a \x01(\tR\atableId\"o\n" +
	"\bOpReport\x122\n" +
	"\vplayer_data\x18\x01 \x03(\v2\x11.proto.PlayerDataR\n" +
	"playerData\x12/\n" +
	"\n" +
	"match_data\x18\x02 \x01(\v2\x10.proto.MatchDataR\tmatchData\"\xe8\x01\n" +
	"\rGoldStatistic\x12(\n" +
	"\x10time_update_unix\x18\x01 \x01(\x03R\x0etimeUpdateUnix\x12\x10\n" +
	"\x03pay\x18\x02 \x01(\x03R\x03pay\x12\x1c\n" +
	"\tpromotion\x18\x03 \x01(\x03R\tpromotion\x12/\n" +
	"\n" +
	"match_data\x18\x04 \x03(\v2\x10.proto.MatchDataR\tmatchData\x12\x1d\n" +
	"\n" +
	"ag_cashout\x18\x05 \x01(\x03R\tagCashout\x12\x17\n" +
	"\aag_bank\x18\x06 \x01(\x03R\x06agBank\x12\x14\n" +
	"\x05chips\x18\a \x01(\x03R\x05chips\"z\n" +
	"\x14GoldStatisticRequest\x12\x1b\n" +
	"\tfrom_unix\x18\x01 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x02 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\"\x9a\x01\n" +
	"\x15GoldStatisticResponse\x12=\n" +
	"\x0fgold_statistics\x18\x01 \x03(\v2\x14.proto.GoldStatisticR\x0egoldStatistics\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\"\xb4\x06\n" +
	"\rUserStatistic\x12,\n" +
	"\x12total_chip_deposit\x18\x01 \x01(\x03R\x10totalChipDeposit\x12/\n" +
	"\x14total_chip_with_draw\x18\x02 \x01(\x03R\x11totalChipWithDraw\x12$\n" +
	"\x0etotal_chip_win\x18\x03 \x01(\x03R\ftotalChipWin\x121\n" +
	"\x15total_chip_win_prefee\x18\x04 \x01(\x03R\x12totalChipWinPrefee\x12&\n" +
	"\x0ftotal_chip_lose\x18\x05 \x01(\x03R\rtotalChipLose\x120\n" +
	"\x14total_chip_promotion\x18\x06 \x01(\x03R\x12totalChipPromotion\x12&\n" +
	"\x0ftotal_chip_send\x18\a \x01(\x03R\rtotalChipSend\x12&\n" +
	"\x0ftotal_chip_recv\x18\b \x01(\x03R\rtotalChipRecv\x12\x19\n" +
	"\bco_ratio\x18\t \x01(\x03R\acoRatio\x121\n" +
	"\x15total_chip_deposit_3d\x18\n" +
	" \x01(\x03R\x12totalChipDeposit3d\x124\n" +
	"\x17total_chip_with_draw_3d\x18\v \x01(\x03R\x13totalChipWithDraw3d\x12\x12\n" +
	"\x04luck\x18\f \x01(\x03R\x04luck\x121\n" +
	"\x15user_create_time_unix\x18\r \x01(\x03R\x12userCreateTimeUnix\x12S\n" +
	"\x18user_stat_game_histories\x18\x0e \x03(\v2\x1a.proto.UserStatGameHistoryR\x15userStatGameHistories\x12C\n" +
	"\x0frecv_chip_stats\x18\x0f \x03(\v2\x1b.proto.UserTransferGoldStatR\rrecvChipStats\x12C\n" +
	"\x0fsend_chip_stats\x18\x10 \x03(\v2\x1b.proto.UserTransferGoldStatR\rsendChipStats\x12\x17\n" +
	"\auser_id\x18\x11 \x01(\tR\x06userId\"\x9d\x01\n" +
	"\x14UserStatisticRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x19\n" +
	"\buser_sid\x18\x04 \x01(\x03R\auserSid\x12\x1b\n" +
	"\tdevice_id\x18\x05 \x01(\tR\bdeviceId\"\xa7\x02\n" +
	"\x13UserStatGameHistory\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\x03R\x06gameId\x12\x1b\n" +
	"\tgame_name\x18\x02 \x01(\tR\bgameName\x12$\n" +
	"\x0etotal_chip_win\x18\x03 \x01(\x03R\ftotalChipWin\x121\n" +
	"\x15total_chip_win_prefee\x18\x04 \x01(\x03R\x12totalChipWinPrefee\x12&\n" +
	"\x0ftotal_chip_lost\x18\x05 \x01(\x03R\rtotalChipLost\x12\x1e\n" +
	"\vno_game_win\x18\x06 \x01(\x03R\tnoGameWin\x12 \n" +
	"\fno_game_lost\x18\a \x01(\x03R\n" +
	"noGameLost\x12\x17\n" +
	"\auser_id\x18\b \x01(\tR\x06userId\"\xba\x01\n" +
	"\x14UserTransferGoldStat\x12 \n" +
	"\fuser_send_id\x18\x01 \x01(\tR\n" +
	"userSendId\x12$\n" +
	"\x0euser_send_name\x18\x02 \x01(\tR\fuserSendName\x12 \n" +
	"\fuser_recv_id\x18\x03 \x01(\tR\n" +
	"userRecvId\x12$\n" +
	"\x0euser_recv_name\x18\x04 \x01(\tR\fuserRecvName\x12\x12\n" +
	"\x04chip\x18\x05 \x01(\x03R\x04chip\"l\n" +
	"\bUserInfo\x12(\n" +
	"\aprofile\x18\x01 \x01(\v2\x0e.proto.ProfileR\aprofile\x12\x19\n" +
	"\btotal_in\x18\x02 \x01(\x03R\atotalIn\x12\x1b\n" +
	"\ttotal_out\x18\x03 \x01(\x03R\btotalOut\"\xcc\x01\n" +
	"\x10UserInfoResponse\x12.\n" +
	"\n" +
	"user_infos\x18\x01 \x03(\v2\x0f.proto.UserInfoR\tuserInfos\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x19\n" +
	"\btotal_in\x18\x04 \x01(\x03R\atotalIn\x12\x1b\n" +
	"\ttotal_out\x18\x05 \x01(\x03R\btotalOut\x12\x1d\n" +
	"\n" +
	"total_lock\x18\x06 \x01(\x03R\ttotalLock\"\xc3\x01\n" +
	"\aCashOut\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x0e\n" +
	"\x02ci\x18\x03 \x01(\x03R\x02ci\x12\x10\n" +
	"\x03cio\x18\x04 \x01(\x03R\x03cio\x12\x0e\n" +
	"\x02co\x18\x05 \x01(\x03R\x02co\x12\x10\n" +
	"\x03coo\x18\x06 \x01(\x03R\x03coo\x12#\n" +
	"\rlucky_percent\x18\a \x01(\x03R\fluckyPercent\x12\x19\n" +
	"\buser_sid\x18\b \x01(\x03R\auserSid\"\xb2\x01\n" +
	"\n" +
	"TopCashOut\x12*\n" +
	"\bcashouts\x18\x01 \x03(\v2\x0e.proto.CashOutR\bcashouts\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05total\x18\x06 \x01(\x03R\x05total\"\xde\x03\n" +
	"\x03Vip\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x10\n" +
	"\x03cio\x18\x03 \x01(\x03R\x03cio\x12\x1d\n" +
	"\n" +
	"total_chip\x18\x04 \x01(\x03R\ttotalChip\x12/\n" +
	"\x14last_login_time_unix\x18\x05 \x01(\x03R\x11lastLoginTimeUnix\x12*\n" +
	"\x11created_time_unix\x18\x06 \x01(\x03R\x0fcreatedTimeUnix\x12\x19\n" +
	"\bref_game\x18\a \x01(\tR\arefGame\x12\x0e\n" +
	"\x02ci\x18\b \x01(\x03R\x02ci\x12\x0e\n" +
	"\x02co\x18\t \x01(\x03R\x02co\x12\x12\n" +
	"\x04ci2d\x18\n" +
	" \x01(\x03R\x04ci2d\x12\x12\n" +
	"\x04co2d\x18\v \x01(\x03R\x04co2d\x12#\n" +
	"\rlucky_percent\x18\f \x01(\x03R\fluckyPercent\x12\x1b\n" +
	"\tis_banned\x18\r \x01(\bR\bisBanned\x12\x1b\n" +
	"\tis_online\x18\x0e \x01(\bR\bisOnline\x12\x19\n" +
	"\btotal_in\x18\x0f \x01(\x03R\atotalIn\x12\x1b\n" +
	"\ttotal_out\x18\x10 \x01(\x03R\btotalOut\x12\x19\n" +
	"\buser_sid\x18\x11 \x01(\x03R\auserSid\"\xbd\x01\n" +
	"\x06TopVip\x12\x1e\n" +
	"\x04vips\x18\x01 \x03(\v2\n" +
	".proto.VipR\x04vips\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x19\n" +
	"\bref_game\x18\x06 \x01(\tR\arefGame\x12\x14\n" +
	"\x05total\x18\a \x01(\x03R\x05total\"\x81\x02\n" +
	"\x03Win\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x10\n" +
	"\x03vip\x18\x03 \x01(\x03R\x03vip\x12\x12\n" +
	"\x04gold\x18\x04 \x01(\x03R\x04gold\x12\x0e\n" +
	"\x02ag\x18\x05 \x01(\x03R\x02ag\x12\x15\n" +
	"\x06ag_win\x18\x06 \x01(\x03R\x05agWin\x12\x0e\n" +
	"\x02co\x18\a \x01(\x03R\x02co\x12\x0e\n" +
	"\x02ci\x18\b \x01(\x03R\x02ci\x12\x17\n" +
	"\aco_rate\x18\t \x01(\x03R\x06coRate\x12#\n" +
	"\rlucky_percent\x18\n" +
	" \x01(\x03R\fluckyPercent\x12\x19\n" +
	"\buser_sid\x18\v \x01(\x03R\auserSid\"\xd6\x01\n" +
	"\x06TopWin\x12\x1e\n" +
	"\x04wins\x18\x01 \x03(\v2\n" +
	".proto.WinR\x04wins\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x19\n" +
	"\bref_game\x18\x06 \x01(\tR\arefGame\x12\x14\n" +
	"\x05total\x18\a \x01(\x03R\x05total\x12\x17\n" +
	"\agame_id\x18\b \x01(\x03R\x06gameId\"\x84\x02\n" +
	"\x04Lost\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x02 \x01(\tR\buserName\x12\x10\n" +
	"\x03vip\x18\x03 \x01(\x03R\x03vip\x12\x12\n" +
	"\x04gold\x18\x04 \x01(\x03R\x04gold\x12\x0e\n" +
	"\x02ag\x18\x05 \x01(\x03R\x02ag\x12\x17\n" +
	"\aag_lost\x18\x06 \x01(\x03R\x06agLost\x12\x0e\n" +
	"\x02co\x18\a \x01(\x03R\x02co\x12\x0e\n" +
	"\x02ci\x18\b \x01(\x03R\x02ci\x12\x17\n" +
	"\aco_rate\x18\t \x01(\x03R\x06coRate\x12#\n" +
	"\rlucky_percent\x18\n" +
	" \x01(\x03R\fluckyPercent\x12\x19\n" +
	"\buser_sid\x18\v \x01(\x03R\auserSid\"\xda\x01\n" +
	"\aTopLost\x12!\n" +
	"\x05losts\x18\x01 \x03(\v2\v.proto.LostR\x05losts\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\x12\x19\n" +
	"\bref_game\x18\x06 \x01(\tR\arefGame\x12\x14\n" +
	"\x05total\x18\a \x01(\x03R\x05total\x12\x17\n" +
	"\agame_id\x18\b \x01(\x03R\x06gameId\"\x93\x01\n" +
	"\x12TransactionRequest\x12\x19\n" +
	"\buser_sid\x18\x01 \x01(\x03R\auserSid\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset\"\xf9\x01\n" +
	"\x11TransactionDetail\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\buser_sid\x18\x03 \x01(\x03R\auserSid\x12\x1b\n" +
	"\tuser_name\x18\x04 \x01(\tR\buserName\x12\x10\n" +
	"\x03vip\x18\x05 \x01(\x03R\x03vip\x12\x0e\n" +
	"\x02rp\x18\x06 \x01(\x03R\x02rp\x12\x1d\n" +
	"\n" +
	"type_topup\x18\a \x01(\tR\ttypeTopup\x12\x1f\n" +
	"\vchips_topup\x18\b \x01(\x03R\n" +
	"chipsTopup\x12!\n" +
	"\fcreated_unix\x18\t \x01(\x03R\vcreatedUnix\"\xb3\x01\n" +
	"\x13TransactionResponse\x12=\n" +
	"\rtrans_details\x18\x01 \x03(\v2\x18.proto.TransactionDetailR\ftransDetails\x12\x19\n" +
	"\btotal_rp\x18\x02 \x01(\x03R\atotalRp\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x14\n" +
	"\x05total\x18\x05 \x01(\x03R\x05total\"\xa2\x02\n" +
	"\n" +
	"IAPSummary\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12$\n" +
	"\x0ecreate_at_unix\x18\x03 \x01(\x03R\fcreateAtUnix\x12\x1f\n" +
	"\vtotal_topup\x18\x04 \x01(\x03R\n" +
	"totalTopup\x12\x1b\n" +
	"\tvip_point\x18\x05 \x01(\x03R\bvipPoint\x12#\n" +
	"\rtotal_cashout\x18\x06 \x01(\x03R\ftotalCashout\x12\x10\n" +
	"\x03vip\x18\a \x01(\x03R\x03vip\x12%\n" +
	"\x0ecurrency_topup\x18\b \x01(\x03R\rcurrencyTopup\x12)\n" +
	"\x10currency_cashout\x18\t \x01(\x03R\x0fcurrencyCashout\"\xa5\x05\n" +
	"\bCashInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12$\n" +
	"\x0ecreate_at_unix\x18\x03 \x01(\x03R\fcreateAtUnix\x12\x14\n" +
	"\x05chips\x18\x04 \x01(\x03R\x05chips\x12\x1b\n" +
	"\tvip_point\x18\x05 \x01(\x03R\bvipPoint\x12\x1c\n" +
	"\tpublisher\x18\x06 \x01(\x03R\tpublisher\x12\x1a\n" +
	"\bcurrency\x18\a \x01(\x03R\bcurrency\x12(\n" +
	"\x10currency_unit_id\x18\b \x01(\x03R\x0ecurrencyUnitId\x12\x19\n" +
	"\btrans_id\x18\t \x01(\tR\atransId\x12\x1b\n" +
	"\tdate_unix\x18\n" +
	" \x01(\x03R\bdateUnix\x12'\n" +
	"\x0fnum_transaction\x18\v \x01(\x03R\x0enumTransaction\x12%\n" +
	"\x0ecurrency_value\x18\f \x01(\x03R\rcurrencyValue\x12,\n" +
	"\x12currency_unit_name\x18\r \x01(\tR\x10currencyUnitName\x12j\n" +
	"\x1bnum_trans_by_currency_value\x18\x0e \x03(\v2,.proto.CashInfo.NumTransByCurrencyValueEntryR\x17numTransByCurrencyValue\x12,\n" +
	"\x12num_account_unique\x18\x0f \x01(\x03R\x10numAccountUnique\x12\x17\n" +
	"\anet_rev\x18\x10 \x01(\x03R\x06netRev\x1aJ\n" +
	"\x1cNumTransByCurrencyValueEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xcb\x01\n" +
	"\x0fCashInfoRequest\x12\x1b\n" +
	"\tfrom_unix\x18\x01 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x02 \x01(\x03R\x06toUnix\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12\x1c\n" +
	"\tpublisher\x18\x05 \x01(\x03R\tpublisher\x126\n" +
	"\vcurrency_id\x18\x06 \x01(\x0e2\x15.proto.CurrencyUnitIdR\n" +
	"currencyId\"\xdd\x01\n" +
	"\x10CashInfoResponse\x124\n" +
	"\rcashout_infos\x18\x01 \x03(\v2\x0f.proto.CashInfoR\fcashoutInfos\x12\x1d\n" +
	"\n" +
	"total_cash\x18\x02 \x01(\x03R\ttotalCash\x12#\n" +
	"\rtotal_account\x18\x03 \x01(\x03R\ftotalAccount\x12\x19\n" +
	"\bavg_cash\x18\x04 \x01(\x03R\aavgCash\x12\x1b\n" +
	"\ttotal_rev\x18\x05 \x01(\x03R\btotalRev\x12\x17\n" +
	"\aavg_rev\x18\x06 \x01(\x03R\x06avgRev\"K\n" +
	"\rUserGameCount\x12\x1b\n" +
	"\tdate_unix\x18\x01 \x01(\x03R\bdateUnix\x12\x1d\n" +
	"\n" +
	"count_game\x18\x02 \x01(\x03R\tcountGame\"\x81\x01\n" +
	"\rUserGameStats\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\agame_no\x18\x02 \x01(\x03R\x06gameNo\x12>\n" +
	"\x10user_game_counts\x18\x03 \x03(\v2\x14.proto.UserGameCountR\x0euserGameCounts\"\x84\x01\n" +
	"\fPaymentByVip\x12\x10\n" +
	"\x03vip\x18\x01 \x01(\x03R\x03vip\x12\x0e\n" +
	"\x02ci\x18\x02 \x01(\x03R\x02ci\x12\x14\n" +
	"\x05chips\x18\x03 \x01(\x03R\x05chips\x12\x1b\n" +
	"\tnum_trans\x18\x04 \x01(\x03R\bnumTrans\x12\x1f\n" +
	"\vnum_account\x18\x05 \x01(\x03R\n" +
	"numAccount\"v\n" +
	"\rPaymentsByVip\x12/\n" +
	"\bpayments\x18\x01 \x03(\v2\x13.proto.PaymentByVipR\bpayments\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\"\x84\x01\n" +
	"\fCashoutByVip\x12\x10\n" +
	"\x03vip\x18\x01 \x01(\x03R\x03vip\x12\x0e\n" +
	"\x02co\x18\x02 \x01(\x03R\x02co\x12\x14\n" +
	"\x05chips\x18\x03 \x01(\x03R\x05chips\x12\x1b\n" +
	"\tnum_trans\x18\x04 \x01(\x03R\bnumTrans\x12\x1f\n" +
	"\vnum_account\x18\x05 \x01(\x03R\n" +
	"numAccount\"v\n" +
	"\rCashoutsByVip\x12/\n" +
	"\bcashouts\x18\x01 \x03(\v2\x13.proto.CashoutByVipR\bcashouts\x12\x1b\n" +
	"\tfrom_unix\x18\x02 \x01(\x03R\bfromUnix\x12\x17\n" +
	"\ato_unix\x18\x03 \x01(\x03R\x06toUnix\"\xab\x03\n" +
	"\bVipStats\x12(\n" +
	"\x10time_update_unix\x18\x01 \x01(\x03R\x0etimeUpdateUnix\x12\x19\n" +
	"\buser_sid\x18\x02 \x01(\x03R\auserSid\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\tuser_name\x18\x04 \x01(\tR\buserName\x12\x15\n" +
	"\x06no_win\x18\x05 \x01(\x03R\x05noWin\x12\x17\n" +
	"\ano_lose\x18\x06 \x01(\x03R\x06noLose\x12\x1b\n" +
	"\tchips_win\x18\a \x01(\x03R\bchipsWin\x12\x1d\n" +
	"\n" +
	"chips_lose\x18\b \x01(\x03R\tchipsLose\x12\x17\n" +
	"\acash_in\x18\t \x01(\x03R\x06cashIn\x12\x19\n" +
	"\bcash_in5\x18\n" +
	" \x01(\x03R\acashIn5\x12\x1b\n" +
	"\tcash_in10\x18\v \x01(\x03R\bcashIn10\x12\x19\n" +
	"\bcash_out\x18\f \x01(\x03R\acashOut\x12\x1b\n" +
	"\tcash_out5\x18\r \x01(\x03R\bcashOut5\x12\x1d\n" +
	"\n" +
	"cash_out10\x18\x0e \x01(\x03R\tcashOut10\x12\x10\n" +
	"\x03vip\x18\x0f \x01(\x03R\x03vip\"\xa2\x01\n" +
	"\x0fVipStatsReponse\x12.\n" +
	"\n" +
	"vips_stats\x18\x01 \x03(\v2\x0f.proto.VipStatsR\tvipsStats\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x1b\n" +
	"\tfrom_unix\x18\x03 \x01(\x03R\bfromUnix\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\x12\x16\n" +
	"\x06offset\x18\x05 \x01(\x03R\x06offset*K\n" +
	"\x0eCurrencyUnitId\x12 \n" +
	"\x1cCURRENCY_UNIT_ID_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CURRENCY_UNIT_ID_VN\x10\x01B(Z&github.com/nk-nigeria/cgp-common/protob\x06proto3"

var (
	file_operation_proto_rawDescOnce sync.Once
	file_operation_proto_rawDescData []byte
)

func file_operation_proto_rawDescGZIP() []byte {
	file_operation_proto_rawDescOnce.Do(func() {
		file_operation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_operation_proto_rawDesc), len(file_operation_proto_rawDesc)))
	})
	return file_operation_proto_rawDescData
}

var file_operation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_operation_proto_msgTypes = make([]protoimpl.MessageInfo, 42)
var file_operation_proto_goTypes = []any{
	(CurrencyUnitId)(0),           // 0: proto.CurrencyUnitId
	(*OpPlayer)(nil),              // 1: proto.OpPlayer
	(*OpPlayerRequest)(nil),       // 2: proto.OpPlayerRequest
	(*OpPlayerResponse)(nil),      // 3: proto.OpPlayerResponse
	(*MatchDetail)(nil),           // 4: proto.MatchDetail
	(*MatchDetailRequest)(nil),    // 5: proto.MatchDetailRequest
	(*MatchDetailResponse)(nil),   // 6: proto.MatchDetailResponse
	(*PlayerData)(nil),            // 7: proto.PlayerData
	(*MatchData)(nil),             // 8: proto.MatchData
	(*OpReport)(nil),              // 9: proto.OpReport
	(*GoldStatistic)(nil),         // 10: proto.GoldStatistic
	(*GoldStatisticRequest)(nil),  // 11: proto.GoldStatisticRequest
	(*GoldStatisticResponse)(nil), // 12: proto.GoldStatisticResponse
	(*UserStatistic)(nil),         // 13: proto.UserStatistic
	(*UserStatisticRequest)(nil),  // 14: proto.UserStatisticRequest
	(*UserStatGameHistory)(nil),   // 15: proto.UserStatGameHistory
	(*UserTransferGoldStat)(nil),  // 16: proto.UserTransferGoldStat
	(*UserInfo)(nil),              // 17: proto.UserInfo
	(*UserInfoResponse)(nil),      // 18: proto.UserInfoResponse
	(*CashOut)(nil),               // 19: proto.CashOut
	(*TopCashOut)(nil),            // 20: proto.TopCashOut
	(*Vip)(nil),                   // 21: proto.Vip
	(*TopVip)(nil),                // 22: proto.TopVip
	(*Win)(nil),                   // 23: proto.Win
	(*TopWin)(nil),                // 24: proto.TopWin
	(*Lost)(nil),                  // 25: proto.Lost
	(*TopLost)(nil),               // 26: proto.TopLost
	(*TransactionRequest)(nil),    // 27: proto.TransactionRequest
	(*TransactionDetail)(nil),     // 28: proto.TransactionDetail
	(*TransactionResponse)(nil),   // 29: proto.TransactionResponse
	(*IAPSummary)(nil),            // 30: proto.IAPSummary
	(*CashInfo)(nil),              // 31: proto.CashInfo
	(*CashInfoRequest)(nil),       // 32: proto.CashInfoRequest
	(*CashInfoResponse)(nil),      // 33: proto.CashInfoResponse
	(*UserGameCount)(nil),         // 34: proto.UserGameCount
	(*UserGameStats)(nil),         // 35: proto.UserGameStats
	(*PaymentByVip)(nil),          // 36: proto.PaymentByVip
	(*PaymentsByVip)(nil),         // 37: proto.PaymentsByVip
	(*CashoutByVip)(nil),          // 38: proto.CashoutByVip
	(*CashoutsByVip)(nil),         // 39: proto.CashoutsByVip
	(*VipStats)(nil),              // 40: proto.VipStats
	(*VipStatsReponse)(nil),       // 41: proto.VipStatsReponse
	nil,                           // 42: proto.CashInfo.NumTransByCurrencyValueEntry
	(*Profile)(nil),               // 43: proto.Profile
}
var file_operation_proto_depIdxs = []int32{
	1,  // 0: proto.OpPlayerResponse.op_players:type_name -> proto.OpPlayer
	4,  // 1: proto.MatchDetailResponse.match_details:type_name -> proto.MatchDetail
	7,  // 2: proto.OpReport.player_data:type_name -> proto.PlayerData
	8,  // 3: proto.OpReport.match_data:type_name -> proto.MatchData
	8,  // 4: proto.GoldStatistic.match_data:type_name -> proto.MatchData
	10, // 5: proto.GoldStatisticResponse.gold_statistics:type_name -> proto.GoldStatistic
	15, // 6: proto.UserStatistic.user_stat_game_histories:type_name -> proto.UserStatGameHistory
	16, // 7: proto.UserStatistic.recv_chip_stats:type_name -> proto.UserTransferGoldStat
	16, // 8: proto.UserStatistic.send_chip_stats:type_name -> proto.UserTransferGoldStat
	43, // 9: proto.UserInfo.profile:type_name -> proto.Profile
	17, // 10: proto.UserInfoResponse.user_infos:type_name -> proto.UserInfo
	19, // 11: proto.TopCashOut.cashouts:type_name -> proto.CashOut
	21, // 12: proto.TopVip.vips:type_name -> proto.Vip
	23, // 13: proto.TopWin.wins:type_name -> proto.Win
	25, // 14: proto.TopLost.losts:type_name -> proto.Lost
	28, // 15: proto.TransactionResponse.trans_details:type_name -> proto.TransactionDetail
	42, // 16: proto.CashInfo.num_trans_by_currency_value:type_name -> proto.CashInfo.NumTransByCurrencyValueEntry
	0,  // 17: proto.CashInfoRequest.currency_id:type_name -> proto.CurrencyUnitId
	31, // 18: proto.CashInfoResponse.cashout_infos:type_name -> proto.CashInfo
	34, // 19: proto.UserGameStats.user_game_counts:type_name -> proto.UserGameCount
	36, // 20: proto.PaymentsByVip.payments:type_name -> proto.PaymentByVip
	38, // 21: proto.CashoutsByVip.cashouts:type_name -> proto.CashoutByVip
	40, // 22: proto.VipStatsReponse.vips_stats:type_name -> proto.VipStats
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_operation_proto_init() }
func file_operation_proto_init() {
	if File_operation_proto != nil {
		return
	}
	file_auth_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_operation_proto_rawDesc), len(file_operation_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   42,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_operation_proto_goTypes,
		DependencyIndexes: file_operation_proto_depIdxs,
		EnumInfos:         file_operation_proto_enumTypes,
		MessageInfos:      file_operation_proto_msgTypes,
	}.Build()
	File_operation_proto = out.File
	file_operation_proto_goTypes = nil
	file_operation_proto_depIdxs = nil
}
