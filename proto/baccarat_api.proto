syntax = "proto3";

package api;

import "chinese_poker_game_api.proto";

option go_package = "github.com/nakamaFramework/cgp-bing-module/api";

enum BaccaratBetCell {
  BACCARAT_BET_CELL_BACCARAT_CELL_UNSPECIFIED = 0;
  BACCARAT_BET_CELL_BACCARAT_CELL_PLAYER = 1;
  BACCARAT_BET_CELL_BACCARAT_CELL_BANKER = 2;
  BACCARAT_BET_CELL_BACCARAT_CELL_TIE = 3;
  BACCARAT_BET_CELL_BACCARAT_CELL_PLAYER_PAIR = 4;
  BACCARAT_BET_CELL_BACCARAT_CELL_BANKER_PAIR = 5;
}

enum BaccaratBetActionType {
  BACCARAT_BET_ACTION_TYPE_BACCARAT_BET_NORMAL_UNSPECIFIED = 0;
  BACCARAT_BET_ACTION_TYPE_BACCARAT_BET_REBET = 1;
  BACCARAT_BET_ACTION_TYPE_BACCARAT_BET_DOUBLE = 2;
}

message BaccaratBet {
  int64 chips = 2;
  BaccaratBetCell cell = 3;
}

message BaccaratBetResult {
  BaccaratBet bet = 1;
  bool is_win = 2;
}

message BaccaratPlayerBet {
  string user_id = 1;
  BaccaratBetActionType action_type = 2;
  repeated BaccaratBet bets = 3;
}

message BaccaratPlayerBetResult {
  string user_id = 1;
  repeated BaccaratBetResult lists = 2;
}

message BaccaratHand {
  repeated Card cards = 1;
  int32 point = 2;
  bool is_pair = 3;
}

message BaccaratHands {
  BaccaratHand banker = 1;
  BaccaratHand player = 2;
}

message BaccaratGameFinish {
  BaccaratHands hand = 1;
  repeated BaccaratBetCell win_cells = 3;
  repeated BaccaratPlayerBetResult list_bet_results = 4;
}

message BaccaratBetCellInfo {
  BaccaratBetCell cell = 1;
  int64 chips = 2;
  int32 n_user_bet = 3;
}

message BaccaratSimpleHistory {
  int32 banker_win = 1;
  int32 player_win = 2;
  int32 tie = 3;
  int32 banker_pair = 4;
  int32 player_pair = 5;
}

message BaccaratUpdateDesk {
  int32 n_players = 1;
  bool is_update_user_bet = 2;
  bool is_update_desk_cell = 3;
  bool is_update_game_history = 4;
  BaccaratPlayerBet user_bet = 5;
  repeated BaccaratBetCellInfo desk_cells = 6;
  BaccaratSimpleHistory history = 7;
}

enum BaccaratBetRejectedReason {
  BACCARAT_BET_REJECTED_REASON_BACCARAT_BET_REJECTED_UNSPECIFIED = 0;
  BACCARAT_BET_REJECTED_REASON_BACCARAT_BET_REJECTED_BALANCE_NOT_ENOUGH = 1;
  BACCARAT_BET_REJECTED_REASON_BACCARAT_BET_REJECTED_PREVIOUS_BET_NOT_EXIST = 2;
  BACCARAT_BET_REJECTED_REASON_BACCARAT_BET_REJECTED_ALREADY_BET = 3;
  BACCARAT_BET_REJECTED_REASON_BACCARAT_BET_REJECTED_EXCEED_MAX_BET_ALLOWED = 4;
}

message BaccaratBetActionReject {
  BaccaratBetRejectedReason reason = 1;
}

// send deal card server->client, is_player = true mean that that card is for
// player, else banker append those card into respectively player hand hands
// field is purely for sync between server and client, use it as u want
message BaccaratUpdateDeal {
  bool is_player = 1;
  repeated Card cards = 2;
  BaccaratHands hands = 3;
}
